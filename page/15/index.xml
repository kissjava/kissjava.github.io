<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>清风徐来</title>
    <link>https://kissjava.cn/</link>
    <description>Recent content on 清风徐来</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>kissjava.cn</copyright>
    <lastBuildDate>Sat, 27 Jun 2020 09:51:55 +0800</lastBuildDate>
    
        <atom:link href="https://kissjava.cn/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>SVN小记</title>
        <link>https://kissjava.cn/posts/svn%E5%B0%8F%E8%AE%B0/</link>
        <pubDate>Fri, 16 Apr 2010 17:30:51 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/svn%E5%B0%8F%E8%AE%B0/</guid>
        <description>清风徐来 https://kissjava.cn/posts/svn%E5%B0%8F%E8%AE%B0/ -&lt;p&gt;&lt;!-- raw HTML omitted --&gt;名词解释：&lt;!-- raw HTML omitted --&gt;
修订版（revision）：可以认为是某个文件在其生命周期内各个保存的快照，每个快照和一个时间区间对应。
版本库（Repository）：存放修订版的数据库
本地工作拷贝（Local working copy）：修订版在本地的副本
版本的检入（Check in）：本地副本提交到服务器的版本库
检出（Check out）：从服务器的版本库中取出修订版成为本地副本
版本号的来源：有两种策略，基于文件的计数和基于仓库的计数，subversion使用后者
标签（Tags）：为版本加一个名字，便于检出
分支（Branches）：修订版打分支，以后可以平行修改，互不干扰
合并（Merging）：将分支的修订版合并为一个新的修订版
锁（Locking）：为修订版枷锁
冲突（Conflict）：并发版本控制时防止修订版混乱的错误机制&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;创建版本库&lt;!-- raw HTML omitted --&gt;
创建服务器端版本库
命令行：
svnadmin create file_path/repo_name&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;初始导入（import）&lt;!-- raw HTML omitted --&gt;
通过命令行导入：
svn import -m &amp;ldquo;init import&amp;rdquo; http://10.0.0.6/svn/teaching/
该命令可将当前路径下文件导入到版本库中。&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;检出（checkout）&lt;!-- raw HTML omitted --&gt;
通过命令行检入：
svn co http://10.0.0.6/svn/teaching/ mysvntest
或者：
svn checkout http://10.0.0.6/svn/teaching/ mysvntest
最后取出来的新目录名，不给定就会用路径的最后一个目录名（如这里的teaching，这里给了就是mysvntest）&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;保持更新（update）&lt;!-- raw HTML omitted --&gt;
命令行：
svn update
或者
svn up
多人合作时：
更新要经常频繁的做，尽量让问题及早暴露，便于处理。
&lt;!-- raw HTML omitted --&gt;提交代码前要更新&lt;!-- raw HTML omitted --&gt;，否则容易产生版本冲突。
通过第一步import后的那个目录并没有默认建立svn与远程的关系,需要手动从服务器checkout回服务器的版本到本地, 才算正式建立与远程的关系,才能直接 svn up……&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;添加（add）&lt;!-- raw HTML omitted --&gt;
命令行：
svn add file_path&lt;/p&gt;
&lt;p&gt;告知svn服务器，添加目录和/或文件到服务器上，这个操作类似SQL的insert，但是并没有真的操作，直到commit。&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;提交改动（commit）&lt;!-- raw HTML omitted --&gt;
相当于通用概念：检入（checkin）。
命令行：
svn commit
或者：
svn ci
&lt;!-- raw HTML omitted --&gt;要求：一般要注明修改的原因 &lt;!-- raw HTML omitted --&gt;
svn ci -m &amp;ldquo;修改bug #224&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;要求：提交之前要做更新&lt;!-- raw HTML omitted --&gt;
svn up
svn ci -m &amp;ldquo;修改bug #224&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;还原改动&lt;!-- raw HTML omitted --&gt;
对应提交(commit)，要有类似回滚（rollback）的操作。
svn revert&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; “还原”已提交的改动&lt;!-- raw HTML omitted --&gt;
revert只适合未提交的情况。
如果已经提交，发现问题，要回退到之前的修订版。
首先：
svn up
让本地工作拷贝更新到最新状态。
然后：
svn log your_file_path
查看文件日志，这时候提交时填写的说明信息就派上用场了。
再，查看两个修订版之间的不同：
svn diff -r 旧修订版序号:新修订版序号 your_file_path&lt;/p&gt;
&lt;p&gt;决定用哪个旧的修订版号后，用旧的修订版号文件覆盖新的修订版号文件。
svn merge -r 新修订版序号:旧修订版序号 your_file_path
还需要：
svn commit -m &amp;ldquo;恢复到某修订版（某修订版作废）&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;拷贝文件和目录&lt;!-- raw HTML omitted --&gt;
命令行：
svn copy path/file_name newpath/new_file_name
svn commit -m &amp;ldquo;xxxx&amp;rdquo;
或者：
svn cp path/file_name newpath/new_file_name
svn commit -m &amp;ldquo;xxxx&amp;rdquo;
svn的copy，是很重要的工具，版本分支和标签等概念都通过它实现。&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;重命名目录/文件&lt;!-- raw HTML omitted --&gt;
命令行：
svn move file_name new_file_name
或者：
svn mv file_name new_file_name&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;处理合并冲突&lt;!-- raw HTML omitted --&gt;
svn默认不对文件加锁。
如果不同人编辑了同一个文件的不同部分，提交时会自动合并。
如果不同人编辑了同一个文件的同一部分，后提交者会报告合并冲突。
解决方法（人工仲裁）：
放弃改动；
坚持你的改动，找到.mine的文件名，恢复为原文件名，然后执行：
svn resolved file_name
注意: 本子命令不会依语法来解决冲突或是移除冲突标记；它只是移除冲突的相关文件，然后让 PATH 可以再次提交。&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;删除文件&lt;!-- raw HTML omitted --&gt;
将本地工作拷贝删除。
命令行：
svn delete file_path
或者：
svn del file_path&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;版本库创建策略&lt;!-- raw HTML omitted --&gt;
单一的版本库保存一个项目。
单一的版本库保存多个项目。
多个版本库。&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;使用标签和分支&lt;!-- raw HTML omitted --&gt;
在svn中标签和分支都源于copy命令。
3个约定俗成的目录：
trunk：主干
branches：分支
tags：标签&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;发布分支：&lt;!-- raw HTML omitted --&gt;
svn cp -m &amp;ldquo;创建用于实现radio标签的分支&amp;rdquo; &lt;a href=&#34;https://easymorse-simpletag.googlecode.com/svn/branches/simpletag_select_1&#34;&gt;https://easymorse-simpletag.googlecode.com/svn/branches/simpletag_select_1&lt;/a&gt; &lt;a href=&#34;https://easymorse-simpletag.googlecode.com/svn/branches/simpletag_select_2&#34;&gt;https://easymorse-simpletag.googlecode.com/svn/branches/simpletag_select_2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;切换分支： &lt;!-- raw HTML omitted --&gt;
svn switch &lt;a href=&#34;https://easymorse-simpletag.googlecode.com/svn/branches/simpletag_select_2&#34;&gt;https://easymorse-simpletag.googlecode.com/svn/branches/simpletag_select_2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;合并分支需要两个步骤：&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;合并操作
svn merge -r 33:HEAD &lt;a href=&#34;https://easymorse-simpletag.googlecode.com/svn/branches/simpletag_select_2&#34;&gt;https://easymorse-simpletag.googlecode.com/svn/branches/simpletag_select_2&lt;/a&gt;
或者：
svn merge &lt;a href=&#34;https://easymorse-simpletag.googlecode.com/svn/trunk/simpletag@HEAD&#34;&gt;https://easymorse-simpletag.googlecode.com/svn/trunk/simpletag@HEAD&lt;/a&gt; &lt;a href=&#34;https://easymorse-simpletag.googlecode.com/svn/branches/simpletag_select_1@HEAD&#34;&gt;https://easymorse-simpletag.googlecode.com/svn/branches/simpletag_select_1@HEAD&lt;/a&gt;
提交。&lt;/p&gt;
- https://kissjava.cn/posts/svn%E5%B0%8F%E8%AE%B0/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>socks5 proxy 折腾记</title>
        <link>https://kissjava.cn/posts/socks5-proxy-%E6%8A%98%E8%85%BE%E8%AE%B0/</link>
        <pubDate>Sat, 27 Mar 2010 09:53:02 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/socks5-proxy-%E6%8A%98%E8%85%BE%E8%AE%B0/</guid>
        <description>清风徐来 https://kissjava.cn/posts/socks5-proxy-%E6%8A%98%E8%85%BE%E8%AE%B0/ -&lt;p&gt;需要在服务器上装sock5 proxy，服务器平台是Redhat enterprise linux5,淡水要在有限的时间里去折腾它。
google之。
找到了socks5-v1.0r11编译报错:(
再google之。。。
又转找到ss5-3.6.4-3, 编译,又报错:(
时间有限，精力有限，关键是能力有限。。
最后google之。。。。。。
找到Antinat。看似很方便的样子。官网：http://antinat.sourceforge.net/
下载：
antinat-0.90-1.i386.rpm
antinat-libs-0.90-1.i386.rpm
先rpm -ivh antinat-libs-0.90-1.i386.rpm
再rpm -ivh antinat-0.90-1.i386.rpm
搞定。
也可以下载：antinat-0.90.tar.bz2 编译安装。
tar jvxf antinat-0.90.tar.bz2
cd antinat-0.90
./configure
make install
cp etc/antinat.xml.allopen /usr/local/etc/antinat.xml
配置端口：
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;    &amp;lt;port value=&#39;1080&#39;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- raw HTML omitted --&gt;
- https://kissjava.cn/posts/socks5-proxy-%E6%8A%98%E8%85%BE%E8%AE%B0/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>php5.3废弃函数</title>
        <link>https://kissjava.cn/posts/php5.3%E5%BA%9F%E5%BC%83%E5%87%BD%E6%95%B0/</link>
        <pubDate>Sun, 14 Mar 2010 19:58:36 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/php5.3%E5%BA%9F%E5%BC%83%E5%87%BD%E6%95%B0/</guid>
        <description>清风徐来 https://kissjava.cn/posts/php5.3%E5%BA%9F%E5%BC%83%E5%87%BD%E6%95%B0/ -&lt;p&gt;php5.3被放弃的函数有:&lt;/p&gt;
&lt;p&gt;ereg();//直接用mb_ereg代替，或是preg_match代替，但是匹配规则需要用/包括起来
eregi();//preg_match代替，在规则后加上i，如：preg_match(&amp;quot;/^(style|style_)(.*)*/i&amp;rdquo;, $file);
ereg_replace();
set_magic_quotes_runtime();
split();
mysql_close();  // 将不支持全部关闭, 需要改为:mysql_close($link);&lt;/p&gt;
- https://kissjava.cn/posts/php5.3%E5%BA%9F%E5%BC%83%E5%87%BD%E6%95%B0/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>继续收拾残局，php和asp.net的md5差别</title>
        <link>https://kissjava.cn/posts/%E7%BB%A7%E7%BB%AD%E6%94%B6%E6%8B%BE%E6%AE%8B%E5%B1%80php%E5%92%8Casp.net%E7%9A%84md5%E5%B7%AE%E5%88%AB/</link>
        <pubDate>Tue, 09 Mar 2010 16:17:19 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/%E7%BB%A7%E7%BB%AD%E6%94%B6%E6%8B%BE%E6%AE%8B%E5%B1%80php%E5%92%8Casp.net%E7%9A%84md5%E5%B7%AE%E5%88%AB/</guid>
        <description>清风徐来 https://kissjava.cn/posts/%E7%BB%A7%E7%BB%AD%E6%94%B6%E6%8B%BE%E6%AE%8B%E5%B1%80php%E5%92%8Casp.net%E7%9A%84md5%E5%B7%AE%E5%88%AB/ -&lt;p&gt;asp.net的md5加密貌似是16位的
而php的md5加密是32位的
这样解决
&lt;!-- raw HTML omitted --&gt;
echo substr(md5(&amp;ldquo;admin&amp;rdquo;),8,16); // 16位MD5加密效果等同于asp.net的md5
echo &amp;ldquo;&lt;!-- raw HTML omitted --&gt;&amp;rdquo;;
echo md5(&amp;ldquo;admin&amp;rdquo;); // 32位MD5加密
&lt;!-- raw HTML omitted --&gt;
另：php的md5函数，按官方的说法，第二个参数设为true，可以生成16位的，但是淡水测试下来是乱码。淡水没空深究了，有心人可以找找缘由。&lt;/p&gt;
- https://kissjava.cn/posts/%E7%BB%A7%E7%BB%AD%E6%94%B6%E6%8B%BE%E6%AE%8B%E5%B1%80php%E5%92%8Casp.net%E7%9A%84md5%E5%B7%AE%E5%88%AB/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>收拾残局，过滤部分字段重复的数据</title>
        <link>https://kissjava.cn/posts/%E6%94%B6%E6%8B%BE%E6%AE%8B%E5%B1%80%E8%BF%87%E6%BB%A4%E9%83%A8%E5%88%86%E5%AD%97%E6%AE%B5%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E6%8D%AE/</link>
        <pubDate>Mon, 08 Mar 2010 16:54:03 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/%E6%94%B6%E6%8B%BE%E6%AE%8B%E5%B1%80%E8%BF%87%E6%BB%A4%E9%83%A8%E5%88%86%E5%AD%97%E6%AE%B5%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E6%8D%AE/</guid>
        <description>清风徐来 https://kissjava.cn/posts/%E6%94%B6%E6%8B%BE%E6%AE%8B%E5%B1%80%E8%BF%87%E6%BB%A4%E9%83%A8%E5%88%86%E5%AD%97%E6%AE%B5%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E6%8D%AE/ -&lt;p&gt;select distinct可以去掉重复记录。
disctinct将重复的记录忽略，但它忽略的是&lt;!-- raw HTML omitted --&gt;完全一致&lt;!-- raw HTML omitted --&gt;的重复记录，而不是其中某个字段重复的记录，或者说，distinct查询一个字段时好使，多个字段就不好使。&lt;/p&gt;
&lt;p&gt;所以用聚合函数和group by实现
&lt;!-- raw HTML omitted --&gt;注意：group by只能跟聚合函数搭配使用&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;例表&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;查询username和password组合起来的条件不能重复的查询结果（这个都能重复，不能不说这是个烂摊子）&lt;/p&gt;
&lt;p&gt;当username和password重复时，取ID最大的记录:&lt;br&gt;
select   *   from   mytable  where   ID   in(select   max(ID)   from   mytable   group   by   username,password)&lt;/p&gt;
&lt;p&gt;当username和password重复时，取ID最小的记录：&lt;br&gt;
select   *   from   mytable  where   ID   in(select   min(ID)   from   mytable  a   group   by   username,password)&lt;/p&gt;
- https://kissjava.cn/posts/%E6%94%B6%E6%8B%BE%E6%AE%8B%E5%B1%80%E8%BF%87%E6%BB%A4%E9%83%A8%E5%88%86%E5%AD%97%E6%AE%B5%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E6%8D%AE/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>Codeigniter ACL library</title>
        <link>https://kissjava.cn/posts/codeigniter-acl-library/</link>
        <pubDate>Mon, 08 Mar 2010 09:58:45 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/codeigniter-acl-library/</guid>
        <description>清风徐来 https://kissjava.cn/posts/codeigniter-acl-library/ -&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;public function __construct() {
    
    $this-&amp;gt;load-&amp;gt;helper(&#39;url&#39;);
    $this-&amp;gt;load-&amp;gt;library(&#39;session&#39;);
    $this-&amp;gt;load-&amp;gt;config(&#39;mx_acl&#39;, TRUE);
    
    $this-&amp;gt;_config = $this-&amp;gt;config-&amp;gt;item(&#39;mx_acl&#39;);
    $this-&amp;gt;_cache_path = $this-&amp;gt;config-&amp;gt;item(&#39;cache_path&#39;);
    
    /* previous flashdata is available to views */
    $this-&amp;gt;load-&amp;gt;vars($this-&amp;gt;_config[&#39;error_var&#39;], $this-&amp;gt;session-&amp;gt;flashdata($this-&amp;gt;_config[&#39;error_var&#39;]));
    
    /* run the access control check now */
    ($this-&amp;gt;_config[&#39;check_uri&#39;]) AND $this-&amp;gt;check_uri();
}

/**
 * Check the current uri and user privileges against the cached ACL array
 * Redirect if access is denied
 *
 * @return void
 */
public function check_uri() {
    
    /* Load the cached access control list or show error */
    (is_file($cached_acl = $this-&amp;gt;_cache_path.&#39;mx_acl&#39;.EXT)) OR show_error($this-&amp;gt;_config[&#39;error_msg&#39;]);
    
    $acl = include $cached_acl;

    /* Match current url to access list */
    if (is_array($acl) AND $acl = $this-&amp;gt;match_uri($this-&amp;gt;current_uri(), $acl)) {
        
        /* Check session group against access level group */
        $allow_access = (bool)(in_array($this-&amp;gt;session-&amp;gt;userdata($this-&amp;gt;_config[&#39;session_var&#39;]), $acl[&#39;allowed&#39;]));
            
         /* Additional check to allow IP addresses in range */
        if ( ! $allow_access AND isset($acl[&#39;ipl&#39;])) $allow_access = $this-&amp;gt;check_ip($acl[&#39;ipl&#39;]);
            
        if ($allow_access == FALSE)    {
            
            /* Set a return url into the session */
            $this-&amp;gt;session-&amp;gt;set_userdata(&#39;return_url&#39;, $this-&amp;gt;uri-&amp;gt;uri_string());
            
            /* set the error message... */
            $error_msg = (isset($acl[&#39;error_msg&#39;])) ? $acl[&#39;error_msg&#39;] : $this-&amp;gt;_config[&#39;error_msg&#39;];
                
            /* set a flash message... */
            $this-&amp;gt;session-&amp;gt;set_flashdata($this-&amp;gt;_config[&#39;error_var&#39;], $error_msg);        
                
            /* redirect to absolute url */
            die(header(&amp;quot;Location: &amp;quot;.$acl[&#39;error_uri&#39;], TRUE, 302));
        }
    }
}

/**
 * Return the access control profile for a given url
 *
 * @return string
 * @param string $current_uri
 * @param array  $acl
 */
private function match_uri($current_uri, $acl) {
    if (array_key_exists($current_uri, $acl)) {
        return $acl[$current_uri];            
    } else {
        if ($pos = strripos($current_uri, &#39;/&#39;)) {
            return $this-&amp;gt;match_uri(substr($current_uri, 0, $pos), $acl);
        }
    }
}

/**
 * Returns the current uri string from segments
 *
 * @return string
 */
private function current_uri() {
    return implode(&#39;/&#39;, $this-&amp;gt;uri-&amp;gt;rsegments);
}

/**
 * Checks the remote IP address against the specified $ipl array
 *
 * @return bool
 * @param array $ipl
 * @param string $remote_ip[optional]
 */    
 private function check_ip($ipl, $remote_ip = NULL) {
    
    /* Convert ip address into a double (for lousy OSes)*/
    $remote_ip = floatval(ip2long(($this-&amp;gt;session-&amp;gt;userdata(&#39;ip_address&#39;))));
    
    /* Loop through the ip list array */
    foreach ($ipl as $allowed_ip) {
        
        /* Replace &#39;*&#39; (for IP ranges) with a suitable range number */
        $min = str_replace(&amp;quot;*&amp;quot;, &amp;quot;0&amp;quot;, $allowed_ip);        
        $max = str_replace(&amp;quot;*&amp;quot;, &amp;quot;255&amp;quot;, $allowed_ip);

        /* Check for a match */
        if (($remote_ip &amp;gt;= floatval(ip2long($min))) AND ($remote_ip &amp;lt;= floatval(ip2long($max)))) {
            return TRUE;
        }
    }
}

public function __get($var)    {
    static $CI;
    (is_object($CI)) OR $CI = get_instance();
    return $CI-&amp;gt;$var;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}
/* End of file MX_ACL.php */
/* Location: ./application/libraries/MX_ACL.php */
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
- https://kissjava.cn/posts/codeigniter-acl-library/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>apache下ab网站压力测试命令的参数、输出结果的中文注解</title>
        <link>https://kissjava.cn/posts/apache%E4%B8%8Bab%E7%BD%91%E7%AB%99%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95%E5%91%BD%E4%BB%A4%E7%9A%84%E5%8F%82%E6%95%B0%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E7%9A%84%E4%B8%AD%E6%96%87%E6%B3%A8%E8%A7%A3/</link>
        <pubDate>Sun, 07 Mar 2010 16:48:21 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/apache%E4%B8%8Bab%E7%BD%91%E7%AB%99%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95%E5%91%BD%E4%BB%A4%E7%9A%84%E5%8F%82%E6%95%B0%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E7%9A%84%E4%B8%AD%E6%96%87%E6%B3%A8%E8%A7%A3/</guid>
        <description>清风徐来 https://kissjava.cn/posts/apache%E4%B8%8Bab%E7%BD%91%E7%AB%99%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95%E5%91%BD%E4%BB%A4%E7%9A%84%E5%8F%82%E6%95%B0%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E7%9A%84%E4%B8%AD%E6%96%87%E6%B3%A8%E8%A7%A3/ -&lt;p&gt;有用，记录一下。from：http://txm3217.blog.163.com/blog/static/21986987200762131027970/
以前安装好APACHE总是不知道该如何测试APACHE的性能，现在总算找到一个测试工具了。就是APACHE自带的测试工具AB(apache benchmark).在APACHE的bin目录下。
格式： ./ab [options] [http://]hostname[:port]/path
参数：
-n requests Number of requests to perform
//在测试会话中所执行的请求个数。默认时，仅执行一个请求
-c concurrency Number of multiple requests to make
//一次产生的请求个数。默认是一次一个。
-t timelimit Seconds to max. wait for responses
//测试所进行的最大秒数。其内部隐含值是-n 50000。它可以使对服务器的测试限制在一个固定的总时间以内。默认时，没有时间限制。
-p postfile File containing data to POST
//包含了需要POST的数据的文件.
-T content-type Content-type header for POSTing
//POST数据所使用的Content-type头信息。
-v verbosity How much troubleshooting info to print
//设置显示信息的详细程度 - 4或更大值会显示头信息， 3或更大值可以显示响应代码(404, 200等), 2或更大值可以显示警告和其他信息。 -V 显示版本号并退出。
-w Print out results in HTML tables
//以HTML表的格式输出结果。默认时，它是白色背景的两列宽度的一张表。
-i Use HEAD instead of GET
// 执行HEAD请求，而不是GET。
-x attributes String to insert as table attributes
//
-y attributes String to insert as tr attributes
//
-z attributes String to insert as td or th attributes
//
-C attribute Add cookie, eg. &amp;lsquo;Apache=1234. (repeatable)
//-C cookie-name=value 对请求附加一个Cookie:行。 其典型形式是name=value的一个参数对。此参数可以重复。
-H attribute Add Arbitrary header line, eg. &amp;lsquo;Accept-Encoding: gzip&amp;rsquo;
Inserted after all normal header lines. (repeatable)
-A attribute Add Basic WWW Authentication, the attributes
are a colon separated username and password.
-P attribute Add Basic Proxy Authentication, the attributes
are a colon separated username and password.
//-P proxy-auth-username:password 对一个中转代理提供BASIC认证信任。用户名和密码由一个:隔开，并以base64编码形式发送。无论服务器是否需要(即, 是否发送了401认证需求代码)，此字符串都会被发送。
-X proxy:port Proxyserver and port number to use
-V Print version number and exit
-k Use HTTP KeepAlive feature
-d Do not show percentiles served table.
-S Do not show confidence estimators and warnings.
-g filename Output collected data to gnuplot format file.
-e filename Output CSV file with percentages served
-h Display usage information (this message)
//-attributes 设置 属性的字符串. 缺陷程序中有各种静态声明的固定长度的缓冲区。另外，对命令行参数、服务器的响应头和其他外部输入的解析也很简单，这可能会有不良后果。它没有完整地实现 HTTP/1.x; 仅接受某些&amp;rsquo;预想&amp;rsquo;的响应格式。 strstr(3)的频繁使用可能会带来性能问题，即, 你可能是在测试ab而不是服务器的性能。&lt;/p&gt;
&lt;p&gt;参数很多,一般我们用 -c 和 -n 参数就可以了. 例如:&lt;/p&gt;
&lt;p&gt;./ab -c 1000 -n 1000 http://127.0.0.1/index.php&lt;/p&gt;
&lt;p&gt;这个表示同时处理1000个请求并运行1000次index.php文件.
#/usr/local/xiaobai/apache2054/bin/ab -c 1000 -n 1000 http://127.0.0.1/index.html.zh-cn.gb2312
This is ApacheBench, Version 2.0.41-dev &amp;lt;$Revision: 1.121.2.12 $&amp;gt; apache-2.0
Copyright (c) 1996 Adam Twiss, Zeus Technology Ltd, &lt;a href=&#34;http://www.zeustech.net/&#34;&gt;http://www.zeustech.net/&lt;/a&gt;
Copyright (c) 1998-2002 The Apache Software Foundation, &lt;a href=&#34;http://www.apache.org/&#34;&gt;http://www.apache.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Benchmarking 127.0.0.1 (be patient)
Completed 100 requests
Completed 200 requests
Completed 300 requests
Completed 400 requests
Completed 500 requests
Completed 600 requests
Completed 700 requests
Completed 800 requests
Completed 900 requests
Finished 1000 requests&lt;/p&gt;
&lt;p&gt;Server Software: Apache/2.0.54
//平台apache 版本2.0.54
Server Hostname: 127.0.0.1
//服务器主机名
Server Port: 80
//服务器端口&lt;/p&gt;
&lt;p&gt;Document Path: /index.html.zh-cn.gb2312
//测试的页面文档
Document Length: 1018 bytes
//文档大小&lt;/p&gt;
&lt;p&gt;Concurrency Level: 1000
//并发数
Time taken for tests: 8.188731 seconds
//整个测试持续的时间
Complete requests: 1000
//完成的请求数量
Failed requests: 0
//失败的请求数量
Write errors: 0&lt;/p&gt;
&lt;p&gt;Total transferred: 1361581 bytes
//整个场景中的网络传输量
HTML transferred: 1055666 bytes
//整个场景中的HTML内容传输量
Requests per second: 122.12 [#/sec] (mean)
//大家最关心的指标之一，相当于 LR 中的 每秒事务数 ，后面括号中的 mean 表示这是一个平均值
Time per request: 8188.731 [ms] (mean)
//大家最关心的指标之二，相当于 LR 中的 平均事务响应时间 ，后面括号中的 mean 表示这是一个平均值
Time per request: 8.189 [ms] (mean, across all concurrent requests)
//每个请求实际运行时间的平均值
Transfer rate: 162.30 [Kbytes/sec] received
//平均每秒网络上的流量，可以帮助排除是否存在网络流量过大导致响应时间延长的问题&lt;/p&gt;
&lt;p&gt;Connection Times (ms)
min mean[+/-sd] median max
Connect: 4 646 1078.7 89 3291
Processing: 165 992 493.1 938 4712
Waiting: 118 934 480.6 882 4554
Total: 813 1638 1338.9 1093 7785
//网络上消耗的时间的分解，各项数据的具体算法还不是很清楚&lt;/p&gt;
&lt;p&gt;Percentage of the requests served within a certain time (ms)
50% 1093
66% 1247
75% 1373
80% 1493
90% 4061
95% 4398
98% 5608
99% 7368
100% 7785 (longest request)
//整个场景中所有请求的响应情况。在场景中每个请求都有一个响应时间，其中50％的用户响应时间小于1093 毫秒，60％ 的用户响应时间小于1247 毫秒，最大的响应时间小于7785 毫秒&lt;/p&gt;
&lt;p&gt;由于对于并发请求，cpu实际上并不是同时处理的，而是按照每个请求获得的时间片逐个轮转处理的，所以基本上第一个Time per request时间约等于第二个Time per request时间乘以并发请求数&lt;/p&gt;
- https://kissjava.cn/posts/apache%E4%B8%8Bab%E7%BD%91%E7%AB%99%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95%E5%91%BD%E4%BB%A4%E7%9A%84%E5%8F%82%E6%95%B0%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E7%9A%84%E4%B8%AD%E6%96%87%E6%B3%A8%E8%A7%A3/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>vim记录</title>
        <link>https://kissjava.cn/posts/vim%E8%AE%B0%E5%BD%95/</link>
        <pubDate>Sun, 07 Mar 2010 13:13:54 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/vim%E8%AE%B0%E5%BD%95/</guid>
        <description>清风徐来 https://kissjava.cn/posts/vim%E8%AE%B0%E5%BD%95/ -&lt;p&gt;1，vim中复制带有行号的内容到剪切板
进入normal模式，按查找键盘（/），然后然后用鼠标选择需要的内容，选取会自动选择行号，菜单栏编辑-复制（右键也行）即可。
2，删除引用符号中的内容，并进入到插入模式
ci[ 删除一对 [] 中的所有字符并进入插入模式
ci( 删除一对 () 中的所有字符并进入插入模式
ci&amp;lt; 删除一对 &amp;lt;&amp;gt; 中的所有字符并进入插入模式
ci{ 删除一对 {} 中的所有字符并进入插入模式
cit 删除一对 HTML/XML 的标签内部的所有字符并进入插入模式
ci&amp;rdquo;  ci&amp;rsquo;  ci&lt;code&gt;删除一对引号字符 (&amp;quot;或 &#39; 或&lt;/code&gt;) 中所有字符并进入插入模式
3，除了，hjkl外的更微妙的光标移动
w：光标往下移动一个词。
b：光标往回移动一个词。
0：移动光标到当前行首。
^：移动光标到当前行的第一个字母位置。
$：移动光标到行尾。
)：移动光标到下一个句子。
( ：移动光标到上一个句子。&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;：向下移动一屏。
&lt;!-- raw HTML omitted --&gt;：向上移动一屏。
G：到文件尾
numG：移动光标到指定的行（num）。（比如 10G 就是到第 10 行）
gg：到文件首
H：移动光标到屏幕上面
M：移动光标到屏幕中间
L：移动光标到屏幕下面&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;：缩进所有选择的代码
&amp;laquo;：和上面类似，但是反缩进&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
- https://kissjava.cn/posts/vim%E8%AE%B0%E5%BD%95/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>可以激活Win7系统的Key</title>
        <link>https://kissjava.cn/posts/%E5%8F%AF%E4%BB%A5%E6%BF%80%E6%B4%BBwin7%E7%B3%BB%E7%BB%9F%E7%9A%84key/</link>
        <pubDate>Sun, 07 Mar 2010 12:05:31 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/%E5%8F%AF%E4%BB%A5%E6%BF%80%E6%B4%BBwin7%E7%B3%BB%E7%BB%9F%E7%9A%84key/</guid>
        <description>清风徐来 https://kissjava.cn/posts/%E5%8F%AF%E4%BB%A5%E6%BF%80%E6%B4%BBwin7%E7%B3%BB%E7%BB%9F%E7%9A%84key/ -&lt;p&gt;可以激活Win7系统的Key（序列号）！
G到的，留着吧，看看什么时候能用上。
不懂什么是神Key的朋友自己去BD、GG吧！不要问我这样的问题！谢谢配合！
我个人认为神Key是微软为扩展Win7市场故意放出。
回复可见！&lt;/p&gt;
&lt;p&gt;本帖隐藏的内容需要回复才可以浏览
已经证实的
236TW-X778T-8MV9F-937GT-QVKBB
87VT2-FY2XW-F7K39-W3T8R-XMFGF
KH2J9-PC326-T44D4-39H6V-TVPBY
TFP9Y-VCY3P-VVH3T-8XXCC-MF4YK
流传于网上未经验证的
J783Y-JKQWR-677Q8-KCXTF-BHWGC
C4M9W-WPRDG-QBB3F-VM9K8-KDQ9Y
2VCGQ-BRVJ4-2HGJ2-K36X9-J66JG
MGX79-TPQB9-KQ248-KXR2V-DHRTD
FJHWT-KDGHY-K2384-93CT7-323RC&lt;/p&gt;
- https://kissjava.cn/posts/%E5%8F%AF%E4%BB%A5%E6%BF%80%E6%B4%BBwin7%E7%B3%BB%E7%BB%9F%E7%9A%84key/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>使用jQuery和flash的多文件上传组件</title>
        <link>https://kissjava.cn/posts/%E4%BD%BF%E7%94%A8jquery%E5%92%8Cflash%E7%9A%84%E5%A4%9A%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%84%E4%BB%B6/</link>
        <pubDate>Sun, 07 Mar 2010 12:02:53 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/%E4%BD%BF%E7%94%A8jquery%E5%92%8Cflash%E7%9A%84%E5%A4%9A%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%84%E4%BB%B6/</guid>
        <description>清风徐来 https://kissjava.cn/posts/%E4%BD%BF%E7%94%A8jquery%E5%92%8Cflash%E7%9A%84%E5%A4%9A%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%84%E4%BB%B6/ -&lt;p&gt;标题党了。
这是一个使用jQuery和flash的多文件上传组件：
&lt;a href=&#34;http://www.uploadify.com/demo/&#34;&gt;http://www.uploadify.com/demo/&lt;/a&gt;&lt;/p&gt;
- https://kissjava.cn/posts/%E4%BD%BF%E7%94%A8jquery%E5%92%8Cflash%E7%9A%84%E5%A4%9A%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%84%E4%BB%B6/ - kissjava.cn</description>
        </item>
    
    
  </channel>
</rss> 