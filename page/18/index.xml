<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>清风徐来</title>
    <link>https://kissjava.cn/</link>
    <description>Recent content on 清风徐来</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>kissjava.cn</copyright>
    <lastBuildDate>Thu, 18 Jun 2020 09:31:15 +0800</lastBuildDate>
    
        <atom:link href="https://kissjava.cn/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>忘记了zend studio for eclipse 怎么调试了</title>
        <link>https://kissjava.cn/posts/%E5%BF%98%E8%AE%B0%E4%BA%86zend-studio-for-eclipse-%E6%80%8E%E4%B9%88%E8%B0%83%E8%AF%95%E4%BA%86/</link>
        <pubDate>Tue, 21 Jul 2009 10:21:01 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/%E5%BF%98%E8%AE%B0%E4%BA%86zend-studio-for-eclipse-%E6%80%8E%E4%B9%88%E8%B0%83%E8%AF%95%E4%BA%86/</guid>
        <description>清风徐来 https://kissjava.cn/posts/%E5%BF%98%E8%AE%B0%E4%BA%86zend-studio-for-eclipse-%E6%80%8E%E4%B9%88%E8%B0%83%E8%AF%95%E4%BA%86/ -&lt;p&gt;老是在netbeans和zend studio for eclipse跳来跳去的。&lt;/p&gt;
&lt;p&gt;今天突然有段代码需要调试一下。正好用的是zend studio for eclipse。可是折腾来折腾去，别说默认断点在第一行了，就是其他设置的断点也都被直接越过，直接到底跑完程序-_-!!&lt;/p&gt;
&lt;p&gt;这下淡水愣了，就像陶喆的《小镇姑娘》一样了，“不明白，不明白。。。”。赶紧去翻翻&lt;!-- raw HTML omitted --&gt;Gently&lt;!-- raw HTML omitted --&gt;的&lt;!-- raw HTML omitted --&gt;Zend Studio For Eclipse 6.1 视频教程-调试php程序&lt;!-- raw HTML omitted --&gt; 。可是没啥发现啊，操作差不多啊。又回到他的教程列表，想淘淘看。忽然眼前一道光芒闪过，嗯，是的当时感觉就是如此。“&lt;!-- raw HTML omitted --&gt;服务器调试——Zend Debugger 的安装教程&lt;!-- raw HTML omitted --&gt;”映入我的眼前。原来，原来淡水忘记安装Zend Debugger了。&lt;!-- raw HTML omitted --&gt;Gently&lt;!-- raw HTML omitted --&gt;在&lt;!-- raw HTML omitted --&gt;Zend Studio For Eclipse 6.1 视频教程-调试php程序&lt;!-- raw HTML omitted --&gt; 中并没有特别把安装Zend Debugger，着重提一下。而淡水又没仔细看，就。。。&lt;/p&gt;
&lt;p&gt;说说怎样安装Zend Debugger吧，比较简单的。Gently的教程里都有写了。这里淡水给自己加深一下印象。&lt;/p&gt;
&lt;p&gt;第一步：官网下载Zend Debugger，下载URL：
&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;http://downloads.zend.com/pdt/server-debugger/ZendDebugger-5.2.14-cygwin_nt-i386.zip&#34;&gt;http://downloads.zend.com/pdt/server-debugger/ZendDebugger-5.2.14-cygwin_nt-i386.zip&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;
请查zip下面的readme文件，可以看到5_2_x_comp目录为PHP 5.2.x所用的版本，把下面的ZendDebugger.dll copy 到php的扩展库目录${php_home}ext，&lt;!-- raw HTML omitted --&gt;把dummy.php copy到phpBB的部署的根目录下，dummy.php主要用来与浏览器安装的Zend Studio Toolbar通信&lt;!-- raw HTML omitted --&gt;。&lt;/p&gt;
&lt;p&gt;第二步：配置php.ini文件，加入：
[zend]
zend_extension_ts=D:PHPPHP5.2.6extZendDebugger.dll
zend_debugger.allow_hosts=127.0.0.1/10
zend_debugger.expose_remotely=always
;以上配置中的127.0.0.1/10代表127.0.0.1到127.0.0.10的地址段允许调试 &lt;/p&gt;
&lt;p&gt;以上橙色部分，淡水没有去做，这也不影响zend studio for eclipse的正常调试。&lt;/p&gt;
- https://kissjava.cn/posts/%E5%BF%98%E8%AE%B0%E4%BA%86zend-studio-for-eclipse-%E6%80%8E%E4%B9%88%E8%B0%83%E8%AF%95%E4%BA%86/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>关于PHP的mod_rewrite重写模块技术个人觉得最好的一篇文章</title>
        <link>https://kissjava.cn/posts/%E5%85%B3%E4%BA%8Ephp%E7%9A%84mod_rewrite%E9%87%8D%E5%86%99%E6%A8%A1%E5%9D%97%E6%8A%80%E6%9C%AF%E4%B8%AA%E4%BA%BA%E8%A7%89%E5%BE%97%E6%9C%80%E5%A5%BD%E7%9A%84%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</link>
        <pubDate>Thu, 16 Jul 2009 13:22:00 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/%E5%85%B3%E4%BA%8Ephp%E7%9A%84mod_rewrite%E9%87%8D%E5%86%99%E6%A8%A1%E5%9D%97%E6%8A%80%E6%9C%AF%E4%B8%AA%E4%BA%BA%E8%A7%89%E5%BE%97%E6%9C%80%E5%A5%BD%E7%9A%84%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</guid>
        <description>清风徐来 https://kissjava.cn/posts/%E5%85%B3%E4%BA%8Ephp%E7%9A%84mod_rewrite%E9%87%8D%E5%86%99%E6%A8%A1%E5%9D%97%E6%8A%80%E6%9C%AF%E4%B8%AA%E4%BA%BA%E8%A7%89%E5%BE%97%E6%9C%80%E5%A5%BD%E7%9A%84%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/ -&lt;p&gt;最近手里一个PHP项目要用到mod_rewrite模块，很早就听mod_rewrite广泛应用于URL重写，防止盗链，伪静态等各方面，于是怀着激动的心情到网上一阵猛搜，果然很多资料，窃喜&amp;hellip;..遗憾的是很多文章看了以后仍旧一团雾水，还是不得要领，甚为苦恼。正当山穷水尽的时候，一篇《&lt;!-- raw HTML omitted --&gt;Learn Apache mod_rewrite: 13 Real-world Examples&lt;!-- raw HTML omitted --&gt;》柳暗花明般走进了我的视线，读罢此文，眼前豁然开朗，手里的项目也渐渐有了眉目。由于原文是英文版本，在参考过程中还是费了许多周折，所以本人操起了早已生锈的英语砍刀，斗胆将其翻译过来，英语过关的还是建议看原文。在译文中有很多不恰当的地方，希望大家将就看吧，话不多说，上文。&lt;/p&gt;
&lt;p&gt;＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝一道华丽的分割线＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝&lt;/p&gt;
&lt;p&gt;原文地址：&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;http://www.sitepoint.com/article/apache-mod_rewrite-examples/&#34;&gt;http://www.sitepoint.com/article/apache-mod_rewrite-examples/&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;原文作者：DK Lynn（DK Lynn is a former instructor pilot and &amp;ldquo;rocket scientist&amp;rdquo; now living in New Zealand where he operates a &lt;!-- raw HTML omitted --&gt;small business developing and hosting web sites&lt;!-- raw HTML omitted --&gt;. ）&lt;/p&gt;
&lt;p&gt;＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝二道华丽的分割线（以下为本人译文）＝＝＝＝＝＝＝＝＝＝&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;一个最常用的正则就是（.&lt;em&gt;）。它含有两个元素：一是“点”，表示任意字符；二是“星”，表示以前的全部字符。所以（.&lt;/em&gt;）会匹配{REQUEST_URI}的所有字符。{REQUEST_URI}是URL中出去域名以及“？”符号的所有查询字符，也是Apache 重写技术尝试匹配的字符。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;包裹在正则表达式中的元素存放在“原子”内，它是在规则范围内允许被匹配的变量，所以以上正则存储了USA/California/San_Diego在“原子”中，为了解决我们的问题，我们需要三个“原子”，他们可以用左斜杠“/”进行分隔，所以正则表达式成了：
&lt;!-- raw HTML omitted --&gt;(.&lt;em&gt;)/(.&lt;/em&gt;)/(.&lt;em&gt;)&lt;!-- raw HTML omitted --&gt;
以上正则，在{REQUEST_URI}中通过两个“/”的分割存储了三个值，为了解决我们具体问题，我们得加一点限制――毕竟，第一个和最后一个原子可以匹配任何字符。
开始，我们可以添加一些特殊的字符，比如表示正则“开始”或者“结束”，“^”字符表示正则的开始而“$”表示正则的结束。
&lt;!-- raw HTML omitted --&gt;^(.&lt;/em&gt;)/(.&lt;em&gt;)/(.&lt;/em&gt;)$&lt;!-- raw HTML omitted --&gt;
这个正则表示整个字符串将全部匹配，除去之前后者之后，没有任何例外。
但是，这个方法仍然匹配的范围太广，我们将匹配的字符按照原子形式存放，然后通过他们形成查询字符串，所以我们必须信任我们所匹配的字符。用(.*)匹配字符串，由于允许了太多字符，所以会存在潜在的安全隐患，引用不当会使mod_rewrite运行出故障。
为了避免一些不必要的麻烦，让我们更改一下我们的原子正则，让其更加准确的匹配我们允许的字符。因为这些原子代表了地区地名，所以我们完全可以用A到Z的大小写来表示他们，另外因为地名之间有空格，所以下划线“&lt;em&gt;”也是被允许的。我们用中括弧明确我们匹配的正则，然后用短横线“-”表示连接的范围，所以被我们允许的正则修改成了[a-zA-Z&lt;/em&gt;],因为我们还要避免匹配到空名字，所以用“+”来匹配在该字符之前的一个或者多个字符，所以我们的正则成了：
&lt;!-- raw HTML omitted --&gt;^([a-zA-Z_]+)/([a-zA-Z_]+)/([a-zA-Z_]+)$
&lt;!-- raw HTML omitted --&gt;{REQUEST_URI}是以“/”开头。Apache 在更改版本的时候会更改正则引擎，一代Apache要求有斜杠而二代Apache却不允许！但是我们可以用^/?（？表示匹配字符本身或者前一个字符）来兼容两个版本的Apache，所以我们的正则又成了:
&lt;!-- raw HTML omitted --&gt;^/?([a-zA-Z_]+)/([a-zA-Z_]+)/([a-zA-Z_]+)$
&lt;!-- raw HTML omitted --&gt;正则在手，我们就可以将原子标识到URL上了：
&lt;!-- raw HTML omitted --&gt;display.php?country=$1 &amp;amp;state=$2&amp;amp;city=$3
&lt;!-- raw HTML omitted --&gt;$1表示国家原子；$2表示省州原子；$3表示城市原子，这里可以加上9个原子，分别用$1到$9表示。
现在我们要做的就是在该目录下创建一个新的.htaccess文件，录入一下代码：
&lt;!-- raw HTML omitted --&gt;RewriteRule ^/?([a-zA-Z_]+)/([a-zA-Z_]+)/([a-zA-Z_]+)$ display.php?country=$1 &amp;amp;state=$2&amp;amp;city=$3 [L]
&lt;!-- raw HTML omitted --&gt;然后保存，重写规则必须写在一行并且用一个空格分开每一个参数，我们用[L]或者’last’表示匹配结束。（一会有更多flags介绍）
我们的重写规则已经创建完成， URL请求字符上各原子的值将经过我们匹配的正则，加上查询变量到我们的重写URL上。display.php将从查询字符中解析这些值，然后将他们送入数据库查询或者进行其他数据库操作。
如果你的正则只允许有限的几个国家，为了避免数据库错误，你可以在正则中加入一下被允许条件，例子如下：
&lt;!-- raw HTML omitted --&gt;^/?(USA|Canada|Mexico)/([a-zA-Z_]+)/([a-zA-Z_]+)$
&lt;!-- raw HTML omitted --&gt;如果你关心查询字符串的大小写问题，由于你数据库对大写有严格的限制，那么你可以在正则表达式后面加一个&lt;!-- raw HTML omitted --&gt;[NC]&lt;!-- raw HTML omitted --&gt;FLAG位来忽略大小写，但是不要忘记在你通过$_GET 获取传递值的时候，把他们转换成小写。
&lt;!-- raw HTML omitted --&gt;如果你想用数字（0，1…..9）来表示具体的地区，那么需要更改正则中的([a-zA-Z_]+)成([0-9])来匹配单个数字，([0-9]{1,2})匹配两位数字（0到99）,([0-9]+)匹配多位数字，这个对匹配数据库ID之类的非常有用。&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;RewriteCond 指令&lt;!-- raw HTML omitted --&gt;
现在你已经学会了mod_rewrite的一些基本用法，现在我们来学习下怎样用RewirteCond指令来处理其他各类型的情况。当RewirteCond指令明确声明以后，mod_rewrite将根据它们做出相应的处理。
RewirteCond 指令的形式和RewriteRule有点类似，形式为：&lt;!-- raw HTML omitted --&gt;RewirteCond 被匹配的字符 正则 FLAG标识&lt;!-- raw HTML omitted --&gt;。&lt;!-- raw HTML omitted --&gt;逻辑FLAG标识 [OR],是非常有用的，记住所有RewirteCond 以及RewriteRule指令在[LAST]指令之前，所有的逻辑与关系都会被包含。
&lt;!-- raw HTML omitted --&gt;你可以用RewirteCond指令测试服务器变量，在this is the best list of server variables一文可以找到相关说明。
举一个列子，假设我们想将“www”放入你的域名中，首先你得测试你的服务器{HTTP_HOST}变量，看www.是否已经存在，如果没有那么定向到期望的主机名：
&lt;!-- raw HTML omitted --&gt;RewriteCond %{HTTP_HOST} !^www.example.com$ [NC]
RewriteRule .? &lt;a href=&#34;http://www.example.com&#34;&gt;http://www.example.com&lt;/a&gt;%{REQUEST_URI} [R=301,L]&lt;!-- raw HTML omitted --&gt;
这里{HTTP_HOST}是一个Apache服务器变量，我们必须加一个“%”字符再之前。正则表达式以“!”开始表示如果正则不匹配那么条件成立。我们当然也要转义“.”字符，将其作为一个普通字面字符而不是表示所有字符。再最后我们还加了一个忽略大小写的[NC]FLAG。
RewriteRule匹配了零或者任意一个字符，并且定向到 &lt;a href=&#34;http://www.example.com&#34;&gt;http://www.example.com&lt;/a&gt;加上原来{REQUEST_URI}值。R=301向服务器提出301请求，表明这是一个永久转向，最后一个[L]表示已经完成这段正则匹配。
RewriteCond也可以创建原子，在RewriteRule中原子是以$1…..$9表示，但是在RewriteCond中是以%1….%9表示。你可以在稍后的例子中看到具体的原子操作。
&lt;!-- raw HTML omitted --&gt;mod_rewrite Flags&lt;!-- raw HTML omitted --&gt;
mod_rewrite用”FLAGS”来建立重写条件以及其他属性。我们用中括弧将FLAGS包起来，放在条件或者是规则的末尾，用逗号将多个FLAGS分隔。以下列表是你需要熟悉的几个主要FLAGS:
&lt;!-- raw HTML omitted --&gt;last|L －[L]告诉Apache服务器一系列的条件或者是规则将在它出现后结束，换句话说就是[L]不出现，mod_rewrite将会一直执行&lt;!-- raw HTML omitted --&gt;。
&lt;!-- raw HTML omitted --&gt;nocase|NC －[NC]告诉Apache服务器忽略正则中的大小写，它经常被用到{HTTP_HOST}服务器参数上，因为域名里面是不会区分大小写的&lt;!-- raw HTML omitted --&gt;。
&lt;!-- raw HTML omitted --&gt;redirect|R －[R] 经常引用到触发可见的定向。默认情况下它是一个HTTP 302的临时重定向，但是你可以注明具体的HTTP 代码，比如你可以用[R=301]来表明这是一个永久重定向，这对搜索引擎抓取你重定向后的网页相当有用。&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;qsappend|QSA －[QSA] 用于添加新的查询参数。你可以在原查询参数后面定义新的查询参数，但命名时注意不要重复已存在的参数名。错误的引用[QSA]将会破坏原来的查询参数导致重定向错误。
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;forbidden|F －[F]告诉Apache响应请求时不提供页面。其原理就是Apache会发出一个403 HTTP相应，可以保护网站不被未经授权的或者其他盗链访问。
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;ornext|OR －[OR]作为默认值[AND]的反义词，可以通过逻辑关系将一系列重写条件组合起来。
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;next|N －[N]可以让你的重写条件循环匹配，当你不知道{REQUEST_URI}有多少字符进行匹配的时候很有用。&lt;!-- raw HTML omitted --&gt;
你可以在 &lt;!-- raw HTML omitted --&gt;Apache.org’s mod_rewrite documentation page&lt;!-- raw HTML omitted --&gt;.了解到其他mod_rewrite FLAGS。
&lt;!-- raw HTML omitted --&gt;mod_rewrite注释&lt;!-- raw HTML omitted --&gt;
任何mod_rewrite代码之前都要加上RewriteEngine on这个状态，另外RewriteEngine on还可以用到其他地方。作为一个好的程序员，你知道注释对于程序来说是多么的重要。mod_rewrite允许在RewriteEngine off 与RewriteEngine on之间加上你的注释：
&lt;!-- raw HTML omitted --&gt;RewriteEngine off
RewriteCond %{HTTP_HOST} !^www.example.com$ [NC]
RewriteRule .? &lt;a href=&#34;http://www.example.com&#34;&gt;http://www.example.com&lt;/a&gt;%{REQUEST_URI} [R=301,L]
RewriteEngine on&lt;!-- raw HTML omitted --&gt;
以上所有的程序代码都不会被执行，RewriteEngine状态值的改变对新的mod_rewrite 代码开发非常有用。像你在PHP里面用/* &amp;hellip; */注释一样，好好的运用他们。
&lt;!-- raw HTML omitted --&gt;mod_rewrite小技巧&lt;!-- raw HTML omitted --&gt;
作为站长，你要决定怎样提高你网页对访问者的辨识度以及在重写的URI地址里放入适当的信息。在创建新的URI规则的时候务必考虑详细周全一些。另外当你完成新的URI规则以后，必须回去更新以前老的链接来匹配新的规则。
当你在设计新的URI规则的时候，一定注意其唯一性。举一个先前的例子，我用了国家名，州省名，城市名作为URI的元素，因为他们在数据库里面都是唯一的。但是如果建立一个让用户自己更新的数据库，我们没有理由让用户取的文章名字保持唯一性，所以文章一般在数据库里是以一个自动增长的ID作为唯一识别码，这个唯一ID对URL重写规则相当友好，它可以使你的重写规则更加简洁，在URL里面可以用原子非常直接的将其值标识出来。
人们通常想映射数据库里面的值比如标题以及其他字符作为URL的标识，在mod_rewrite中有一个RewriteMap状态专门处理这种情况，但是前提是你必须有修改Apache配置文件httpd.conf的权限。所以为了根本避免这个问题，还是直接用ID创建你的链接吧。
空格是以%20的形式展示在URL中的，所以你必须在PHP代码里面将其替换掉，PHP的str_replace函数完全可以胜任这项工作。你只需要在$_GET获取查询值的时候，将其替换就可以了。但是在数据库中空格是难免的，所以我宁愿将空格替换成下划线，一下为PHP代码：
$name = str_replace ( &#39; &amp;lsquo;, &amp;lsquo;_&amp;rsquo;, $name );
在添加新的URL规则的时候，小心不要打破了原先已存在的链接间的相对关系。开发人员通常会惊讶为什么有时候CSS,JAVASCRIPT,图片等文件出现错误或者不启作用了。记住相对链接只匹配你当前URL的地址，所以你需要将这些相对链接更改成绝对链接地址，或者在你的静态网页加上HTML &amp;lt;base&amp;gt;标签。
&lt;!-- raw HTML omitted --&gt;13 个mod_rewrite 应用举例&lt;!-- raw HTML omitted --&gt;
先前我们举了一个给每个链接加一个www的列子，现在让我们看看用mod_rewrite还可以做哪些工作。
&lt;!-- raw HTML omitted --&gt;1．给子域名加www标记 &lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;RewriteCond %{HTTP_HOST} ^([a-z.]+)?example.com$ [NC]
RewriteCond %{HTTP_HOST} !^www. [NC]
RewriteRule .? &lt;a href=&#34;http://www.%1example.com&#34;&gt;http://www.%1example.com&lt;/a&gt;%{REQUEST_URI} [R=301,L]&lt;!-- raw HTML omitted --&gt;
这个规则抓取二级域名的%1变量，如果不是以www开始，那么就加www，以前的域名以及{REQUEST_URI}会跟在其后。
&lt;!-- raw HTML omitted --&gt;2．去掉域名中的www标记 &lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;RewriteCond %{HTTP_HOST} !^example.com$ [NC]
RewriteRule .? &lt;a href=&#34;http://example.com&#34;&gt;http://example.com&lt;/a&gt;%{REQUEST_URI} [R=301,L]&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;3．去掉www标记，但是保存子域名 &lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;RewriteCond %{HTTP_HOST} ^www.(([a-z0-9_]+.)?example.com)$ [NC]
RewriteRule .? http://%1%{REQUEST_URI} [R=301,L]
&lt;!-- raw HTML omitted --&gt;这里，当匹配到1%变量以后，子域名才会在%2（内部原子）中抓取到，而我们需要的正是这个%1变量。
&lt;!-- raw HTML omitted --&gt;4．防止图片盗链 &lt;!-- raw HTML omitted --&gt;
一些站长不择手段的将你的图片盗链在他们网站上，耗费你的带宽。你可以加一下代码阻止这种行为。
&lt;!-- raw HTML omitted --&gt;RewriteCond %{HTTP_REFERER} !^$
RewriteCond %{HTTP_REFERER} !^http://(www.)?example.com/ [NC]
RewriteRule .(gif|jpg|png)$ - [F]
&lt;!-- raw HTML omitted --&gt;如果{HTTP_REFERER}值不为空，或者不是来自你自己的域名，这个规则用[F]FLAG阻止以gif|jpg|png 结尾的URL
如果对这种盗链你是坚决鄙视的，你还可以改变图片，让访问盗链网站的用户知道该网站正在盗用你的图片。
&lt;!-- raw HTML omitted --&gt;RewriteCond %{HTTP_REFERER} !^$
RewriteCond %{HTTP_REFERER} !^http://(www.)?example.com/.*$ [NC]
RewriteRule .(gif|jpg|png)$ &lt;a href=&#34;http://www.example.com/hotlinked.gif&#34;&gt;http://www.example.com/hotlinked.gif&lt;/a&gt; [R=301,L]
&lt;!-- raw HTML omitted --&gt;除了阻止图片盗链链接，以上规则将其盗链的图片全部替换成了你设置的图片。
你还可以阻止特定域名盗链你的图片：
&lt;!-- raw HTML omitted --&gt;RewriteCond %{HTTP_REFERER} !^http://(www.)?leech_site.com/ [NC]
RewriteRule .(gif|jpg|png)$ - [F,L]&lt;!-- raw HTML omitted --&gt;
这个规则将阻止域名黑名单上所有的图片链接请求。
当然以上这些规则都是以{HTTP_REFERER}获取域名为基础的，如果你想改用成IP地址，用{REMOTE_ADDR}就可以了。
&lt;!-- raw HTML omitted --&gt;5．如果文件不存在重定向到404页面 &lt;!-- raw HTML omitted --&gt;
如果你的主机没有提供404页面重定向服务，那么我们自己创建。
&lt;!-- raw HTML omitted --&gt;RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule .? /404.php [L]&lt;!-- raw HTML omitted --&gt;
这里-f匹配的是存在的文件名，-d匹配的存在的路径名。这段代码在进行404重定向之前，会判断你的文件名以及路径名是否存在。你还可以在404页面上加一个?url=$1参数：
&lt;!-- raw HTML omitted --&gt;RewriteRule ^/?(.*)$ /404.php?url=$1 [L]
&lt;!-- raw HTML omitted --&gt;这样，你的404页面就可以做一些其他的事情，例如默认信心，发一个邮件提醒，加一个搜索，等等。
&lt;!-- raw HTML omitted --&gt;6．重命名目录&lt;!-- raw HTML omitted --&gt;
如果你想在网站上重命名目录，试试这个：
&lt;!-- raw HTML omitted --&gt;RewriteRule ^/?old_directory/([a-z/.]+)$ new_directory/$1 [R=301,L]&lt;!-- raw HTML omitted --&gt;
在规则里我添加了一个“.”（注意不是代表得所有字符，前面有转义符）来匹配文件的后缀名。
&lt;!-- raw HTML omitted --&gt;7．将.html后缀名转换成.php&lt;!-- raw HTML omitted --&gt;
前提是.html文件能继续访问的情况下，更新你的网站链接。
&lt;!-- raw HTML omitted --&gt;RewriteRule ^/?([a-z/]+).html$ $1.php [L]&lt;!-- raw HTML omitted --&gt;
这不是一个网页重定向，所以访问者是不可见的。让他作为一个永久重定向（可见的），将FLAG修改[R=301,L]。
&lt;!-- raw HTML omitted --&gt;8．创建无文件后缀名链接&lt;!-- raw HTML omitted --&gt;
如果你想使你的PHP网站的链接更加简洁易记－或者隐藏文件的后缀名，试试这个:
&lt;!-- raw HTML omitted --&gt;RewriteRule ^/?([a-z]+)$ $1.php [L]&lt;!-- raw HTML omitted --&gt;
如果网站混有PHP以及HTML文件，你可以用RewriteCond先判断该后缀的文件是否存在，然后进行替换：
&lt;!-- raw HTML omitted --&gt;RewriteCond %{REQUEST_FILENAME}.php -f
RewriteRule ^/?([a-zA-Z0-9]+)$ $1.php [L]
RewriteCond %{REQUEST_FILENAME}.html -f
RewriteRule ^/?([a-zA-Z0-9]+)$ $1.html [L]&lt;!-- raw HTML omitted --&gt;
如果文件是以.php为后缀，这条规则将被执行。
&lt;!-- raw HTML omitted --&gt;9．检查查询变量里的特定参数&lt;!-- raw HTML omitted --&gt;
如果在URL里面有一个特殊的参数，你可用RewriteCond鉴别其是否存在：
&lt;!-- raw HTML omitted --&gt;RewriteCond %{QUERY_STRING} !uniquekey=
RewriteRule ^/?script_that_requires_uniquekey.php$ other_script.php [QSA,L]
&lt;!-- raw HTML omitted --&gt;以上规则将检查{QUERY_STRING}里面的uniquekey参数是否存在，如果{REQUEST_URI}值为script_that_requires_uniquekey，将会定向到新的URL。
&lt;!-- raw HTML omitted --&gt;10．删除查询变量&lt;!-- raw HTML omitted --&gt;
Apache的mod_rewrite模块会自动辨识查询变量，除非你做了以下改动：
a).分配一个新的查询参数（你可以用[QSA,L]FLAG保存最初的查询变量）
b).在文件名后面加一个“?”（比如index.php?）。符号“?”不会在浏览器的地址栏里显示。
&lt;!-- raw HTML omitted --&gt;11．用新的格式展示当前URI &lt;!-- raw HTML omitted --&gt;
如果这就是我们当前正在运行的URLs：/index.php?id=nnnn。我们非常希望将其更改成/nnnn并且让搜索引擎以新格式展现。首先，我们为了让搜索引擎更新成新的，得将旧的URLs重定向到新的格式，但是，我们还得保证以前的index.php照样能够运行。是不是被我搞迷糊了？
实现以上功能，诀窍就在于在查询变量中加了一个访问者看不到的标记符“marker”。我们只将查询变量中没有出现“marker”标记的链接进行重定向，然后将原有的链接替换成新的格式，并且通过[QSA]FLAG在已有的参数加一个“marker”标记。以下为实现的方式：
&lt;!-- raw HTML omitted --&gt;RewriteCond %{QUERY_STRING} !marker
RewriteCond %{QUERY_STRING} id=([-a-zA-Z0-9_+]+)
RewriteRule ^/?index.php$ %1? [R=301,L]
RewriteRule ^/?([-a-zA-Z0-9_+]+)$ index.php?marker &amp;amp;id=$1 [L]&lt;!-- raw HTML omitted --&gt;
这里，原先的URL：http://www.example.com/index.php?id=nnnn,不包含marker，所以被第一个规则永久重定向到http://www.example.com/nnnn，第二个规则将http://www.example.com/nnnn反定向到http://www.example.com/index.php?marker &amp;amp;id=nnnn，并且加了marker以及id=nnnn两个变量，最后mod_rewrite就开始进行处理过程。
第二次匹配，marker被匹配，所以忽略第一条规则，这里有一个“.”字符会出现在http://www.example.com/index.php?marker &amp;amp;id=nnnn中，所以第二条规则也会被忽略，这样我们就完成了。
注意，这个解决方案要求Apache的一些扩展功能，所以如果你的网站放于在共享主机中会遇到很多障碍。
&lt;!-- raw HTML omitted --&gt;12．保证安全服务启用&lt;!-- raw HTML omitted --&gt;
Apache可以用两种方法辨别你是否开启了安全服务，分别引用{HTTPS}和{SERVER_PORT}变量：
&lt;!-- raw HTML omitted --&gt;RewriteCond %{REQUEST_URI} ^secure_page.php$
RewriteCond %{HTTPS} !on
RewriteRule ^/?(secure_page.php)$ &lt;a href=&#34;https://www.example.com/$1&#34;&gt;https://www.example.com/$1&lt;/a&gt; [R=301,L]&lt;!-- raw HTML omitted --&gt;
以上规则测试{REQUEST_URI}值是否等于我们的安全页代码，并且{HTTPS}不等于on。如果这两个条件同时满足，请求将被重定向到安全服务URI.另外你可用{SERVER_PORT}做同样的测试，443是常用的安全服务端口
&lt;!-- raw HTML omitted --&gt;RewriteCond %{REQUEST_URI} ^secure_page.php$
RewriteCond %{SERVER_PORT} !^443$
RewriteRule ^/?(secure_page.php)$ &lt;a href=&#34;https://www.example.com/$1&#34;&gt;https://www.example.com/$1&lt;/a&gt; [R=301,L]&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;13．在特定的页面上强制执行安全服务 &lt;!-- raw HTML omitted --&gt;
遇到同一个服务器根目录下分别有一个安全服务域名和一个非安全服务域名，所以你就需要用RewriteCond 判断安全服务端口是否占用，并且只将以下列表的页面要求为安全服务：
&lt;!-- raw HTML omitted --&gt;RewriteCond %{SERVER_PORT} !^443$
RewriteRule ^/?(page1|page2|page3|page4|page5)$ &lt;a href=&#34;https://www.example.com/%251&#34;&gt;https://www.example.com/%1&lt;/a&gt; [R=301,L]
&lt;!-- raw HTML omitted --&gt;以下是怎样将没有设置成安全服务的页面返回到80端口：
&lt;!-- raw HTML omitted --&gt;RewriteCond %{ SERVER_PORT } ^443$
RewriteRule !^/?(page6|page7|page8|page9)$ &lt;a href=&#34;http://www.example.com&#34;&gt;http://www.example.com&lt;/a&gt;%{REQUEST_URI} [R=301,L]
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;总结&lt;!-- raw HTML omitted --&gt;
Apache的mod_rewrite模块，不仅会用在SEO以及URLs用户友好方面，还会用到某些重要的重定向工作中，如果你想学习到更多，以下是我找到的一些网上资源：
正则表达：
Great tutorial: &lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;http://gnosis.cx/publish/programming/regular_expressions.html&#34;&gt;http://gnosis.cx/publish/programming/regular_expressions.html&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;
Cheat sheet: &lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;http://regexlib.com/CheatSheet.aspx&#34;&gt;http://regexlib.com/CheatSheet.aspx&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;
A regex-capable text editor: &lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;http://www.editpadpro.com&#34;&gt;http://www.editpadpro.com&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;
Regex Coach: &lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;http://weitz.de/regex-coach/&#34;&gt;http://weitz.de/regex-coach/&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
- https://kissjava.cn/posts/%E5%85%B3%E4%BA%8Ephp%E7%9A%84mod_rewrite%E9%87%8D%E5%86%99%E6%A8%A1%E5%9D%97%E6%8A%80%E6%9C%AF%E4%B8%AA%E4%BA%BA%E8%A7%89%E5%BE%97%E6%9C%80%E5%A5%BD%E7%9A%84%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>天很热但是也很蓝</title>
        <link>https://kissjava.cn/posts/%E5%A4%A9%E5%BE%88%E7%83%AD%E4%BD%86%E6%98%AF%E4%B9%9F%E5%BE%88%E8%93%9D/</link>
        <pubDate>Wed, 15 Jul 2009 20:39:41 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/%E5%A4%A9%E5%BE%88%E7%83%AD%E4%BD%86%E6%98%AF%E4%B9%9F%E5%BE%88%E8%93%9D/</guid>
        <description>清风徐来 https://kissjava.cn/posts/%E5%A4%A9%E5%BE%88%E7%83%AD%E4%BD%86%E6%98%AF%E4%B9%9F%E5%BE%88%E8%93%9D/ -&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;人穷，只好用Lg ks20 拍两张意思一下 -_-&lt;/p&gt;
&lt;p&gt;地点：MP现代广场&lt;/p&gt;
&lt;p&gt;时间：上午8时&lt;/p&gt;
- https://kissjava.cn/posts/%E5%A4%A9%E5%BE%88%E7%83%AD%E4%BD%86%E6%98%AF%E4%B9%9F%E5%BE%88%E8%93%9D/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>Kohana:敏捷的 PHP 框架</title>
        <link>https://kissjava.cn/posts/kohana-%E6%95%8F%E6%8D%B7%E7%9A%84-php-%E6%A1%86%E6%9E%B6/</link>
        <pubDate>Tue, 14 Jul 2009 09:45:34 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/kohana-%E6%95%8F%E6%8D%B7%E7%9A%84-php-%E6%A1%86%E6%9E%B6/</guid>
        <description>清风徐来 https://kissjava.cn/posts/kohana-%E6%95%8F%E6%8D%B7%E7%9A%84-php-%E6%A1%86%E6%9E%B6/ -&lt;p&gt;其实是Kohana v2.3.4入门教程。通过一个简单的项目说明了kohana的mvc架构和数据库类和kohana助手（helper）的用法。&lt;/p&gt;
&lt;p&gt;原文：&lt;!-- raw HTML omitted --&gt;Kohana: The Swift PHP Framework&lt;!-- raw HTML omitted --&gt; 作者：Cristian Gilè 中文翻译：&lt;!-- raw HTML omitted --&gt;淡水&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;因为实在是太长了，所以做成PDF了。&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Kohana the swift PHP framework&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
- https://kissjava.cn/posts/kohana-%E6%95%8F%E6%8D%B7%E7%9A%84-php-%E6%A1%86%E6%9E%B6/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>input、select等表单元素与相邻文字对齐</title>
        <link>https://kissjava.cn/posts/inputselect%E7%AD%89%E8%A1%A8%E5%8D%95%E5%85%83%E7%B4%A0%E4%B8%8E%E7%9B%B8%E9%82%BB%E6%96%87%E5%AD%97%E5%AF%B9%E9%BD%90/</link>
        <pubDate>Sun, 21 Jun 2009 12:30:38 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/inputselect%E7%AD%89%E8%A1%A8%E5%8D%95%E5%85%83%E7%B4%A0%E4%B8%8E%E7%9B%B8%E9%82%BB%E6%96%87%E5%AD%97%E5%AF%B9%E9%BD%90/</guid>
        <description>清风徐来 https://kissjava.cn/posts/inputselect%E7%AD%89%E8%A1%A8%E5%8D%95%E5%85%83%E7%B4%A0%E4%B8%8E%E7%9B%B8%E9%82%BB%E6%96%87%E5%AD%97%E5%AF%B9%E9%BD%90/ -&lt;p&gt;以前都是把多选框放到一个单独的表格单元格。
现在才知道，用css更简单：&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
- https://kissjava.cn/posts/inputselect%E7%AD%89%E8%A1%A8%E5%8D%95%E5%85%83%E7%B4%A0%E4%B8%8E%E7%9B%B8%E9%82%BB%E6%96%87%E5%AD%97%E5%AF%B9%E9%BD%90/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>系统时间不准确造成 IE 下 Kohana 的 Captcha 库验证失败</title>
        <link>https://kissjava.cn/posts/%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E4%B8%8D%E5%87%86%E7%A1%AE%E9%80%A0%E6%88%90-ie-%E4%B8%8B-kohana-%E7%9A%84-captcha-%E5%BA%93%E9%AA%8C%E8%AF%81%E5%A4%B1%E8%B4%A5/</link>
        <pubDate>Tue, 16 Jun 2009 10:08:25 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E4%B8%8D%E5%87%86%E7%A1%AE%E9%80%A0%E6%88%90-ie-%E4%B8%8B-kohana-%E7%9A%84-captcha-%E5%BA%93%E9%AA%8C%E8%AF%81%E5%A4%B1%E8%B4%A5/</guid>
        <description>清风徐来 https://kissjava.cn/posts/%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E4%B8%8D%E5%87%86%E7%A1%AE%E9%80%A0%E6%88%90-ie-%E4%B8%8B-kohana-%E7%9A%84-captcha-%E5%BA%93%E9%AA%8C%E8%AF%81%E5%A4%B1%E8%B4%A5/ -&lt;p&gt;淡水碰到了，记下来备忘。&lt;/p&gt;
&lt;p&gt;作者：Hily 原始链接：http://hily.me/blog/2009/04/system-time-kohana-captcha-fail/
版权声明：可以转载，转载时务必以超链接形式标明文章原始出处和作者信息及版权声明&lt;/p&gt;
&lt;p&gt;好糗……&lt;/p&gt;
&lt;p&gt;最近玩 Kohana 碰到太多诡异的问题，比如所有模板都要以 UTF8 无 BOM 的编码格式保存，否则 IE 下显示会有问题。自己写的 helper 类也要保存成 UTF8 无 BOM 的编码格式，否则也会出现类似的问题。&lt;/p&gt;
&lt;p&gt;这一系列诡异的问题，把我原本清晰的思路也被搞乱了。&lt;/p&gt;
&lt;p&gt;测试代码（使用 Kohana 文档上的）：&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;// Load Captcha library, you can supply the name of the config group you would like to use.
$captcha = new Captcha;
// Ban bots (that accept session cookies) after 50 invalid responses.
// Be careful not to ban real people though! Set the threshold high enough.
if ($captcha-&amp;gt;invalid_count() &amp;gt; 49)
exit(&amp;lsquo;Bye! Stupid bot.&#39;);
// Form submitted
if ($_POST)
{
// Captcha::valid() is a static method that can be used as a Validation rule also.
if (Captcha::valid($this-&amp;gt;input-&amp;gt;post(&amp;lsquo;captcha_response&amp;rsquo;)))
{
echo &amp;lsquo;&lt;!-- raw HTML omitted --&gt;Good answer!&lt;!-- raw HTML omitted --&gt;&amp;rsquo;;
}
else
{
echo &amp;lsquo;&lt;!-- raw HTML omitted --&gt;Wrong answer!&lt;!-- raw HTML omitted --&gt;&amp;rsquo;;
}
// Validate other fields here
}
// Show form
echo form::open();
echo &amp;lsquo;&lt;!-- raw HTML omitted --&gt;Other form fields here…&lt;!-- raw HTML omitted --&gt;&amp;rsquo;;
// Don&amp;rsquo;t show Captcha anymore after the user has given enough valid
// responses. The &amp;ldquo;enough&amp;rdquo; count is set in the captcha config.
if ( ! $captcha-&amp;gt;promoted())
{
echo &amp;lsquo;&lt;!-- raw HTML omitted --&gt;&amp;rsquo;;
echo $captcha-&amp;gt;render(); // Shows the Captcha challenge (image/riddle/etc)
echo &amp;lsquo;&lt;!-- raw HTML omitted --&gt;&amp;rsquo;;
echo form::input(&amp;lsquo;captcha_response&amp;rsquo;);
}
else
{
echo &amp;lsquo;&lt;!-- raw HTML omitted --&gt;You have been promoted to human.&lt;!-- raw HTML omitted --&gt;&amp;rsquo;;
}
// Close form
echo form::submit(array(&amp;lsquo;value&amp;rsquo; =&amp;gt; &amp;lsquo;Check&amp;rsquo;));
echo form::close();&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;验证代码在 Firefox 下工作正常，在 IE、Chrome 下都不能正常工作，这肯定就是浏览器之间的差别造成的。&lt;/p&gt;
&lt;p&gt;跟踪后发现在 IE 下调用：&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;总是返回空。怎么会取不到 Session 的 Cookie？&lt;/p&gt;
&lt;p&gt;用 Fiddler 看了看 Cookie，发现 expires 时间比我当前系统的时间，也就是说 Session 类写了一个过期的时间到 Cookie 中，所以总是取不到 Session 的 Cookie 信息。按我的理解，写入一个过期的 Cookie，本就不应该被取到，而 Firefox 下还能取到这条过期的 Cookie，应该算 FF 的一个 Bug 吧。&lt;/p&gt;
&lt;p&gt;怎么会出现过期时间？&lt;/p&gt;
&lt;p&gt;因为我的 Kohana 是放在虚拟机里跑的，而我的虚拟机长年都是 suspend 而不是 poweroff，所以时间自然要比当前时间慢 = =&lt;/p&gt;
&lt;p&gt;这类诡异的问题在 QQ 群上问是几乎不可能找到答案的，所以关键时刻还是得靠自己解决啊。&lt;/p&gt;
&lt;p&gt;– EOF –&lt;/p&gt;
- https://kissjava.cn/posts/%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E4%B8%8D%E5%87%86%E7%A1%AE%E9%80%A0%E6%88%90-ie-%E4%B8%8B-kohana-%E7%9A%84-captcha-%E5%BA%93%E9%AA%8C%E8%AF%81%E5%A4%B1%E8%B4%A5/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>一点代码，体验严谨</title>
        <link>https://kissjava.cn/posts/%E4%B8%80%E7%82%B9%E4%BB%A3%E7%A0%81%E4%BD%93%E9%AA%8C%E4%B8%A5%E8%B0%A8/</link>
        <pubDate>Thu, 04 Jun 2009 15:59:46 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/%E4%B8%80%E7%82%B9%E4%BB%A3%E7%A0%81%E4%BD%93%E9%AA%8C%E4%B8%A5%E8%B0%A8/</guid>
        <description>清风徐来 https://kissjava.cn/posts/%E4%B8%80%E7%82%B9%E4%BB%A3%E7%A0%81%E4%BD%93%E9%AA%8C%E4%B8%A5%E8%B0%A8/ -&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;    $type = $this-&amp;gt;input-&amp;gt;post(&amp;quot;type&amp;quot;);
    $keyword = $this-&amp;gt;input-&amp;gt;post(&amp;quot;keyword&amp;quot;);

    if(empty($keyword)){
        echo &#39;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;&#39;;
        echo &amp;quot;alert(&#39;搜索的关键词，不能为空！&#39;);&amp;quot;;
        echo &amp;quot;&amp;lt;/script&amp;gt;&amp;quot;;

        $this-&amp;gt;listnews();
    }else{

        if($type==&amp;quot;title&amp;quot;){
            $newslist = ORM :: factory(&#39;news&#39;)-&amp;gt;like(&amp;quot;title&amp;quot;,$keyword)-&amp;gt;find_all();
        }elseif($type==&amp;quot;content&amp;quot;){
            $newslist = ORM :: factory(&#39;news&#39;)-&amp;gt;like(&amp;quot;content&amp;quot;,$keyword)-&amp;gt;find_all();
        }else{
            $newslist = ORM :: factory(&#39;news&#39;)-&amp;gt;orlike(array(&amp;quot;title&amp;quot;=&amp;gt;$keyword,&amp;quot;content&amp;quot;=&amp;gt;$keyword))-&amp;gt;find_all();
        }

        $news = new View(&#39;admin/searchNews&#39;);
        $news-&amp;gt;newslist = $newslist;
        $this-&amp;gt;template-&amp;gt;content = $news;
    }
    
}
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;    $type = $this-&amp;gt;input-&amp;gt;post(&amp;quot;type&amp;quot;);
    $keyword = $this-&amp;gt;input-&amp;gt;post(&amp;quot;keyword&amp;quot;);

    if(empty($keyword)){
        echo &#39;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;&#39;;
        echo &amp;quot;alert(&#39;搜索的关键词，不能为空！&#39;);&amp;quot;;
        echo &amp;quot;&amp;lt;/script&amp;gt;&amp;quot;;

        $this-&amp;gt;listnews();
    }

    if($type==&amp;quot;title&amp;quot;){
        $newslist = ORM :: factory(&#39;news&#39;)-&amp;gt;like(&amp;quot;title&amp;quot;,$keyword)-&amp;gt;find_all();
    }elseif($type==&amp;quot;content&amp;quot;){
        $newslist = ORM :: factory(&#39;news&#39;)-&amp;gt;like(&amp;quot;content&amp;quot;,$keyword)-&amp;gt;find_all();
    }else{
        $newslist = ORM :: factory(&#39;news&#39;)-&amp;gt;orlike(array(&amp;quot;title&amp;quot;=&amp;gt;$keyword,&amp;quot;content&amp;quot;=&amp;gt;$keyword))-&amp;gt;find_all();
    }

    $news = new View(&#39;admin/searchNews&#39;);
    $news-&amp;gt;newslist = $newslist;
    $this-&amp;gt;template-&amp;gt;content = $news;

}
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- raw HTML omitted --&gt;
- https://kissjava.cn/posts/%E4%B8%80%E7%82%B9%E4%BB%A3%E7%A0%81%E4%BD%93%E9%AA%8C%E4%B8%A5%E8%B0%A8/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>Netbeans 的自选代码折叠（Code Folding）</title>
        <link>https://kissjava.cn/posts/netbeans-%E7%9A%84%E8%87%AA%E9%80%89%E4%BB%A3%E7%A0%81%E6%8A%98%E5%8F%A0code-folding/</link>
        <pubDate>Tue, 02 Jun 2009 17:13:56 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/netbeans-%E7%9A%84%E8%87%AA%E9%80%89%E4%BB%A3%E7%A0%81%E6%8A%98%E5%8F%A0code-folding/</guid>
        <description>清风徐来 https://kissjava.cn/posts/netbeans-%E7%9A%84%E8%87%AA%E9%80%89%E4%BB%A3%E7%A0%81%E6%8A%98%E5%8F%A0code-folding/ -&lt;p&gt;-_-!!!这里长草了，来除草了。最近试用netbeans for php，感觉不错。里面的代码折叠比较好看，也好用。
不过自选代码的折叠，还是要深挖一下才出来的。eclipse 系列的 php IDE，的自选代码折叠怎么搞呢？不晓得。也许&lt;!-- raw HTML omitted --&gt;徐徐&lt;!-- raw HTML omitted --&gt;知道,自己问去吧XD&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;//&lt;!-- raw HTML omitted --&gt;&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;
嗯，netbeans4php越来越好用了。&lt;/p&gt;
- https://kissjava.cn/posts/netbeans-%E7%9A%84%E8%87%AA%E9%80%89%E4%BB%A3%E7%A0%81%E6%8A%98%E5%8F%A0code-folding/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>学习php中的soap</title>
        <link>https://kissjava.cn/posts/%E5%AD%A6%E4%B9%A0php%E4%B8%AD%E7%9A%84soap/</link>
        <pubDate>Mon, 18 May 2009 17:36:02 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/%E5%AD%A6%E4%B9%A0php%E4%B8%AD%E7%9A%84soap/</guid>
        <description>清风徐来 https://kissjava.cn/posts/%E5%AD%A6%E4%B9%A0php%E4%B8%AD%E7%9A%84soap/ -&lt;p&gt;淡水摸索了一阵子。
说说吧，先说说wsdl文件的建立。
用zend studio for eclipse 或是 easyeclipse for php都可以建立。但是zse方便一些。例如提供一个简单的加法服务：
&lt;!-- raw HTML omitted --&gt;
sum.php&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
- https://kissjava.cn/posts/%E5%AD%A6%E4%B9%A0php%E4%B8%AD%E7%9A%84soap/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>windows下基于apache的subversion（svn）的安装</title>
        <link>https://kissjava.cn/posts/windows%E4%B8%8B%E5%9F%BA%E4%BA%8Eapache%E7%9A%84subversionsvn%E7%9A%84%E5%AE%89%E8%A3%85/</link>
        <pubDate>Wed, 13 May 2009 10:15:00 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/windows%E4%B8%8B%E5%9F%BA%E4%BA%8Eapache%E7%9A%84subversionsvn%E7%9A%84%E5%AE%89%E8%A3%85/</guid>
        <description>清风徐来 https://kissjava.cn/posts/windows%E4%B8%8B%E5%9F%BA%E4%BA%8Eapache%E7%9A%84subversionsvn%E7%9A%84%E5%AE%89%E8%A3%85/ -&lt;p&gt;上午折腾了一下，可以写个详细步骤出来了。
&lt;!-- raw HTML omitted --&gt;预期目标：&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;搭建一个apache下的svn服务，服务地址 http://localhost/svn&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;本地环境：&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;已经装有xampplite集成环境。
svn的服务目录为D:svnroot
已经安装好了小乌龟（TortoiseSVN）&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;安装步骤：&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;1，下载的适用于windows的Subversion，我下载的是Setup-Subversion-1.5.3.msi
这里注意要和apache的版本对应，我是apache2.2的。
双击安装它，这个没说头。
2，从subversion的安装目录Subversionbin下复制相应的文件到apache的modules目录中
有三个，libdb44.dll mod_authz_svn.so mod_dav_svn.so
（淡水还把Subversionbin下所有的dll文件都复制到了apache的bin下）
3，配置apache的httpd.conf文件
这个是个容易出差错的地方
把下两行的注释去掉：&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h1 id=&#34;所有人可以读管理员可以写&#34;&gt;所有人可以读，管理员可以写&lt;/h1&gt;
&lt;p&gt;[svn:/]
@g_admin = rw&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;= r&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[svn:/机密文件]
@g_admin = rw&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;=&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[svn:/公告文件]
@g_admin = rw&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;= r&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[svn:/测试组]
@g_admin = rw
@g_test = rw&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;=&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;如果是多个库，则权限文件类似以下&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h1 id=&#34;所有人可以读管理员可以写-1&#34;&gt;所有人可以读，管理员可以写&lt;/h1&gt;
&lt;p&gt;[/]
@g_admin = rw&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;= r&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[khn:/]
@g_admin = rw&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;=&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[ci170:/]
@g_admin = rw
@g_test = rw&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;= r&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;6，在d:svnroot下，用tortoiseSVN创建版本库。
7，重启apache。搞定了。
&lt;!-- raw HTML omitted --&gt;注意点：&lt;!-- raw HTML omitted --&gt;
先不要启用权限控制。用tortoiseSVN登录进入以后，创建文件夹后，再启用权限控制。
如果想要把地址改成http://localhost/kisssvn，两步：apache的httpd.conf 里 改为&amp;lt;Location /kisssvn&amp;gt;，再把权限文档里的[svn:/]等改成[kisssvn:/]。ok&lt;/p&gt;
- https://kissjava.cn/posts/windows%E4%B8%8B%E5%9F%BA%E4%BA%8Eapache%E7%9A%84subversionsvn%E7%9A%84%E5%AE%89%E8%A3%85/ - kissjava.cn</description>
        </item>
    
    
  </channel>
</rss> 