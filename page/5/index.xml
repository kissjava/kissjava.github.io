<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>清风徐来</title>
    <link>https://kissjava.cn/</link>
    <description>Recent content on 清风徐来</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>kissjava.cn</copyright>
    <lastBuildDate>Fri, 06 Sep 2019 16:59:00 +0000</lastBuildDate>
    
        <atom:link href="https://kissjava.cn/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>SSL去掉了，又加上了</title>
        <link>https://kissjava.cn/posts/ssl%E5%8E%BB%E6%8E%89%E4%BA%86%E5%8F%88%E5%8A%A0%E4%B8%8A%E4%BA%86/</link>
        <pubDate>Mon, 20 Aug 2018 16:05:00 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/ssl%E5%8E%BB%E6%8E%89%E4%BA%86%E5%8F%88%E5%8A%A0%E4%B8%8A%E4%BA%86/</guid>
        <description>清风徐来 https://kissjava.cn/posts/ssl%E5%8E%BB%E6%8E%89%E4%BA%86%E5%8F%88%E5%8A%A0%E4%B8%8A%E4%BA%86/ -&lt;p&gt;终究还是搬家，然后又加上了。
顺便说一下，阿里国际ECS，很容易被封443。
====以上2018/08/31更新====&lt;/p&gt;
&lt;p&gt;没时间写东西.
ssl 去掉了，ip 被误伤了吧.
443端口联通和电信都无法访问了，没有办法，只好去掉了:(&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://kissjava.cn/usr/uploads/2018/08/446222727.png&#34; alt=&#34;letsencrypt.png&#34;&gt;&lt;/p&gt;
- https://kissjava.cn/posts/ssl%E5%8E%BB%E6%8E%89%E4%BA%86%E5%8F%88%E5%8A%A0%E4%B8%8A%E4%BA%86/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>怎样用外部触点信号控制fanuc数控系统的启动停止</title>
        <link>https://kissjava.cn/posts/%E6%80%8E%E6%A0%B7%E7%94%A8%E5%A4%96%E9%83%A8%E8%A7%A6%E7%82%B9%E4%BF%A1%E5%8F%B7%E6%8E%A7%E5%88%B6fanuc%E6%95%B0%E6%8E%A7%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%90%AF%E5%8A%A8%E5%81%9C%E6%AD%A2/</link>
        <pubDate>Thu, 09 Aug 2018 07:49:00 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/%E6%80%8E%E6%A0%B7%E7%94%A8%E5%A4%96%E9%83%A8%E8%A7%A6%E7%82%B9%E4%BF%A1%E5%8F%B7%E6%8E%A7%E5%88%B6fanuc%E6%95%B0%E6%8E%A7%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%90%AF%E5%8A%A8%E5%81%9C%E6%AD%A2/</guid>
        <description>清风徐来 https://kissjava.cn/posts/%E6%80%8E%E6%A0%B7%E7%94%A8%E5%A4%96%E9%83%A8%E8%A7%A6%E7%82%B9%E4%BF%A1%E5%8F%B7%E6%8E%A7%E5%88%B6fanuc%E6%95%B0%E6%8E%A7%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%90%AF%E5%8A%A8%E5%81%9C%E6%AD%A2/ -&lt;p&gt;资料收集，待测&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;首先，你需要初步掌握FANUC系统PMC编程知识；&lt;/p&gt;
&lt;p&gt;然后，编辑PMC梯形图程序，使用外部触点信号（通常为一个按钮，X地址），在梯形图中将G7.2在MEM、RMT或MDI模式下接通32ms以上并重新置为0，即可启动数控系统运行；在自动运行状态下，将G8.5从1置为0，系统停止运行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://kissjava.cn/usr/uploads/2018/08/32025001.jpg&#34; alt=&#34;fanucRemoteStartUsePMC1.jpg&#34;&gt;
&lt;img src=&#34;https://kissjava.cn/usr/uploads/2018/08/2740880433.jpg&#34; alt=&#34;fanucRemoteStartUsePMC2.jpg&#34;&gt;&lt;/p&gt;
- https://kissjava.cn/posts/%E6%80%8E%E6%A0%B7%E7%94%A8%E5%A4%96%E9%83%A8%E8%A7%A6%E7%82%B9%E4%BF%A1%E5%8F%B7%E6%8E%A7%E5%88%B6fanuc%E6%95%B0%E6%8E%A7%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%90%AF%E5%8A%A8%E5%81%9C%E6%AD%A2/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>又又又搬家了，搬回国内</title>
        <link>https://kissjava.cn/posts/%E5%8F%88%E5%8F%88%E5%8F%88%E6%90%AC%E5%AE%B6%E4%BA%86%E6%90%AC%E5%9B%9E%E5%9B%BD%E5%86%85/</link>
        <pubDate>Wed, 29 Nov 2017 17:23:00 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/%E5%8F%88%E5%8F%88%E5%8F%88%E6%90%AC%E5%AE%B6%E4%BA%86%E6%90%AC%E5%9B%9E%E5%9B%BD%E5%86%85/</guid>
        <description>清风徐来 https://kissjava.cn/posts/%E5%8F%88%E5%8F%88%E5%8F%88%E6%90%AC%E5%AE%B6%E4%BA%86%E6%90%AC%E5%9B%9E%E5%9B%BD%E5%86%85/ -&lt;p&gt;又搬回国内阿里云了。
主域名更换为备案过的 kissjava.cn。&lt;/p&gt;
&lt;p&gt;关于 kissjava：
走上it这条路，其实收自己的一个兄弟影响极大。
当时他还做了个比较 nb 的网站，域名就是 kissjava.com。
不过我当时在搞 ASP，后来是 PHP，等我学JAVA 时他早就不纠结技术细节了。
我对 kissjava 念念不忘，于是注册了 kissjava.cn。&lt;/p&gt;
- https://kissjava.cn/posts/%E5%8F%88%E5%8F%88%E5%8F%88%E6%90%AC%E5%AE%B6%E4%BA%86%E6%90%AC%E5%9B%9E%E5%9B%BD%E5%86%85/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>圆通速递？呵呵</title>
        <link>https://kissjava.cn/posts/%E5%9C%86%E9%80%9A%E9%80%9F%E9%80%92%E5%91%B5%E5%91%B5/</link>
        <pubDate>Fri, 29 Sep 2017 15:34:00 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/%E5%9C%86%E9%80%9A%E9%80%9F%E9%80%92%E5%91%B5%E5%91%B5/</guid>
        <description>清风徐来 https://kissjava.cn/posts/%E5%9C%86%E9%80%9A%E9%80%9F%E9%80%92%E5%91%B5%E5%91%B5/ -&lt;p&gt;不想说太多，就放张图吧。
&lt;img src=&#34;https://kissjava.cn/usr/uploads/2017/09/3325540767.png&#34; alt=&#34;QQ20170929-153001@2x.png&#34;&gt;
速递，这速是多少？
客服也是&amp;hellip;&lt;/p&gt;
- https://kissjava.cn/posts/%E5%9C%86%E9%80%9A%E9%80%9F%E9%80%92%E5%91%B5%E5%91%B5/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>WPF 的状态栏控件</title>
        <link>https://kissjava.cn/posts/wpf-%E7%9A%84%E7%8A%B6%E6%80%81%E6%A0%8F%E6%8E%A7%E4%BB%B6/</link>
        <pubDate>Sat, 23 Sep 2017 13:28:00 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/wpf-%E7%9A%84%E7%8A%B6%E6%80%81%E6%A0%8F%E6%8E%A7%E4%BB%B6/</guid>
        <description>清风徐来 https://kissjava.cn/posts/wpf-%E7%9A%84%E7%8A%B6%E6%80%81%E6%A0%8F%E6%8E%A7%E4%BB%B6/ -&lt;p&gt;状态栏可以放些提示信息，目前情况下会比 MessageBox 好用。特别是无需用户确认的情况。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://kissjava.cn/usr/uploads/2017/09/2865825617.png&#34; alt=&#34;请输入图片描述&#34;&gt;&lt;/p&gt;
&lt;p&gt;简单的没意思，直接来个多栏的。
&lt;!-- raw HTML omitted --&gt;
&amp;lt;StatusBar.ItemsPanel&amp;gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&amp;lt;Grid.ColumnDefinitions&amp;gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&amp;lt;/Grid.ColumnDefinitions&amp;gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&amp;lt;/StatusBar.ItemsPanel&amp;gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;效果：
&lt;img src=&#34;https://kissjava.cn/usr/uploads/2017/09/237998259.png&#34; alt=&#34;statusbar_advanced_sample.png&#34;&gt;&lt;/p&gt;
- https://kissjava.cn/posts/wpf-%E7%9A%84%E7%8A%B6%E6%80%81%E6%A0%8F%E6%8E%A7%E4%BB%B6/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>Enabling Scrollbar in WPF</title>
        <link>https://kissjava.cn/posts/enabling-scrollbar-in-wpf/</link>
        <pubDate>Fri, 22 Sep 2017 10:01:00 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/enabling-scrollbar-in-wpf/</guid>
        <description>清风徐来 https://kissjava.cn/posts/enabling-scrollbar-in-wpf/ -&lt;p&gt;Put a ScrollViewer inside your Window:
&lt;img src=&#34;https://kissjava.cn/usr/uploads/2017/09/2865825617.png&#34; alt=&#34;请输入图片描述&#34;&gt;
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    &amp;lt;ScrollViewer &amp;gt;
        &amp;lt;!-- Window content here --&amp;gt;
    &amp;lt;/ScrollViewer&amp;gt;
&amp;lt;/Window&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
- https://kissjava.cn/posts/enabling-scrollbar-in-wpf/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>C# 测试代码的运行时间</title>
        <link>https://kissjava.cn/posts/c#-%E6%B5%8B%E8%AF%95%E4%BB%A3%E7%A0%81%E7%9A%84%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4/</link>
        <pubDate>Wed, 20 Sep 2017 17:27:00 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/c#-%E6%B5%8B%E8%AF%95%E4%BB%A3%E7%A0%81%E7%9A%84%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4/</guid>
        <description>清风徐来 https://kissjava.cn/posts/c#-%E6%B5%8B%E8%AF%95%E4%BB%A3%E7%A0%81%E7%9A%84%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4/ -&lt;p&gt;计算C#代码运行的耗时，方便测试出效率。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://kissjava.cn/usr/uploads/2017/09/2865825617.png&#34; alt=&#34;请输入图片描述&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;System.Diagnostics.Stopwatch watch = new System.Diagnostics.Stopwatch();
watch.Start();  //开始监视代码运行时间
// 添加需要测试的代码
// ...
watch.Stop();  //停止
TimeSpan timespan = watch.Elapsed;  //获取当前实例测量得出的总时间
System.Diagnostics.Debug.WriteLine(string.Format(&amp;quot;代码执行时间：{0}(毫秒)&amp;quot;, timespan.TotalMilliseconds)); 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;TimeSpan&lt;/code&gt; 还可以计算出&lt;code&gt;TotalHours&lt;/code&gt;，&lt;code&gt;TotalMinutes&lt;/code&gt;， &lt;code&gt;TotalSeconds&lt;/code&gt;。&lt;/p&gt;
- https://kissjava.cn/posts/c#-%E6%B5%8B%E8%AF%95%E4%BB%A3%E7%A0%81%E7%9A%84%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>PyQt5表格应用的详细Demo</title>
        <link>https://kissjava.cn/posts/pyqt5%E8%A1%A8%E6%A0%BC%E5%BA%94%E7%94%A8%E7%9A%84%E8%AF%A6%E7%BB%86demo/</link>
        <pubDate>Wed, 13 Sep 2017 14:38:00 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/pyqt5%E8%A1%A8%E6%A0%BC%E5%BA%94%E7%94%A8%E7%9A%84%E8%AF%A6%E7%BB%86demo/</guid>
        <description>清风徐来 https://kissjava.cn/posts/pyqt5%E8%A1%A8%E6%A0%BC%E5%BA%94%E7%94%A8%E7%9A%84%E8%AF%A6%E7%BB%86demo/ -&lt;p&gt;PyQt5实现的一个表格应用的 demo。涉及的知识点：tableWidget 的基本使用，cell 内放置 widget，设置 cell 模式，分页，获取选中项目。
&lt;img src=&#34;https://kissjava.cn/usr/uploads/2017/09/2207092668.png&#34; alt=&#34;PyQt5TableWidgetDemo.PNG&#34;&gt;&lt;/p&gt;
&lt;p&gt;首先是 QtDesigner 设计, 一个 tablewidget，4个 pushbuttno：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;ui version=&amp;quot;4.0&amp;quot;&amp;gt;
 &amp;lt;class&amp;gt;MainWindow&amp;lt;/class&amp;gt;
 &amp;lt;widget class=&amp;quot;QMainWindow&amp;quot; name=&amp;quot;MainWindow&amp;quot;&amp;gt;
  &amp;lt;property name=&amp;quot;geometry&amp;quot;&amp;gt;
   &amp;lt;rect&amp;gt;
    &amp;lt;x&amp;gt;0&amp;lt;/x&amp;gt;
    &amp;lt;y&amp;gt;0&amp;lt;/y&amp;gt;
    &amp;lt;width&amp;gt;800&amp;lt;/width&amp;gt;
    &amp;lt;height&amp;gt;600&amp;lt;/height&amp;gt;
   &amp;lt;/rect&amp;gt;
  &amp;lt;/property&amp;gt;
  &amp;lt;property name=&amp;quot;windowTitle&amp;quot;&amp;gt;
   &amp;lt;string&amp;gt;MainWindow&amp;lt;/string&amp;gt;
  &amp;lt;/property&amp;gt;
  &amp;lt;widget class=&amp;quot;QWidget&amp;quot; name=&amp;quot;centralwidget&amp;quot;&amp;gt;
   &amp;lt;widget class=&amp;quot;QTableWidget&amp;quot; name=&amp;quot;tableWidget&amp;quot;&amp;gt;
    &amp;lt;property name=&amp;quot;geometry&amp;quot;&amp;gt;
     &amp;lt;rect&amp;gt;
      &amp;lt;x&amp;gt;0&amp;lt;/x&amp;gt;
      &amp;lt;y&amp;gt;0&amp;lt;/y&amp;gt;
      &amp;lt;width&amp;gt;801&amp;lt;/width&amp;gt;
      &amp;lt;height&amp;gt;541&amp;lt;/height&amp;gt;
     &amp;lt;/rect&amp;gt;
    &amp;lt;/property&amp;gt;
    &amp;lt;property name=&amp;quot;rowCount&amp;quot;&amp;gt;
     &amp;lt;number&amp;gt;5&amp;lt;/number&amp;gt;
    &amp;lt;/property&amp;gt;
    &amp;lt;property name=&amp;quot;columnCount&amp;quot;&amp;gt;
     &amp;lt;number&amp;gt;11&amp;lt;/number&amp;gt;
    &amp;lt;/property&amp;gt;
    &amp;lt;row/&amp;gt;
    &amp;lt;row/&amp;gt;
    &amp;lt;row/&amp;gt;
    &amp;lt;row/&amp;gt;
    &amp;lt;row/&amp;gt;
    &amp;lt;column/&amp;gt;
    &amp;lt;column/&amp;gt;
    &amp;lt;column/&amp;gt;
    &amp;lt;column/&amp;gt;
    &amp;lt;column/&amp;gt;
    &amp;lt;column/&amp;gt;
    &amp;lt;column/&amp;gt;
   &amp;lt;/widget&amp;gt;
   &amp;lt;widget class=&amp;quot;QWidget&amp;quot; name=&amp;quot;horizontalLayoutWidget&amp;quot;&amp;gt;
    &amp;lt;property name=&amp;quot;geometry&amp;quot;&amp;gt;
     &amp;lt;rect&amp;gt;
      &amp;lt;x&amp;gt;0&amp;lt;/x&amp;gt;
      &amp;lt;y&amp;gt;540&amp;lt;/y&amp;gt;
      &amp;lt;width&amp;gt;801&amp;lt;/width&amp;gt;
      &amp;lt;height&amp;gt;31&amp;lt;/height&amp;gt;
     &amp;lt;/rect&amp;gt;
    &amp;lt;/property&amp;gt;
    &amp;lt;layout class=&amp;quot;QHBoxLayout&amp;quot; name=&amp;quot;horizontalLayout&amp;quot;&amp;gt;
     &amp;lt;item&amp;gt;
      &amp;lt;widget class=&amp;quot;QPushButton&amp;quot; name=&amp;quot;btnLoad&amp;quot;&amp;gt;
       &amp;lt;property name=&amp;quot;text&amp;quot;&amp;gt;
        &amp;lt;string&amp;gt;Load&amp;lt;/string&amp;gt;
       &amp;lt;/property&amp;gt;
      &amp;lt;/widget&amp;gt;
     &amp;lt;/item&amp;gt;
     &amp;lt;item&amp;gt;
      &amp;lt;widget class=&amp;quot;QPushButton&amp;quot; name=&amp;quot;btnPre&amp;quot;&amp;gt;
       &amp;lt;property name=&amp;quot;text&amp;quot;&amp;gt;
        &amp;lt;string&amp;gt;《Pre&amp;lt;/string&amp;gt;
       &amp;lt;/property&amp;gt;
      &amp;lt;/widget&amp;gt;
     &amp;lt;/item&amp;gt;
     &amp;lt;item&amp;gt;
      &amp;lt;widget class=&amp;quot;QPushButton&amp;quot; name=&amp;quot;btnNext&amp;quot;&amp;gt;
       &amp;lt;property name=&amp;quot;text&amp;quot;&amp;gt;
        &amp;lt;string&amp;gt;Next》&amp;lt;/string&amp;gt;
       &amp;lt;/property&amp;gt;
      &amp;lt;/widget&amp;gt;
     &amp;lt;/item&amp;gt;
     &amp;lt;item&amp;gt;
      &amp;lt;widget class=&amp;quot;QPushButton&amp;quot; name=&amp;quot;btnDetail&amp;quot;&amp;gt;
       &amp;lt;property name=&amp;quot;text&amp;quot;&amp;gt;
        &amp;lt;string&amp;gt;Detail&amp;lt;/string&amp;gt;
       &amp;lt;/property&amp;gt;
      &amp;lt;/widget&amp;gt;
     &amp;lt;/item&amp;gt;
    &amp;lt;/layout&amp;gt;
   &amp;lt;/widget&amp;gt;
  &amp;lt;/widget&amp;gt;
  &amp;lt;widget class=&amp;quot;QStatusBar&amp;quot; name=&amp;quot;statusbar&amp;quot;/&amp;gt;
 &amp;lt;/widget&amp;gt;
 &amp;lt;resources/&amp;gt;
 &amp;lt;connections/&amp;gt;
&amp;lt;/ui&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;生成的 ui 代码 tableWidgetDemo.py：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file &#39;tableWidgetDemo.ui&#39;
#
# Created by: PyQt5 UI code generator 5.6
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName(&amp;quot;MainWindow&amp;quot;)
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName(&amp;quot;centralwidget&amp;quot;)
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(0, 0, 801, 541))
        self.tableWidget.setRowCount(5)
        self.tableWidget.setColumnCount(11)
        self.tableWidget.setObjectName(&amp;quot;tableWidget&amp;quot;)
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(0, 540, 801, 31))
        self.horizontalLayoutWidget.setObjectName(&amp;quot;horizontalLayoutWidget&amp;quot;)
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName(&amp;quot;horizontalLayout&amp;quot;)
        self.btnLoad = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.btnLoad.setObjectName(&amp;quot;btnLoad&amp;quot;)
        self.horizontalLayout.addWidget(self.btnLoad)
        self.btnPre = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.btnPre.setObjectName(&amp;quot;btnPre&amp;quot;)
        self.horizontalLayout.addWidget(self.btnPre)
        self.btnNext = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.btnNext.setObjectName(&amp;quot;btnNext&amp;quot;)
        self.horizontalLayout.addWidget(self.btnNext)
        self.btnDetail = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.btnDetail.setObjectName(&amp;quot;btnDetail&amp;quot;)
        self.horizontalLayout.addWidget(self.btnDetail)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName(&amp;quot;statusbar&amp;quot;)
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate(&amp;quot;MainWindow&amp;quot;, &amp;quot;MainWindow&amp;quot;))
        self.btnLoad.setText(_translate(&amp;quot;MainWindow&amp;quot;, &amp;quot;Load&amp;quot;))
        self.btnPre.setText(_translate(&amp;quot;MainWindow&amp;quot;, &amp;quot;《Pre&amp;quot;))
        self.btnNext.setText(_translate(&amp;quot;MainWindow&amp;quot;, &amp;quot;Next》&amp;quot;))
        self.btnDetail.setText(_translate(&amp;quot;MainWindow&amp;quot;, &amp;quot;Detail&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;最后上实现代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from PyQt5 import QtWidgets, QtCore
import sqlite3

from tableWidgetDemo import Ui_MainWindow

class Window(QtWidgets.QMainWindow):
    def  __init__(self, parent=None):
        super(Window, self).__init__(parent=parent)
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)
        self.initStyle()
        self.initConn()

        self.currentPage = 1

        self.ui.btnLoad.clicked.connect(lambda :self.loadData(1))
        self.ui.btnDetail.clicked.connect(self.showDetail)
        self.ui.btnPre.clicked.connect(lambda : self.loadData(self.currentPage - 1))
        self.ui.btnNext.clicked.connect(lambda : self.loadData(self.currentPage + 1))

    def closeEvent(self, event):
        self.connection.close()
        event.accept()

    def initStyle(self):
        horizontalHeader = [&#39;CustomerID&#39;,&#39;FirstName&#39;,&#39;LastName&#39;,&#39;Company&#39;,&#39;Address&#39;,&#39;City&#39;,&#39;State&#39;,&#39;国籍&#39;,&#39;邮编&#39;,&#39;电话&#39;,&amp;quot;Action&amp;quot;]
        self.ui.tableWidget.setHorizontalHeaderLabels(horizontalHeader)

    def initConn(self):
        self.connection = sqlite3.connect(&amp;quot;mydb.db&amp;quot;)
        self.cur = self.connection.cursor()

    def saveLine(self,id):
        print(&amp;quot;saveLine id %d&amp;quot; % id)

    def delLine(self,id):
        print(&amp;quot;delLine id %d&amp;quot; % id)

    def createInnerButton(self,id):
        widget = QtWidgets.QWidget()
        saveBtn = QtWidgets.QPushButton(&amp;quot;Save&amp;quot;)
        saveBtn.setStyleSheet(&amp;quot;background-color:DarkSeaGreen;border-style:outset;border-radius:3px&amp;quot;)
        saveBtn.setFixedSize(40,14)
        saveBtn.clicked.connect(lambda: self.saveLine(id))

        delBtn = QtWidgets.QPushButton(&amp;quot;Del&amp;quot;)
        delBtn.setStyleSheet(&amp;quot;background-color:LightCoral;border-style:outset;border-radius:3px&amp;quot;)
        delBtn.setFixedSize(40,14)
        delBtn.clicked.connect(lambda: self.delLine(id))

        layout = QtWidgets.QHBoxLayout()
        layout.addWidget(saveBtn)
        layout.addWidget(delBtn)
        widget.setLayout(layout)
        return widget

    def showDetail(self):
        select = self.ui.tableWidget.selectedItems()
        if select:
            print(select)
            try:
                print(select[0].text())
                rs = &amp;quot;,&amp;quot;.join([i.text() for i in select])
                QtWidgets.QMessageBox.about(self, &#39;你选择的项目&#39;, rs)
            except Exception as e:
                print(e)
        else:
            print(&amp;quot;Nothing.&amp;quot;)


    def loadData(self, page = 1):

        if page &amp;lt; 1:
            QtWidgets.QMessageBox.about(self, &#39;提示&#39;, &amp;quot;提示：已经到第一页了\t&amp;quot;)
            return

        pageSize = 16
        offset = (page - 1) * pageSize
        query = &amp;quot;SELECT CustomerID,FirstName,LastName,Company,Address,City,State,Country,PostalCode,Phone FROM customers&amp;quot;
        query += &amp;quot; limit %d offset %d&amp;quot; % (pageSize, offset)
        self.cur.execute(query)

        result = self.cur.fetchall()

        if len(result) == 0:
            QtWidgets.QMessageBox.about(self, &#39;提示&#39;, &amp;quot;提示：没有下一页了\t&amp;quot;)
            return

        self.currentPage = page

        self.ui.tableWidget.setRowCount(0)
        for row_number, row_data in enumerate(result):
            self.ui.tableWidget.insertRow(row_number)
            for colum_number, data in enumerate(row_data):
                self.ui.tableWidget.setItem(row_number, colum_number, QtWidgets.QTableWidgetItem(str(data)))

            temp = QtWidgets.QTableWidgetItem()
            temp.setFlags(QtCore.Qt.ItemIsEnabled)
            self.ui.tableWidget.setItem(row_number,10,temp)

            actionItem = self.createInnerButton(row_data[0])
            self.ui.tableWidget.setCellWidget(row_number,10,actionItem)


if __name__ == &amp;quot;__main__&amp;quot;:
    import sys
    app = QtWidgets.QApplication(sys.argv)
    w = Window()
    w.show()
    sys.exit(app.exec_())
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;最后，给出源码：
&lt;a href=&#34;https://kissjava.cn/usr/uploads/2017/09/3996694642.zip&#34;&gt;PyQt5TableWidgetDemo.zip&lt;/a&gt;&lt;/p&gt;
- https://kissjava.cn/posts/pyqt5%E8%A1%A8%E6%A0%BC%E5%BA%94%E7%94%A8%E7%9A%84%E8%AF%A6%E7%BB%86demo/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>PyQt5自定义改变窗口大小信号</title>
        <link>https://kissjava.cn/posts/pyqt5%E8%87%AA%E5%AE%9A%E4%B9%89%E6%94%B9%E5%8F%98%E7%AA%97%E5%8F%A3%E5%A4%A7%E5%B0%8F%E4%BF%A1%E5%8F%B7/</link>
        <pubDate>Tue, 12 Sep 2017 11:13:00 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/pyqt5%E8%87%AA%E5%AE%9A%E4%B9%89%E6%94%B9%E5%8F%98%E7%AA%97%E5%8F%A3%E5%A4%A7%E5%B0%8F%E4%BF%A1%E5%8F%B7/</guid>
        <description>清风徐来 https://kissjava.cn/posts/pyqt5%E8%87%AA%E5%AE%9A%E4%B9%89%E6%94%B9%E5%8F%98%E7%AA%97%E5%8F%A3%E5%A4%A7%E5%B0%8F%E4%BF%A1%E5%8F%B7/ -&lt;p&gt;模式是没有这个信号的，但是我们可以自己创建一个 &lt;code&gt;resized&lt;/code&gt; 信号，并在 &lt;code&gt;resizeEvent&lt;/code&gt; 方法中 &lt;code&gt;emit&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;用 QtDesigner 设计个主窗口，拖了 Horizontal Layout（mainHLayout） 和窗体同一尺寸，三个 pushbutton，分割按钮的4个Horizontal Spacer。就是想改变窗体大小时，可以让按钮可以继续按比例分配空间。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://kissjava.cn/usr/uploads/2017/09/428092021.png&#34; alt=&#34;PyQt5QtDesignerResizeEvent.PNG&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;ui version=&amp;quot;4.0&amp;quot;&amp;gt;
 &amp;lt;class&amp;gt;MainWindow&amp;lt;/class&amp;gt;
 &amp;lt;widget class=&amp;quot;QMainWindow&amp;quot; name=&amp;quot;MainWindow&amp;quot;&amp;gt;
  &amp;lt;property name=&amp;quot;geometry&amp;quot;&amp;gt;
   &amp;lt;rect&amp;gt;
    &amp;lt;x&amp;gt;0&amp;lt;/x&amp;gt;
    &amp;lt;y&amp;gt;0&amp;lt;/y&amp;gt;
    &amp;lt;width&amp;gt;800&amp;lt;/width&amp;gt;
    &amp;lt;height&amp;gt;600&amp;lt;/height&amp;gt;
   &amp;lt;/rect&amp;gt;
  &amp;lt;/property&amp;gt;
  &amp;lt;property name=&amp;quot;windowTitle&amp;quot;&amp;gt;
   &amp;lt;string&amp;gt;MainWindow&amp;lt;/string&amp;gt;
  &amp;lt;/property&amp;gt;
  &amp;lt;widget class=&amp;quot;QWidget&amp;quot; name=&amp;quot;centralwidget&amp;quot;&amp;gt;
   &amp;lt;widget class=&amp;quot;QWidget&amp;quot; name=&amp;quot;horizontalLayoutWidget&amp;quot;&amp;gt;
    &amp;lt;property name=&amp;quot;geometry&amp;quot;&amp;gt;
     &amp;lt;rect&amp;gt;
      &amp;lt;x&amp;gt;0&amp;lt;/x&amp;gt;
      &amp;lt;y&amp;gt;0&amp;lt;/y&amp;gt;
      &amp;lt;width&amp;gt;801&amp;lt;/width&amp;gt;
      &amp;lt;height&amp;gt;571&amp;lt;/height&amp;gt;
     &amp;lt;/rect&amp;gt;
    &amp;lt;/property&amp;gt;
    &amp;lt;layout class=&amp;quot;QHBoxLayout&amp;quot; name=&amp;quot;mainHLayout&amp;quot;&amp;gt;
     &amp;lt;item&amp;gt;
      &amp;lt;spacer name=&amp;quot;horizontalSpacer&amp;quot;&amp;gt;
       &amp;lt;property name=&amp;quot;orientation&amp;quot;&amp;gt;
        &amp;lt;enum&amp;gt;Qt::Horizontal&amp;lt;/enum&amp;gt;
       &amp;lt;/property&amp;gt;
       &amp;lt;property name=&amp;quot;sizeHint&amp;quot; stdset=&amp;quot;0&amp;quot;&amp;gt;
        &amp;lt;size&amp;gt;
         &amp;lt;width&amp;gt;40&amp;lt;/width&amp;gt;
         &amp;lt;height&amp;gt;20&amp;lt;/height&amp;gt;
        &amp;lt;/size&amp;gt;
       &amp;lt;/property&amp;gt;
      &amp;lt;/spacer&amp;gt;
     &amp;lt;/item&amp;gt;
     &amp;lt;item&amp;gt;
      &amp;lt;widget class=&amp;quot;QPushButton&amp;quot; name=&amp;quot;pushButton_3&amp;quot;&amp;gt;
       &amp;lt;property name=&amp;quot;text&amp;quot;&amp;gt;
        &amp;lt;string&amp;gt;PushButton&amp;lt;/string&amp;gt;
       &amp;lt;/property&amp;gt;
      &amp;lt;/widget&amp;gt;
     &amp;lt;/item&amp;gt;
     &amp;lt;item&amp;gt;
      &amp;lt;spacer name=&amp;quot;horizontalSpacer_2&amp;quot;&amp;gt;
       &amp;lt;property name=&amp;quot;orientation&amp;quot;&amp;gt;
        &amp;lt;enum&amp;gt;Qt::Horizontal&amp;lt;/enum&amp;gt;
       &amp;lt;/property&amp;gt;
       &amp;lt;property name=&amp;quot;sizeHint&amp;quot; stdset=&amp;quot;0&amp;quot;&amp;gt;
        &amp;lt;size&amp;gt;
         &amp;lt;width&amp;gt;40&amp;lt;/width&amp;gt;
         &amp;lt;height&amp;gt;20&amp;lt;/height&amp;gt;
        &amp;lt;/size&amp;gt;
       &amp;lt;/property&amp;gt;
      &amp;lt;/spacer&amp;gt;
     &amp;lt;/item&amp;gt;
     &amp;lt;item&amp;gt;
      &amp;lt;widget class=&amp;quot;QPushButton&amp;quot; name=&amp;quot;pushButton_2&amp;quot;&amp;gt;
       &amp;lt;property name=&amp;quot;text&amp;quot;&amp;gt;
        &amp;lt;string&amp;gt;PushButton&amp;lt;/string&amp;gt;
       &amp;lt;/property&amp;gt;
      &amp;lt;/widget&amp;gt;
     &amp;lt;/item&amp;gt;
     &amp;lt;item&amp;gt;
      &amp;lt;spacer name=&amp;quot;horizontalSpacer_3&amp;quot;&amp;gt;
       &amp;lt;property name=&amp;quot;orientation&amp;quot;&amp;gt;
        &amp;lt;enum&amp;gt;Qt::Horizontal&amp;lt;/enum&amp;gt;
       &amp;lt;/property&amp;gt;
       &amp;lt;property name=&amp;quot;sizeHint&amp;quot; stdset=&amp;quot;0&amp;quot;&amp;gt;
        &amp;lt;size&amp;gt;
         &amp;lt;width&amp;gt;40&amp;lt;/width&amp;gt;
         &amp;lt;height&amp;gt;20&amp;lt;/height&amp;gt;
        &amp;lt;/size&amp;gt;
       &amp;lt;/property&amp;gt;
      &amp;lt;/spacer&amp;gt;
     &amp;lt;/item&amp;gt;
     &amp;lt;item&amp;gt;
      &amp;lt;widget class=&amp;quot;QPushButton&amp;quot; name=&amp;quot;pushButton&amp;quot;&amp;gt;
       &amp;lt;property name=&amp;quot;text&amp;quot;&amp;gt;
        &amp;lt;string&amp;gt;PushButton&amp;lt;/string&amp;gt;
       &amp;lt;/property&amp;gt;
      &amp;lt;/widget&amp;gt;
     &amp;lt;/item&amp;gt;
     &amp;lt;item&amp;gt;
      &amp;lt;spacer name=&amp;quot;horizontalSpacer_4&amp;quot;&amp;gt;
       &amp;lt;property name=&amp;quot;orientation&amp;quot;&amp;gt;
        &amp;lt;enum&amp;gt;Qt::Horizontal&amp;lt;/enum&amp;gt;
       &amp;lt;/property&amp;gt;
       &amp;lt;property name=&amp;quot;sizeHint&amp;quot; stdset=&amp;quot;0&amp;quot;&amp;gt;
        &amp;lt;size&amp;gt;
         &amp;lt;width&amp;gt;40&amp;lt;/width&amp;gt;
         &amp;lt;height&amp;gt;20&amp;lt;/height&amp;gt;
        &amp;lt;/size&amp;gt;
       &amp;lt;/property&amp;gt;
      &amp;lt;/spacer&amp;gt;
     &amp;lt;/item&amp;gt;
    &amp;lt;/layout&amp;gt;
   &amp;lt;/widget&amp;gt;
  &amp;lt;/widget&amp;gt;
  &amp;lt;widget class=&amp;quot;QStatusBar&amp;quot; name=&amp;quot;statusbar&amp;quot;/&amp;gt;
 &amp;lt;/widget&amp;gt;
 &amp;lt;resources/&amp;gt;
 &amp;lt;connections/&amp;gt;
&amp;lt;/ui&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;pyuic5 resizeDemo.ui -o resizeDemo.py&lt;/code&gt;生成的 Py 文件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName(&amp;quot;MainWindow&amp;quot;)
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName(&amp;quot;centralwidget&amp;quot;)
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(0, 0, 801, 571))
        self.horizontalLayoutWidget.setObjectName(&amp;quot;horizontalLayoutWidget&amp;quot;)
        self.mainHLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.mainHLayout.setContentsMargins(0, 0, 0, 0)
        self.mainHLayout.setObjectName(&amp;quot;mainHLayout&amp;quot;)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.mainHLayout.addItem(spacerItem)
        self.pushButton_3 = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.pushButton_3.setObjectName(&amp;quot;pushButton_3&amp;quot;)
        self.mainHLayout.addWidget(self.pushButton_3)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.mainHLayout.addItem(spacerItem1)
        self.pushButton_2 = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.pushButton_2.setObjectName(&amp;quot;pushButton_2&amp;quot;)
        self.mainHLayout.addWidget(self.pushButton_2)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.mainHLayout.addItem(spacerItem2)
        self.pushButton = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.pushButton.setObjectName(&amp;quot;pushButton&amp;quot;)
        self.mainHLayout.addWidget(self.pushButton)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.mainHLayout.addItem(spacerItem3)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName(&amp;quot;statusbar&amp;quot;)
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate(&amp;quot;MainWindow&amp;quot;, &amp;quot;MainWindow&amp;quot;))
        self.pushButton_3.setText(_translate(&amp;quot;MainWindow&amp;quot;, &amp;quot;PushButton&amp;quot;))
        self.pushButton_2.setText(_translate(&amp;quot;MainWindow&amp;quot;, &amp;quot;PushButton&amp;quot;))
        self.pushButton.setText(_translate(&amp;quot;MainWindow&amp;quot;, &amp;quot;PushButton&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;新建一个入口文件，并引用 resizeDemo.py&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from PyQt5 import QtWidgets, QtCore
from resizeDemo import Ui_MainWindow


class Window(QtWidgets.QMainWindow):

    resized = QtCore.pyqtSignal()

    def __init__(self, parent=None):
        super(Window, self).__init__(parent=parent)
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)

        self.resized.connect(self.someFunction)

    def resizeEvent(self, event):
        self.resized.emit()

    def someFunction(self):
        windowWidth = self.frameGeometry().width()
        windowHeight = self.frameGeometry().height()
        print(&amp;quot;Window width:%d&amp;quot; % windowWidth)
        print(&amp;quot;Window height:%d&amp;quot; % windowHeight)
        print(&amp;quot;.....&amp;quot;)
        # self.ui.horizontalLayoutWidget.resize(windowWidth, windowHeight - 30)
        self.ui.mainHLayout.parent().resize(windowWidth, windowHeight - 30)


if __name__ == &amp;quot;__main__&amp;quot;:
    import sys
    app = QtWidgets.QApplication(sys.argv)
    w = Window()
    w.show()
    sys.exit(app.exec_())
&lt;/code&gt;&lt;/pre&gt;
- https://kissjava.cn/posts/pyqt5%E8%87%AA%E5%AE%9A%E4%B9%89%E6%94%B9%E5%8F%98%E7%AA%97%E5%8F%A3%E5%A4%A7%E5%B0%8F%E4%BF%A1%E5%8F%B7/ - kissjava.cn</description>
        </item>
    
    
    
        <item>
        <title>Visual C# 中的事件及委托</title>
        <link>https://kissjava.cn/posts/visual-c#-%E4%B8%AD%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%8F%8A%E5%A7%94%E6%89%98/</link>
        <pubDate>Sat, 09 Sep 2017 15:53:00 +0000</pubDate>
        
        <guid>https://kissjava.cn/posts/visual-c#-%E4%B8%AD%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%8F%8A%E5%A7%94%E6%89%98/</guid>
        <description>清风徐来 https://kissjava.cn/posts/visual-c#-%E4%B8%AD%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%8F%8A%E5%A7%94%E6%89%98/ -&lt;p&gt;&lt;img src=&#34;https://kissjava.cn/usr/uploads/2017/09/2865825617.png&#34; alt=&#34;visual-studio-logo-800x450.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在传统的程式设计语言中，事件一般是一种回调。在C#中这种回调被称为委托，事件处理不过是通过委托呼叫方法。&lt;/p&gt;
&lt;p&gt;委托类别定义一个方法签名，可将相容签名的方法与委托相关联。&lt;/p&gt;
&lt;p&gt;C#中事件采用发布/订阅模型，订阅事件其实就是用委托来实现的。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;namespace WpfApplication1
{
    /// &amp;lt;summary&amp;gt;
    /// Interaction logic for MainWindow.xaml
    /// &amp;lt;/summary&amp;gt;
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();

            var timer = new System.Timers.Timer(1000);
            timer.Start();
            timer.Elapsed += new System.Timers.ElapsedEventHandler(TimerElapsedHandler);

        }

        void TimerElapsedHandler(object sender, EventArgs e)
        {
            MessageBox.Show(&amp;quot;Timer has Elapsed&amp;quot;);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;第一个参数 sender 表示引发实践的物件；第二个参数 e 是传说的数据，类别是 EventArgs 或其子类。事件处理方法返回值 void。&lt;/p&gt;
&lt;p&gt;其实委托关联可以简写为&lt;code&gt;timer.Elapsed += TimerElapsedHandler;&lt;/code&gt;，取消事件订阅&lt;code&gt;timer.Elapsed -= TimerElapsedHandler;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;匿名委托更为简洁，但是取消订阅不好处理,这里不作展开。&lt;/p&gt;
&lt;p&gt;2017年09月11日 更新一下匿名的两张写法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;timer.Elapsed += delegate(object sender, System.Timers.ElapsedEventArgs e)
{
    MessageBox.Show(&amp;quot;Timer has Elapsed&amp;quot;);
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或是直接次采用剪头语法来写&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;timer.Elapsed += (object sender, System.Timers.ElapsedEventArgs e) =&amp;gt;
{
    MessageBox.Show(&amp;quot;Timer has Elapsed.&amp;quot;);
};
&lt;/code&gt;&lt;/pre&gt;
- https://kissjava.cn/posts/visual-c#-%E4%B8%AD%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%8F%8A%E5%A7%94%E6%89%98/ - kissjava.cn</description>
        </item>
    
    
  </channel>
</rss> 