<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 清风徐来</title>
    <link>https://kissjava.cn/posts/</link>
    <description>Recent content in Posts on 清风徐来</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>kissjava.cn</copyright>
    <lastBuildDate>Sun, 21 Jun 2020 08:44:17 +0800</lastBuildDate>
    
	<atom:link href="https://kissjava.cn/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>另一个VPS流量超过后自动关机脚本</title>
      <link>https://kissjava.cn/posts/another-auto-shutdown-script-after-certain-bandwith-usage/</link>
      <pubDate>Sun, 21 Jun 2020 08:44:17 +0800</pubDate>
      
      <guid>https://kissjava.cn/posts/another-auto-shutdown-script-after-certain-bandwith-usage/</guid>
      <description>说明 本脚本单位以GB计算非Gib；Gib是1024进位，GB是1000进位。
如果用了Gib会误差93.132%，也就是说你的VPS有1024GB/月流量，写成Gib就是953.6Gib，误差还是挺大的，所以单位别搞混了。
值得注意的是阿里云国际是只计算出站流量的，入站流量免费（以VPS为中心思考）。
安装vnstat(centos) yum -y install epel-release yum install -y vnstat service vnstat start chkconfig vnstat on 安装（debian） apt-get install vnstat 修改配置文件 vi /etc/vnstat.conf 找到UnitMode 0 修改为：UnitMode 1
创建脚本文件check.sh vi check.sh #!/bin/bash vnstat -u -i eth0 #更新网卡记录 ax=`vnstat --oneline | awk -F &amp;quot;;&amp;quot; &#39;{print $10}&#39;` #获取每月用量 $11:进站+出站;$10是:出站;$9是:进站 if [[ &amp;quot;$ax&amp;quot; == *GB* ]]; #如果每月用量单位是GB则进入 then if [ $(echo &amp;quot;$(echo &amp;quot;$ax&amp;quot; | sed &#39;s/ GB//g&#39;) / 99&amp;quot;|bc) -eq 1 ] #每月实际流量数除以99，大于或等于1，则执行关机命令 then /usr/sbin/shutdown -h now fi fi 给check.</description>
    </item>
    
    <item>
      <title>VPS流量超过一定数量后自动关机脚本</title>
      <link>https://kissjava.cn/posts/server-auto-shutdown-script-after-certain-bandwidth-usage/</link>
      <pubDate>Sat, 20 Jun 2020 16:57:25 +0800</pubDate>
      
      <guid>https://kissjava.cn/posts/server-auto-shutdown-script-after-certain-bandwidth-usage/</guid>
      <description>前言 还是阿里国际取消新手套餐引起的
防止流量费用飞起来 :(
步骤 . 创建脚本文件safe.sh
. 然后根据主机商的计费方式，选一种复制进去。
. 赋予执行权限chmod +x safe.sh
. 利用crontab开机启动safe.sh
crontab -e @reboot /path/to/safe.sh . 重启即可
注意！小心！免责！  脚本请看看源码的注释，有需要自己修改的地方，比如流量，比如网卡名 请测试，请测试，请测试；不一定能在你的主机上允许，请测试后再使用，避免天价账单 脚本源自网络收集，种种缘由万一脚本未实现关机，造成的流量账单，绝不负责  双向（流入+流出）计费方式 #!/usr/bin/python3 #coding=utf-8 import sys,re,time,os maxdata = 100 * 1024 * 1024 * 1024 #流量上限，单位是Byte, 100G memfilename = &amp;#39;/root/data.txt&amp;#39; netcard = &amp;#39;/proc/net/dev&amp;#39; def checkfile(filename): if os.path.isfile(filename): pass else: f = open(filename, &amp;#39;w&amp;#39;) f.write(&amp;#39;0&amp;#39;) f.close() def get_net_data(): nc = netcard or &amp;#39;/proc/net/dev&amp;#39; fd = open(nc, &amp;#34;r&amp;#34;) netcardstatus = False for line in fd.</description>
    </item>
    
    <item>
      <title>macOS安装Ngnix php MySQL</title>
      <link>https://kissjava.cn/posts/macos%E5%AE%89%E8%A3%85ngnix-php-mysql/</link>
      <pubDate>Fri, 19 Jun 2020 09:31:15 +0800</pubDate>
      
      <guid>https://kissjava.cn/posts/macos%E5%AE%89%E8%A3%85ngnix-php-mysql/</guid>
      <description>Nginx 虽然Apache本身包含在macOS中，但我们建议安装Nginx，特别是轻量级且易于配置。
Installation 安装和启动Nginx，我们使用
brew install nginxsudo brew services start nginx虽然我们没有在brew安装中使用sudo，但如果我们想使用默认端口80，则必须使用它来启动Nginx
Configuration 编辑配置文件:
vi /usr/local/etc/nginx/nginx.conf首先，我们必须向Nginx授予访问我们文件的权限，并避免令人讨厌的403 Forbidden错误。为此，我们更改第一行，其中&amp;lt;user&amp;gt;是您的用户名：
user &amp;lt;user&amp;gt; staff;然后，我们将在http指令中添加一个新的部分：
server {listen 80;server_name localhost;root /Users/&amp;lt;user&amp;gt;/Documents/path/to/your/website;index index.html index.htm;}然后我们重新启动Nginx
sudo brew services restart nginxPHP 为了将PHP与Nginx一起使用，我们将使用PHP-FPM。在这里，我们将使用PHP 7.2，但您可以轻松选择任何其他版本:
brew install php72接着编辑配置文件:
vi /usr/local/etc/nginx/nginx.conf修改以index开头的行:
index index.php index.html;最后，在部分服务器中添加以下行，以运行PHP:
location ~ \.php {fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;include fastcgi_params;fastcgi_pass 127.0.0.1:9000;fastcgi_split_path_info ^(.+\.php)(/.+)$;fastcgi_buffers 16 16k;fastcgi_buffer_size 32k;}为了解决File not found.</description>
    </item>
    
    <item>
      <title>使用 docker 部署 Caddy &#43; V2ray</title>
      <link>https://kissjava.cn/posts/docker-deploy-caddy-and-v2ray/</link>
      <pubDate>Thu, 18 Jun 2020 09:31:15 +0800</pubDate>
      
      <guid>https://kissjava.cn/posts/docker-deploy-caddy-and-v2ray/</guid>
      <description>以往使用传统的安装部署过于麻烦, 尤其是使用 nginx 时的证书申请.
而且一键脚本，容易污染整台主机。
为了更好的加速访问一些海外开发者网站，我们需要更加清晰友好的安装v2ray。
使用 docker 部署 Caddy + V2ray(VMess + WebSocket + TLS) 其实也非常简单, 而且隔离了主机上的其他服务。
非常适用于预算紧张，一机多用。
安装 Docker 这个就不多讲了 Debian系 apt install docker-ce Redhat系 yum install docker-ce 可能需要添加源后再去安装，官网step by step都有。
部署 Caddy 创建配置文件及目录 mkdir ~/caddy &amp;amp;&amp;amp; touch ~/caddy/Caddyfile 编辑 Caddyfile
domain { tls email root /srv proxy path 127.0.0.1:port { websocket header_upstream -Origin } }    替换字符 说明 Demo     domain 域名 expamle.</description>
    </item>
    
    <item>
      <title>拆分echo示例项目的crud模块</title>
      <link>https://kissjava.cn/posts/%E6%8B%86%E5%88%86echo%E7%A4%BA%E4%BE%8B%E9%A1%B9%E7%9B%AE%E7%9A%84crud%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Tue, 03 Sep 2019 15:56:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E6%8B%86%E5%88%86echo%E7%A4%BA%E4%BE%8B%E9%A1%B9%E7%9B%AE%E7%9A%84crud%E6%A8%A1%E5%9D%97/</guid>
      <description>拆分echo示例项目的crud模块的源文件。
对于那些经常写golang的人来说，这可能很无聊。
目录结构 ➜ crud tree.├── handler│ ├── create.go│ ├── delete.go│ ├── list.go│ └── update.go├── model│ └── user.go└── router.gorouter.go package mainimport (&amp;quot;./handler&amp;quot;&amp;quot;github.com/labstack/echo&amp;quot;&amp;quot;github.com/labstack/echo/middleware&amp;quot;)func main() {e := echo.New()//middlewaree.Use(middleware.Logger())e.Use(middleware.Recover())//routese.GET(&amp;quot;/users&amp;quot;, handler.ListUser)e.GET(&amp;quot;/users/:id&amp;quot;, handler.GetUser)e.POST(&amp;quot;/users&amp;quot;, handler.CreateUser)e.PUT(&amp;quot;/users/:id&amp;quot;, handler.UpdateUser)e.DELETE(&amp;quot;/users/:id&amp;quot;, handler.DeleteUser)//start servere.Logger.Fatal(e.Start(&amp;quot;:8000&amp;quot;))}model/user.go package modeltype (User struct {ID int `json:&amp;quot;id&amp;quot;`Name string `json:&amp;quot;name&amp;quot;`})//这是一个持久层，基本上被DB取代的区域var (Users = map[int]*User{}Seq = 1)handler目录 用于存储业务逻辑的区域，使用Service可能更好</description>
    </item>
    
    <item>
      <title>Go 非零基础一文入门</title>
      <link>https://kissjava.cn/posts/go-%E9%9D%9E%E9%9B%B6%E5%9F%BA%E7%A1%80%E4%B8%80%E6%96%87%E5%85%A5%E9%97%A8/</link>
      <pubDate>Sun, 18 Aug 2019 22:35:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/go-%E9%9D%9E%E9%9B%B6%E5%9F%BA%E7%A1%80%E4%B8%80%E6%96%87%E5%85%A5%E9%97%A8/</guid>
      <description>其实为了方便使用其他编程语言的开发者快速理解Go的一些特性。
指针和new package mainimport &amp;quot;fmt&amp;quot;func main() {/*new关键字用于创建具有某些数据类型的指针变量*///创建一个字符串类型的指针Pointer stringname := new(string)//打印指针地址，输出类似0xc0000a0030fmt.Println(name)//给该指针指向的内存写入数据//name是指针变量，//给指针变量前加*就是取消应用，直接访问其中的值*name = &amp;quot;hello world&amp;quot;//打印该指针指向的内存中的数据，输出hello worldfmt.Println(*name)}make关键字的限制 此关键字只能用于创建复杂类型的变量，即：
 channel slice map  反引号的用途 package mainimport &amp;quot;fmt&amp;quot;func main() {var message = `My name is &amp;quot;John Work&amp;quot;.Are you ready.Let&#39;s learn &amp;quot;Golang&amp;quot;.`fmt.Println(message)}它会原样输出，不用顾虑转义字符，单双引号，想换行直接回车就行。
nil和零值 nil不是数据类型，而是值。值为nil的变量表示它具有空值。 Go中的数据类型定义后如果没赋值都会有默认的零值，和C不一样，不会出现奇奇怪怪的值 string 零值 &amp;quot;&amp;rdquo; bool 零值 false 整型 零值 0 浮点型 零值 0.</description>
    </item>
    
    <item>
      <title>Demo 学 Echo Part17 输出Pdf</title>
      <link>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part17-%E8%BE%93%E5%87%BApdf/</link>
      <pubDate>Sun, 18 Aug 2019 20:09:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part17-%E8%BE%93%E5%87%BApdf/</guid>
      <description>输出PDF也是很容易遇到的要求。
我们用gopdf实现，先安装go get -u github.com/jung-kurt/gofpdf 用到中文需要注意，设置utf8字体。
package mainimport (&amp;quot;log&amp;quot;&amp;quot;github.com/jung-kurt/gofpdf&amp;quot;)func main() {//参数说明//文档方向，纵向（P）还是横向（L）//度量单位，mm表示毫米//文档的大小，即将选择A4//字体路径文件，用不到pdf := gofpdf.New(&amp;quot;P&amp;quot;, &amp;quot;mm&amp;quot;, &amp;quot;A4&amp;quot;, &amp;quot;&amp;quot;)//创建新页面pdf.AddPage()//中文字体设置pdf.AddUTF8Font(&amp;quot;NotoSansSC&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;./NotoSansSC-Regular.ttf&amp;quot;)//配置字体pdf.SetFont(&amp;quot;NotoSansSC&amp;quot;, &amp;quot;&amp;quot;, 16)//左起5mm，上起10mm写字pdf.Text(5, 10, &amp;quot;你好, 世界&amp;quot;)//左侧5mm，距顶部20mm，贴图；//第四个参数是图像宽度。如果大于0的值，则将根据编号按比例调整图像大小pdf.Image(&amp;quot;./assets/terminal.png&amp;quot;, 5, 20, 200, 0, false, &amp;quot;&amp;quot;, 0, &amp;quot;&amp;quot;)err := pdf.OutputFileAndClose(&amp;quot;./file.pdf&amp;quot;)if err != nil {log.Println(&amp;quot;ERROR&amp;quot;, err.Error())}}效果 字体文件下载：NotoSansSC-Regular.ttf.zip</description>
    </item>
    
    <item>
      <title>Demo 学 Echo Part16 读写Excel XLSX文件（Excelize）</title>
      <link>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part16-%E8%AF%BB%E5%86%99excel-xlsx%E6%96%87%E4%BB%B6excelize/</link>
      <pubDate>Sun, 18 Aug 2019 18:52:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part16-%E8%AF%BB%E5%86%99excel-xlsx%E6%96%87%E4%BB%B6excelize/</guid>
      <description>Web应用中免不了用到Excel。当然现在都是用XLSX格式了。 先安装go get github.com/360EntSecGroup-Skylar/excelize
##建立Excel文件
package mainimport (&amp;quot;fmt&amp;quot;&amp;quot;log&amp;quot;&amp;quot;github.com/360EntSecGroup-Skylar/excelize&amp;quot;)type M map[string]interface{}var data = []M{M{&amp;quot;Name&amp;quot;: &amp;quot;Noval&amp;quot;, &amp;quot;Gender&amp;quot;: &amp;quot;male&amp;quot;, &amp;quot;Age&amp;quot;: 18},M{&amp;quot;Name&amp;quot;: &amp;quot;Nabila&amp;quot;, &amp;quot;Gender&amp;quot;: &amp;quot;female&amp;quot;, &amp;quot;Age&amp;quot;: 12},M{&amp;quot;Name&amp;quot;: &amp;quot;Yasa&amp;quot;, &amp;quot;Gender&amp;quot;: &amp;quot;male&amp;quot;, &amp;quot;Age&amp;quot;: 11},}func main() {xlsx := excelize.NewFile()sheet1Name := &amp;quot;Sheet One&amp;quot;xlsx.SetSheetName(xlsx.GetSheetName(1), sheet1Name)xlsx.SetCellValue(sheet1Name, &amp;quot;A1&amp;quot;, &amp;quot;Name&amp;quot;)xlsx.SetCellValue(sheet1Name, &amp;quot;B1&amp;quot;, &amp;quot;Gender&amp;quot;)xlsx.SetCellValue(sheet1Name, &amp;quot;C1&amp;quot;, &amp;quot;Age&amp;quot;)err := xlsx.AutoFilter(sheet1Name, &amp;quot;A1&amp;quot;, &amp;quot;C1&amp;quot;, &amp;quot;&amp;quot;)if err != nil {log.</description>
    </item>
    
    <item>
      <title>Demo 学 Echo Part15 发送mail</title>
      <link>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part15-%E5%8F%91%E9%80%81mail/</link>
      <pubDate>Sun, 18 Aug 2019 10:25:48 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part15-%E5%8F%91%E9%80%81mail/</guid>
      <description>可用用&amp;quot;net/smtp&amp;quot;包，功能比较原始。我们用第三方包gomail，更强大。
package mainimport (&amp;quot;log&amp;quot;&amp;quot;gopkg.in/gomail.v2&amp;quot;)const CONFIG_SMTP_HOST = &amp;quot;smtp.163.com&amp;quot;const CONFIG_SMTP_PORT = 465const CONFIG_EMAIL = &amp;quot;kissjava@163.com&amp;quot;const CONFIG_PASSWORD = &amp;quot;Mpassword3&amp;quot;func main() {mailer := gomail.NewMessage()mailer.SetHeader(&amp;quot;From&amp;quot;, CONFIG_EMAIL)mailer.SetHeader(&amp;quot;To&amp;quot;, &amp;quot;kissjava.net@gmail.com&amp;quot;, &amp;quot;hellowiki@qq.com&amp;quot;)mailer.SetAddressHeader(&amp;quot;Cc&amp;quot;, &amp;quot;hellowiki@icloud.com&amp;quot;, &amp;quot;HelloWiki&amp;quot;)mailer.SetHeader(&amp;quot;Subject&amp;quot;, &amp;quot;Test mail测试&amp;quot;)mailer.SetBody(&amp;quot;text/html&amp;quot;, &amp;quot;Hello, &amp;lt;b&amp;gt;have a nice day&amp;lt;/b&amp;gt;&amp;quot;)mailer.Attach(&amp;quot;./assets/terminal.png&amp;quot;)dialer := gomail.NewDialer(CONFIG_SMTP_HOST,CONFIG_SMTP_PORT,CONFIG_EMAIL,CONFIG_PASSWORD,)err := dialer.DialAndSend(mailer)if err != nil {log.Println(&amp;quot;Send faild.&amp;quot;)log.Fatal(err.Error())}log.Println(&amp;quot;Mail sent!&amp;quot;)}</description>
    </item>
    
    <item>
      <title>Demo 学 Echo Part14  HTTP Gzip压缩</title>
      <link>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part14-http-gzip%E5%8E%8B%E7%BC%A9/</link>
      <pubDate>Sat, 17 Aug 2019 23:05:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part14-http-gzip%E5%8E%8B%E7%BC%A9/</guid>
      <description>如果不采用Echo时，可以使用第三方库gziphandler，Echo直接用Gzip中间件。 HTTP Gzip 就是耗费一丢丢cpu，但是减少了网络传输的大小，从而提升传输速度也减少了带宽投入。 只要Rquest header中有Accept-Encoding: gzip, deflate就说明浏览器支持HTTP Gzip，现代浏览器估计没有不支持的。当然后端处理也需要响应头也要插入Content-Encoding: gzip才行。 么有采用HTTP Gzip看看传输大小：
package mainimport (&amp;quot;io&amp;quot;&amp;quot;net/http&amp;quot;&amp;quot;os&amp;quot;)func main() {mux := new(http.ServeMux)mux.HandleFunc(&amp;quot;/image&amp;quot;, func(w http.ResponseWriter, r *http.Request) {f, err := os.Open(&amp;quot;sample.png&amp;quot;)if f != nil {defer f.Close()}if err != nil {http.Error(w, err.Error(), http.StatusInternalServerError)return}_, err = io.Copy(w, f)if err != nil {http.Error(w, err.Error(), http.StatusInternalServerError)}})server := new(http.</description>
    </item>
    
    <item>
      <title>Demo 学 Echo Part13 跨站点请求伪造（CSRF）</title>
      <link>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part13-%E8%B7%A8%E7%AB%99%E7%82%B9%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0csrf/</link>
      <pubDate>Sat, 17 Aug 2019 21:33:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part13-%E8%B7%A8%E7%AB%99%E7%82%B9%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0csrf/</guid>
      <description>跨站点请求伪造（CSRF）攻击以及如何预测它们
此类攻击的示例：尝试通过Web浏览器以外的媒体登录，例如使用CURL等
通常的防御方法是使用csrf令牌。在有表单的每个页面上，都会生成csrf令牌。提交表单时，会在请求中插入CSRF，然后后端检查发送的CSRF是否有效
csrf令牌本身是每次表单页面出现时生成的随机字符串。通常在每个POST请求中，令牌都作为标头，数据表单或查询字符串插入
package mainimport (&amp;quot;fmt&amp;quot;&amp;quot;html/template&amp;quot;&amp;quot;net/http&amp;quot;&amp;quot;github.com/labstack/echo&amp;quot;&amp;quot;github.com/labstack/echo/middleware&amp;quot;)type M map[string]interface{}func main() {tmpl := template.Must(template.ParseGlob(&amp;quot;./*.html&amp;quot;))e := echo.New()const CSRF_TOKEN_HEADER = &amp;quot;X-Csrf-Token&amp;quot;const CSRF_KEY = &amp;quot;csrf_token&amp;quot;e.Use(middleware.CSRFWithConfig(middleware.CSRFConfig{TokenLookup: &amp;quot;header:&amp;quot; + CSRF_TOKEN_HEADER,ContextKey: CSRF_KEY,}))e.GET(&amp;quot;/index&amp;quot;, func(c echo.Context) error {data := make(M)data[CSRF_KEY] = c.Get(CSRF_KEY)return tmpl.ExecuteTemplate(c.Response(), &amp;quot;view.html&amp;quot;, data)})//sayhello处理程序中没有csrf标记检查，因为它已被中间件隐式处理e.POST(&amp;quot;/sayhello&amp;quot;, func(c echo.Context) error {data := make(M)if err := c.</description>
    </item>
    
    <item>
      <title>Demo 学 Echo Part12 CORS 跨域资源共享和Request 预检</title>
      <link>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part12-cors-%E8%B7%A8%E5%9F%9F%E8%B5%84%E6%BA%90%E5%85%B1%E4%BA%AB%E5%92%8Crequest-%E9%A2%84%E6%A3%80/</link>
      <pubDate>Sat, 17 Aug 2019 20:39:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part12-cors-%E8%B7%A8%E5%9F%9F%E8%B5%84%E6%BA%90%E5%85%B1%E4%BA%AB%E5%92%8Crequest-%E9%A2%84%E6%A3%80/</guid>
      <description>CORS机制，它使用额外的 HTTP 头来告诉浏览器 让运行在一个 origin (domain) 上的Web应用被准许访问来自不同源服务器上的指定的资源。当一个资源从与该资源本身所在的服务器不同的域、协议或端口请求一个资源时，资源会发起一个跨域 HTTP 请求。 以下是可用于CORS配置的标头列表
Access-Control-Allow-OriginAccess-Control-Allow-MethodsAccess-Control-Allow-HeadersAccess-Control-Allow-CredentialsAccess-Control-Max-AgeCORS配置位于目标Web应用程序的服务器端。 例如：我们的应用程序在本地从google.com中提取数据，然后CORS配置位于google.com;如果我们收到CORS错误，则无法完成任何其他操作，因为CORS应用程序目标由google.com上的人员控制。
练习时间： 创建一个新项目。这个简单的应用程序将在http//localhost:9000/上运行，然后我们将尝试从其他域访问它.
package mainimport (&amp;quot;log&amp;quot;&amp;quot;net/http&amp;quot;)func main() {http.HandleFunc(&amp;quot;/index&amp;quot;, func(w http.ResponseWriter, r *http.Request) {w.Header().Set(&amp;quot;Access-Control-Allow-Origin&amp;quot;, &amp;quot;https://www.google.com&amp;quot;)w.Header().Set(&amp;quot;Access-Control-Allow-Methods&amp;quot;, &amp;quot;OPTIONS, GET, POST, PUT&amp;quot;)w.Header().Set(&amp;quot;Access-Control-Allow-Headers&amp;quot;, &amp;quot;Content-Type, X-CSRF-Token&amp;quot;)if r.Method == &amp;quot;OPTIONS&amp;quot; {w.Write([]byte(&amp;quot;allowed&amp;quot;))return}w.Write([]byte(&amp;quot;hello&amp;quot;))})log.Println(&amp;quot;Starting app at :9000&amp;quot;)http.ListenAndServe(&amp;quot;:9000&amp;quot;, nil)}上面的代码表示允许从https://www.google.com发送的请求进入;我们选择了谷歌域名，因为测试将从那里完成，请求的目标是http://localhost:9000/
我们模拟是从google.com 访问 本地主机Web应用localhost:9000（使用Chrome的开发人员工具从浏览器执行请求）。不是通过localhost:9000访问google.com，不要理解为颠倒。
再次说明，localhost:9000是受，google.com是攻。够形象了吧。
Access-Control-Allow-Methods标头确定允许哪些HTTP方法（使用逗号分隔符输入） Access-Control-Allow-Headers标头确定请求中允许哪些标头密钥。
好的，我们可以测试了。 首先，请确保安装了Google Chrome； 其次，你可以爬墙； 然后安装jQuery Injector扩展。 打开https://www.</description>
    </item>
    
    <item>
      <title>Demo 学 Echo Part11 Gorilla Session</title>
      <link>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part11-gorilla-session/</link>
      <pubDate>Sat, 17 Aug 2019 19:57:02 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part11-gorilla-session/</guid>
      <description>前面用了Gorilla的Cookie，Session也可以用他写的。 首次访问get时，session没有村数据，显示empty result 访问set时，会写入hello 和 world，然后再307临时重定向到get，会显示 hello world 访问delete，会删除session，再307到get显示empty result。
demo 采用cookie来存储session数据，也支持其他多种方式存储。
package mainimport (&amp;quot;fmt&amp;quot;&amp;quot;net/http&amp;quot;&amp;quot;github.com/gorilla/sessions&amp;quot;&amp;quot;github.com/labstack/echo&amp;quot;)const SESSION_ID = &amp;quot;id&amp;quot;func newCookieStore() *sessions.CookieStore {authKey := []byte(&amp;quot;my-auth-key-very-secret&amp;quot;)encryptionKey := []byte(&amp;quot;my-encryption-key-very-secret123&amp;quot;)store := sessions.NewCookieStore(authKey, encryptionKey)store.Options.Path = &amp;quot;/&amp;quot;store.Options.MaxAge = 86400 * 7store.Options.HttpOnly = truereturn store}var store = newCookieStore()func main() {e := echo.New()e.GET(&amp;quot;/get&amp;quot;, func(c echo.Context) error {session, _ := store.</description>
    </item>
    
    <item>
      <title>Demo 学 Echo Part10 安全的Cookie</title>
      <link>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part10-%E5%AE%89%E5%85%A8%E7%9A%84cookie/</link>
      <pubDate>Sat, 17 Aug 2019 19:38:14 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part10-%E5%AE%89%E5%85%A8%E7%9A%84cookie/</guid>
      <description>使用securecookie非常简单，通过securecookie.New（）创建一个安全的cookie对象，然后使用该对象进行编码 - 解码cookie数据操作。调用.New（）函数需要2个参数。 第一个，使用HMAC加密算法验证cookie数据需要的哈希密钥 第二个，cookie数据加密需要块密钥，这些密钥是可选的。使用的默认加密算法是AES。
代码中生成随机字符串是通过使用gubrak的第三方库完成的。
package mainimport (&amp;quot;net/http&amp;quot;&amp;quot;time&amp;quot;&amp;quot;github.com/gorilla/securecookie&amp;quot;&amp;quot;github.com/labstack/echo&amp;quot;&amp;quot;github.com/novalagung/gubrak&amp;quot;)type M map[string]interface{}var sc = securecookie.New([]byte(&amp;quot;very-secret&amp;quot;), []byte(&amp;quot;a-lot-secret-yay&amp;quot;))func setCookie(c echo.Context, name string, data M) error {encoded, err := sc.Encode(name, data)if err != nil {return err}cookie := &amp;amp;http.Cookie{Name: name,Value: encoded,Path: &amp;quot;/&amp;quot;,Secure: false,HttpOnly: true,Expires: time.Now().Add(1 * time.Hour),}http.SetCookie(c.Response(), cookie)return nil}func getCookie(c echo.</description>
    </item>
    
    <item>
      <title>Demo 学 Echo Part9 配置文件</title>
      <link>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part9-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sat, 17 Aug 2019 17:22:53 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part9-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</guid>
      <description>配置文件可以用json，YAML格式 app.conf.json
{&amp;quot;appName&amp;quot;: &amp;quot;SimpleApp&amp;quot;,&amp;quot;server&amp;quot;: {&amp;quot;port&amp;quot;: 5000}}main.go
package mainimport (&amp;quot;fmt&amp;quot;&amp;quot;net/http&amp;quot;&amp;quot;github.com/labstack/echo&amp;quot;&amp;quot;github.com/spf13/viper&amp;quot;)func main() {e := echo.New()viper.SetConfigType(&amp;quot;json&amp;quot;)viper.AddConfigPath(&amp;quot;.&amp;quot;)viper.SetConfigName(&amp;quot;app.conf&amp;quot;)err := viper.ReadInConfig()if err != nil {e.Logger.Fatal(err)}fmt.Println(&amp;quot;Starting&amp;quot;, viper.GetString(&amp;quot;appName&amp;quot;))e.GET(&amp;quot;/index&amp;quot;, func(c echo.Context) (err error) {return c.JSON(http.StatusOK, true)})e.Logger.Fatal(e.Start(&amp;quot;:&amp;quot; + viper.GetString(&amp;quot;server.port&amp;quot;)))}运行
go run main.goStarting SimpleApp____ __/ __/___/ / ___/ _// __/ _ \/ _ \/___/\__/_//_/\___/ v4.</description>
    </item>
    
    <item>
      <title>Demo 学 Echo Part8 命令行解析</title>
      <link>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part8-%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Sat, 17 Aug 2019 16:25:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part8-%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%A7%A3%E6%9E%90/</guid>
      <description>启动服务是可以指定app name和port。
package mainimport (&amp;quot;fmt&amp;quot;&amp;quot;net/http&amp;quot;&amp;quot;github.com/labstack/echo&amp;quot;&amp;quot;gopkg.in/alecthomas/kingpin.v2&amp;quot;)var (argAppName = kingpin.Arg(&amp;quot;name&amp;quot;, &amp;quot;Application name&amp;quot;).Required().String()argPort = kingpin.Arg(&amp;quot;port&amp;quot;, &amp;quot;Web server port&amp;quot;).Default(&amp;quot;9000&amp;quot;).Int())func main() {kingpin.Parse()appName := *argAppNameport := fmt.Sprintf(&amp;quot;:%d&amp;quot;, *argPort)fmt.Printf(&amp;quot;Starting %s at %s&amp;quot;, appName, port)e := echo.New()e.GET(&amp;quot;/index&amp;quot;, func(c echo.Context) (err error) {return c.JSON(http.StatusOK, true)})e.Logger.Fatal(e.Start(port))}编译后执行
 ./main &amp;quot;Echo Demo part 8&amp;quot; 3000 Starting Echo Demo part 8 at :3000____ __/ __/___/ / ___/ _// __/ _ \/ _ \/___/\__/_//_/\___/ v4.</description>
    </item>
    
    <item>
      <title>Demo 学 Echo Part7 Middleware 和 Logging</title>
      <link>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part7-middleware-%E5%92%8C-logging/</link>
      <pubDate>Sat, 17 Aug 2019 16:08:04 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part7-middleware-%E5%92%8C-logging/</guid>
      <description>中间件是在处理http请求之前或之后调用的代码块。中间件通常按功能来做，例如：身份验证中间件，用于日志记录的中间件，用于gzip压缩的中间件等 跑一遍，来理解
package mainimport (&amp;quot;fmt&amp;quot;&amp;quot;net/http&amp;quot;&amp;quot;github.com/labstack/echo&amp;quot;)func middlewareOne(next echo.HandlerFunc) echo.HandlerFunc {return func(c echo.Context) error {fmt.Println(&amp;quot;from middleware one&amp;quot;)return next(c)}}func middlewareTwo(next echo.HandlerFunc) echo.HandlerFunc {return func(c echo.Context) error {fmt.Println(&amp;quot;from middleware two&amp;quot;)return next(c)}}func main() {e := echo.New()// middleware heree.Use(middlewareOne)e.Use(middlewareTwo)e.GET(&amp;quot;/index&amp;quot;, func(c echo.Context) (err error) {fmt.Println(&amp;quot;threeeeee!&amp;quot;)return c.JSON(http.StatusOK, true)})e.Logger.Fatal(e.Start(&amp;quot;:9000&amp;quot;))}客户端
curl http://localhost:9000/indexoutput=&amp;gt;true服务端输出</description>
    </item>
    
    <item>
      <title>Demo 学 Echo Part6 模板渲染</title>
      <link>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part6-%E6%A8%A1%E6%9D%BF%E6%B8%B2%E6%9F%93/</link>
      <pubDate>Sat, 17 Aug 2019 15:17:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part6-%E6%A8%A1%E6%9D%BF%E6%B8%B2%E6%9F%93/</guid>
      <description>echo解析和呈现模板的过程不是由自身处理，而是由html/template包处理。因此，echo中的模板渲染方式与使用普通golang应用程序相同.
package mainimport (&amp;quot;html/template&amp;quot;&amp;quot;io&amp;quot;&amp;quot;net/http&amp;quot;&amp;quot;github.com/labstack/echo&amp;quot;)type M map[string]interface{}type Info struct {Affiliation stringAddress string}func (t Info) GetAffiliationDetailInfo() string {return &amp;quot;have 31 divisions&amp;quot;}type Person struct {Name stringGender stringHobbies []stringInfo Info}//.template属性负责解析和呈现模板//.location属性指向模板文件所在的文件夹路径。// debug 如果为false，则模板解析仅在应用程序启动时执行一次。此模式适合在生产阶段激活type Renderer struct {template *template.Templatedebug boollocation string}//创建NewRenderer（）函数，以便更容易初始化渲染器对象func NewRenderer(location string, debug bool) *Renderer {tpl := new(Renderer)tpl.</description>
    </item>
    
    <item>
      <title>Demo 学 Echo Part5 HTTP 错误处理</title>
      <link>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part5-http-%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</link>
      <pubDate>Sat, 17 Aug 2019 13:30:39 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part5-http-%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</guid>
      <description>自定义错误处理程序 覆盖e.HTTPErrorHandler属性
package mainimport (&amp;quot;net/http&amp;quot;&amp;quot;github.com/labstack/echo&amp;quot;&amp;quot;gopkg.in/go-playground/validator.v9&amp;quot;)type User struct {Name string `json:&amp;quot;name&amp;quot; validate:&amp;quot;required&amp;quot;`Email string `json:&amp;quot;email&amp;quot; validate:&amp;quot;required,email&amp;quot;`Age int `json:&amp;quot;age&amp;quot; validate:&amp;quot;gte=0,lte=80&amp;quot;`}type CustomValidator struct {validator *validator.Validate}func (cv *CustomValidator) Validate(i interface{}) error {return cv.validator.Struct(i)}func main() {e := echo.New()e.HTTPErrorHandler = func(err error, c echo.Context) {report, ok := err.(*echo.HTTPError)if !ok {report = echo.NewHTTPError(http.StatusInternalServerError, err.Error())}c.Logger().Error(report)c.</description>
    </item>
    
    <item>
      <title>Demo 学 Echo Part4 HTTP 请求的验证</title>
      <link>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part4-http-%E8%AF%B7%E6%B1%82%E7%9A%84%E9%AA%8C%E8%AF%81/</link>
      <pubDate>Sat, 17 Aug 2019 10:52:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part4-http-%E8%AF%B7%E6%B1%82%E7%9A%84%E9%AA%8C%E8%AF%81/</guid>
      <description>HTTP请求的验证，采用了validator.v9
package mainimport (&amp;quot;net/http&amp;quot;&amp;quot;github.com/labstack/echo&amp;quot;&amp;quot;gopkg.in/go-playground/validator.v9&amp;quot;)type User struct {Name string `json:&amp;quot;name&amp;quot; validate:&amp;quot;required&amp;quot;`Email string `json:&amp;quot;email&amp;quot; validate:&amp;quot;required,email&amp;quot;`Age int `json:&amp;quot;age&amp;quot; validate:&amp;quot;gte=0,lte=80&amp;quot;`}type CustomValidator struct {validator *validator.Validate}func (cv *CustomValidator) Validate(i interface{}) error {return cv.validator.Struct(i)}func main() {e := echo.New()e.Validator = &amp;amp;CustomValidator{validator: validator.New()}e.POST(&amp;quot;/users&amp;quot;, func(c echo.Context) error {u := new(User)if err := c.Bind(u); err != nil {return err}if err := c.</description>
    </item>
    
    <item>
      <title>Demo 学 Echo Part3 解析HTTP请求</title>
      <link>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part3-%E8%A7%A3%E6%9E%90http%E8%AF%B7%E6%B1%82/</link>
      <pubDate>Sat, 17 Aug 2019 10:13:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part3-%E8%A7%A3%E6%9E%90http%E8%AF%B7%E6%B1%82/</guid>
      <description>解析HTTP请求
package mainimport (&amp;quot;fmt&amp;quot;&amp;quot;net/http&amp;quot;&amp;quot;github.com/labstack/echo&amp;quot;)type User struct {Name string `json:&amp;quot;name&amp;quot; form:&amp;quot;name&amp;quot; query:&amp;quot;name&amp;quot;`Email string `json:&amp;quot;email&amp;quot; form:&amp;quot;email&amp;quot; query:&amp;quot;email&amp;quot;`}func main() {r := echo.New()r.Any(&amp;quot;/user&amp;quot;, func(c echo.Context) (err error) {u := new(User)if err = c.Bind(u); err != nil {return}return c.JSON(http.StatusOK, u)})fmt.Println(&amp;quot;server started at :9000&amp;quot;)r.Start(&amp;quot;:9000&amp;quot;)}测试验证
curl -X POST http://localhost:9000/user \-d &#39;name=Joe&#39; \-d &#39;email=nope@novalagung.com&#39;# output =&amp;gt; {&amp;quot;name&amp;quot;:&amp;quot;Nope&amp;quot;,&amp;quot;email&amp;quot;:&amp;quot;nope@novalagung.</description>
    </item>
    
    <item>
      <title>Demo 学 Echo Part2 路由使用及静态文件</title>
      <link>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part2-%E8%B7%AF%E7%94%B1%E4%BD%BF%E7%94%A8%E5%8F%8A%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sat, 17 Aug 2019 10:02:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part2-%E8%B7%AF%E7%94%B1%E4%BD%BF%E7%94%A8%E5%8F%8A%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/</guid>
      <description>echo的路由处理及静态文件
package mainimport (&amp;quot;net/http&amp;quot;&amp;quot;github.com/labstack/echo&amp;quot;)var ActionIndex = func(w http.ResponseWriter, r *http.Request) {w.Write([]byte(&amp;quot;from action index&amp;quot;))}var ActionHome = http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {w.Write([]byte(&amp;quot;from action home&amp;quot;))},)var ActionAbout = echo.WrapHandler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {w.Write([]byte(&amp;quot;from action about&amp;quot;))},),)func main() {r := echo.New()r.Static(&amp;quot;/static&amp;quot;, &amp;quot;assets&amp;quot;)r.GET(&amp;quot;/index&amp;quot;, echo.WrapHandler(http.HandlerFunc(ActionIndex)))r.GET(&amp;quot;/home&amp;quot;, echo.WrapHandler(ActionHome))r.GET(&amp;quot;/about&amp;quot;, ActionAbout)r.Start(&amp;quot;:9000&amp;quot;)}</description>
    </item>
    
    <item>
      <title>Demo 学 Echo Part1 Routing</title>
      <link>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part1-routing/</link>
      <pubDate>Sat, 17 Aug 2019 09:53:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/demo-%E5%AD%A6-echo-part1-routing/</guid>
      <description>echo的路由
package mainimport (&amp;quot;fmt&amp;quot;&amp;quot;net/http&amp;quot;&amp;quot;strings&amp;quot;&amp;quot;github.com/labstack/echo&amp;quot;)type M map[string]interface{}func main() {r := echo.New()r.GET(&amp;quot;/&amp;quot;, func(ctx echo.Context) error {data := &amp;quot;Hello from /index&amp;quot;return ctx.String(http.StatusOK, data)})r.GET(&amp;quot;/html&amp;quot;, func(ctx echo.Context) error {data := &amp;quot;Hello from /html&amp;quot;return ctx.HTML(http.StatusOK, data)})r.GET(&amp;quot;/index&amp;quot;, func(ctx echo.Context) error {return ctx.Redirect(http.StatusTemporaryRedirect, &amp;quot;/&amp;quot;)})r.GET(&amp;quot;/json&amp;quot;, func(ctx echo.Context) error {data := M{&amp;quot;Message&amp;quot;: &amp;quot;Hello&amp;quot;, &amp;quot;Counter&amp;quot;: 2}return ctx.JSON(http.StatusOK, data)})// http://localhost:9000/page1?</description>
    </item>
    
    <item>
      <title>golang echo 入门</title>
      <link>https://kissjava.cn/posts/golang-echo-%E5%85%A5%E9%97%A8/</link>
      <pubDate>Thu, 15 Aug 2019 14:30:27 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/golang-echo-%E5%85%A5%E9%97%A8/</guid>
      <description>#golang echo 入门
##概要 go web framework echo的入门教程
##环境
 macOS 10.14.4 golang 1.11.5 echo 4.0.0  ##安装
go get -u github.com/labstack/echo/...##入门
mkdir $GOPATH/src/github.com/kissjava/echo_testcode $GOPATH/src/github.com/kissjava/echo_test/main.gomain.go
package mainimport (&amp;quot;github.com/labstack/echo&amp;quot;&amp;quot;net/http&amp;quot;)func main() {e := echo.New()e.GET(&amp;quot;/&amp;quot;, func(c echo.Context) error {return c.String(http.StatusOK, &amp;quot;Hello, World!&amp;quot;)})e.Logger.Fatal(e.Start(&amp;quot;:1323&amp;quot;))}以下开始进行：格式化、编译、运行、访问测试
go fmt github.com/kissjava/echo_testgo build github.com/kissjava/echo_test./echo_testcurl localhost:1323应该可以在终端返回“Hello，World！”
###提示 在官方的Github上，按README.md示例运行时，很可能无法正常运行
##路由 按你的喜好添加一些路由进去
package mainimport (&amp;quot;github.</description>
    </item>
    
    <item>
      <title>frp使用小结</title>
      <link>https://kissjava.cn/posts/frp%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/</link>
      <pubDate>Mon, 12 Aug 2019 15:50:22 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/frp%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/</guid>
      <description>frp有服务器端（frps）和客户端（frpc）之分，在Linux和Windows上都可使用，下载地址
##Linux服务器端安装
wget https://github.com/fatedier/frp/releases/download/v0.13.0/frp_0.13.0_linux_amd64.tar.gz #下载frptar -zxvf frp_0.13.0_linux_amd64.tar.gz #解压cd frp_0.13.0_linux_amd64 #进入目录rm -rf frpc_full.ini frpc frpc.ini #删除frpc相关的文件，frpc属于客户端vi frps.ini #编辑frps配置文件./frps -c ./frps.ini #启动frpsfrps.ini
[common]bind_port = 7000 #与客户端绑定的进行通信的端口 vhost_http_port = 8080 #访问客户端web服务自定义的端口号subdomain_host = frp.abc.com #自定义二级域名privilege_token = xxxx #token验证（可不加）#控制面板dashboard_port = 7500dashboard_user = admindashboard_pwd = admin#日志log_file = ./frps.loglog_level = infolog_max_days = 3[web1]type = httpsubdomain = web1auth_token = XXX[web2]type = httpsubdomain = web2auth_token = XXX##Linux客户端安装</description>
    </item>
    
    <item>
      <title>Linux系统/run/systemd空间不足问题解决</title>
      <link>https://kissjava.cn/posts/linux%E7%B3%BB%E7%BB%9F-run-systemd%E7%A9%BA%E9%97%B4%E4%B8%8D%E8%B6%B3%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</link>
      <pubDate>Sat, 03 Aug 2019 10:41:32 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/linux%E7%B3%BB%E7%BB%9F-run-systemd%E7%A9%BA%E9%97%B4%E4%B8%8D%E8%B6%B3%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</guid>
      <description>搞了olvps家原128m小内存的小小鸡，安装环境时出错了，/run/systemd空间不足
Failed to reload daemon: Refusing to reload, not enough space available on /run/systemd. Currently, 10.5M are free, but a safety buffer of 16.0M is enforced.用df -h看看，确实不足
root@AC-GIA:~# df -hFilesystem Size Used Avail Use% Mounted onudev 73M 0 73M 0% /devtmpfs 12M 880K 11M 8% /run/dev/vda1 2.9G 1.5G 1.4G 52% /tmpfs 85M 0 85M 0% /dev/shmtmpfs 5.0M 0 5.0M 0% /run/locktmpfs 85M 0 85M 0% /sys/fs/cgrouptmpfs 17M 0 17M 0% /run/user/0提示/run/systemd空间不足，那就给这个目录增加空间，就增加一行配置，vim /etc/fstab：</description>
    </item>
    
    <item>
      <title>高级Go测试教程</title>
      <link>https://kissjava.cn/posts/%E9%AB%98%E7%BA%A7go%E6%B5%8B%E8%AF%95%E6%95%99%E7%A8%8B/</link>
      <pubDate>Tue, 30 Jul 2019 22:06:59 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E9%AB%98%E7%BA%A7go%E6%B5%8B%E8%AF%95%E6%95%99%E7%A8%8B/</guid>
      <description>本教程中，我们将介绍Go语言更高级测试实践。</description>
    </item>
    
    <item>
      <title>Go的单元测试</title>
      <link>https://kissjava.cn/posts/go%E7%9A%84%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Tue, 30 Jul 2019 19:00:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/go%E7%9A%84%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</guid>
      <description>测试在所有软件中都非常重要。 能够确保代码的正确性并确保您所做的任何更改最终都不会破坏代码库中任何其他部分的内容，这非常重要。
##目标
在本教程结束时，您将掌握使用标准testing包，测试Go中的基本函数和方法。
在本教程中，我们将介绍如何使用go test命令为您的go代码开发和运行测试。
##Go的测试文件
如果您之前看过一些go项目，您可能已经注意到大多数（如果不是全部）的项目，Go代码文件都在同一目录中具有FILE_test.go对应项。
这些文件包含项目的所有单元测试，测试其对应的所有代码
简单的项目机构
myproject/- calc.go- calc_test.go- main.go- main_test.go##一个简单的测试文件
假如我们有一个非常简单的go程序，它由一个文件组成，并具有calculate（）函数。这个calculate（）函数只需要1个参数，返回加2后的结果。让我们开始运行 main.go
package mainimport (&amp;quot;fmt&amp;quot;)// 计算 returns x + 2.func Calculate(x int) (result int) {result = x + 2return result}func main() {fmt.Println(&amp;quot;Hello World&amp;quot;)}如果想要进行测试，我们可以在同一目录中创建一个main_test.go文件并编写以下测试： main_test.go
package mainimport (&amp;quot;testing&amp;quot;)func TestCalculate(t *testing.T) {if Calculate(2) != 4 {t.</description>
    </item>
    
    <item>
      <title>Go解析XML文件</title>
      <link>https://kissjava.cn/posts/go%E8%A7%A3%E6%9E%90xml%E6%96%87%E4%BB%B6/</link>
      <pubDate>Tue, 30 Jul 2019 17:28:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/go%E8%A7%A3%E6%9E%90xml%E6%96%87%E4%BB%B6/</guid>
      <description>在本教程中，我们将介绍如何有效读取XML文件，使用Go的encoding / xml包解析xml，遍历多个嵌套的xml元素，然后将其打印到终端
##XML示例文件
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&amp;lt;users&amp;gt;&amp;lt;user type=&amp;quot;admin&amp;quot;&amp;gt;&amp;lt;name&amp;gt;Elliot&amp;lt;/name&amp;gt;&amp;lt;social&amp;gt;&amp;lt;facebook&amp;gt;https://facebook.com&amp;lt;/facebook&amp;gt;&amp;lt;twitter&amp;gt;https://twitter.com&amp;lt;/twitter&amp;gt;&amp;lt;youtube&amp;gt;https://youtube.com&amp;lt;/youtube&amp;gt;&amp;lt;/social&amp;gt;&amp;lt;/user&amp;gt;&amp;lt;user type=&amp;quot;reader&amp;quot;&amp;gt;&amp;lt;name&amp;gt;Fraser&amp;lt;/name&amp;gt;&amp;lt;social&amp;gt;&amp;lt;facebook&amp;gt;https://facebook.com&amp;lt;/facebook&amp;gt;&amp;lt;twitter&amp;gt;https://twitter.com&amp;lt;/twitter&amp;gt;&amp;lt;youtube&amp;gt;https://youtube.com&amp;lt;/youtube&amp;gt;&amp;lt;/social&amp;gt;&amp;lt;/user&amp;gt;&amp;lt;/users&amp;gt;##完成代码部分
package mainimport (&amp;quot;encoding/xml&amp;quot;&amp;quot;fmt&amp;quot;&amp;quot;io/ioutil&amp;quot;&amp;quot;os&amp;quot;)type Users struct {XMLName xml.Name `xml:&amp;quot;users&amp;quot;`Users []User `xml:&amp;quot;user&amp;quot;`}type User struct {XMLName xml.Name `xml:&amp;quot;user&amp;quot;`Type string `xml:&amp;quot;type,attr&amp;quot;`Name string `xml:&amp;quot;name&amp;quot;`Social Social `xml:&amp;quot;social&amp;quot;`}type Social struct {XMLName xml.</description>
    </item>
    
    <item>
      <title>Go解析JSON文件</title>
      <link>https://kissjava.cn/posts/go%E8%A7%A3%E6%9E%90json%E6%96%87%E4%BB%B6/</link>
      <pubDate>Tue, 30 Jul 2019 08:49:10 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/go%E8%A7%A3%E6%9E%90json%E6%96%87%E4%BB%B6/</guid>
      <description>在本教程中，我们将了解如何读取JSON文件或JSON HTTP响应并根据需要解析它们。 我们可以使用XML或JSON表示相同的信息，但JSON提供了一个优势，它更紧凑，并且在我的个人经验中，更具可读性。
JSON现在是最流行的数据格式，大多数RESTful API都会提供JSON响应。因此本文非常有用！
##Encoding/Json Package
我们将利用encoding / json标准库包来启动和运行。我强烈建议你在这里查看官方文档：Encoding / Json。
##读取和解析JSON文件
user.json
{&amp;quot;users&amp;quot;: [{&amp;quot;name&amp;quot;: &amp;quot;Elliot&amp;quot;,&amp;quot;type&amp;quot;: &amp;quot;Reader&amp;quot;,&amp;quot;age&amp;quot;: 23,&amp;quot;social&amp;quot;: {&amp;quot;facebook&amp;quot;: &amp;quot;https://facebook.com&amp;quot;,&amp;quot;twitter&amp;quot;: &amp;quot;https://twitter.com&amp;quot;}},{&amp;quot;name&amp;quot;: &amp;quot;Fraser&amp;quot;,&amp;quot;type&amp;quot;: &amp;quot;Author&amp;quot;,&amp;quot;age&amp;quot;: 17,&amp;quot;social&amp;quot;: {&amp;quot;facebook&amp;quot;: &amp;quot;https://facebook.com&amp;quot;,&amp;quot;twitter&amp;quot;: &amp;quot;https://twitter.com&amp;quot;}}]}###读取JSON文件 使用os包来从我们的文件系统中打开users.json文件。打开文件后，我们将关闭文件（函数结束时执行defer后的关闭）。
jsonFile, err := os.Open(&amp;quot;users.json&amp;quot;)if err != nil {fmt.Println(err)}fmt.Println(&amp;quot;成功打开 users.json&amp;quot;)// 推迟关闭我们的jsonFile，以便稍后解析它defer jsonFile.Close()###用结构解析
我们可以用结构或是map[string]interface{}来解析users.json。我们用结构，上代码：</description>
    </item>
    
    <item>
      <title>使用Golang执行系统命令</title>
      <link>https://kissjava.cn/posts/%E4%BD%BF%E7%94%A8golang%E6%89%A7%E8%A1%8C%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Mon, 29 Jul 2019 22:43:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E4%BD%BF%E7%94%A8golang%E6%89%A7%E8%A1%8C%E7%B3%BB%E7%BB%9F%E5%91%BD%E4%BB%A4/</guid>
      <description>在本教程中，我们将看一下标准库中的os / exec包以及如何使用它在Go应用程序中成功执行系统命令。 ##条件
您需要安装Go 1.11+版本
##兼容性问题
只是简单的教程Demo，所以并未对所有平台适用。
###检查当前操作系统 我们可以使用runtime包并检查GOOS常量。这将返回目标的操作系统：
 if runtime.GOOS == &amp;quot;windows&amp;quot; {fmt.Println(&amp;quot;无法在Windows机器上执行此操作&amp;quot;)} else {execute()}##上代码
package mainimport (&amp;quot;fmt&amp;quot;&amp;quot;os/exec&amp;quot;&amp;quot;runtime&amp;quot;)func execute() {// 这里我们执行pwd命令// 我们可以将它的输出存储在我们的out变量中out, err := exec.Command(&amp;quot;ls&amp;quot;).Output()// 如果我们的执行有错误if err != nil {fmt.Printf(&amp;quot;%s&amp;quot;, err)}// 因为上面定义的out变量是[] byte类型，// 我们需要将它转换为字符串，否则我们将看到在我们的控制台中打印出乱码// 这就是我们将它转​​换为字符串的方式fmt.Println(&amp;quot;命令已成功执行&amp;quot;)output := string(out[:])fmt.Println(output)// 让我们试试pwd命令out, err = exec.Command(&amp;quot;pwd&amp;quot;).Output()if err !</description>
    </item>
    
    <item>
      <title>Go从Console读取输入</title>
      <link>https://kissjava.cn/posts/go%E4%BB%8Econsole%E8%AF%BB%E5%8F%96%E8%BE%93%E5%85%A5/</link>
      <pubDate>Mon, 29 Jul 2019 22:24:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/go%E4%BB%8Econsole%E8%AF%BB%E5%8F%96%E8%BE%93%E5%85%A5/</guid>
      <description>##一个简单的shell 一个示例的shell，没啥用：
package mainimport (&amp;quot;bufio&amp;quot;&amp;quot;fmt&amp;quot;&amp;quot;os&amp;quot;&amp;quot;strings&amp;quot;)func main() {reader := bufio.NewReader(os.Stdin)fmt.Println(&amp;quot;Simple Shell&amp;quot;)fmt.Println(&amp;quot;---------------------&amp;quot;)for {fmt.Print(&amp;quot;-&amp;gt; &amp;quot;)text, _ := reader.ReadString(&#39;\n&#39;)// 将CRLF转换为LFtext = strings.Replace(text, &amp;quot;\n&amp;quot;, &amp;quot;&amp;quot;, -1)// 如果windows，要用下面的// text = strings.Replace(text, &amp;quot;\r\n&amp;quot;, &amp;quot;&amp;quot;, -1)if strings.Compare(&amp;quot;hi&amp;quot;, text) == 0 {fmt.Println(&amp;quot;hello, Yourself&amp;quot;)}if strings.Compare(&amp;quot;bye&amp;quot;, text) == 0 {fmt.Println(&amp;quot;Bye.&amp;quot;)break}}}输入hi，它会打个招呼；输入bye，退出shell。
##读取单个UTF-8编码的Unicode字符
package mainimport (&amp;quot;bufio&amp;quot;&amp;quot;fmt&amp;quot;&amp;quot;os&amp;quot;)func main() {reader := bufio.</description>
    </item>
    
    <item>
      <title>在Go中读取和写入文件</title>
      <link>https://kissjava.cn/posts/%E5%9C%A8go%E4%B8%AD%E8%AF%BB%E5%8F%96%E5%92%8C%E5%86%99%E5%85%A5%E6%96%87%E4%BB%B6/</link>
      <pubDate>Mon, 29 Jul 2019 21:56:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%9C%A8go%E4%B8%AD%E8%AF%BB%E5%8F%96%E5%92%8C%E5%86%99%E5%85%A5%E6%96%87%E4%BB%B6/</guid>
      <description>在本教程中，我们将介绍如何使用go语言有效地读取和写入文件系统中的文件。
我们将用于读取和写入这些文件的方法将与文件格式无关。这意味着你将能够使用我们将要覆盖的技术来读写，.txt，.csv，.xls等，这些文件唯一不同的是您写入每种文件类型的数据结构。
##读取文件
main.go
package main// 导入我们需要的2个模块import (&amp;quot;fmt&amp;quot;&amp;quot;io/ioutil&amp;quot;)func main() {// 读取文件 localfile.data 的内容data, err := ioutil.ReadFile(&amp;quot;localfile.data&amp;quot;)// 如果我们的程序无法读取该文件// 打印出它不能读取的原因if err != nil {fmt.Println(err)}// 如果读取成功，将内容打印为字符串fmt.Print(string(data))}##将文件写入新文件 我们已经介绍了Go中的文件读取，现在是时候看看创建和写入我们自己的文件了！ 代码说话：
package mainimport (&amp;quot;fmt&amp;quot;&amp;quot;io/ioutil&amp;quot;)func main() {mydata := []byte(&amp;quot;All the data I wish to write to a file&amp;quot;)// 如果不成功，WriteFile方法返回错误err := ioutil.WriteFile(&amp;quot;myfile.data&amp;quot;, mydata, 0777)// 处理错误，打印出来if err !</description>
    </item>
    
    <item>
      <title>Go的接口</title>
      <link>https://kissjava.cn/posts/go%E7%9A%84%E6%8E%A5%E5%8F%A3/</link>
      <pubDate>Mon, 29 Jul 2019 19:33:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/go%E7%9A%84%E6%8E%A5%E5%8F%A3/</guid>
      <description>在本教程中，我们将看看Go编程语言中的接口。 本节包括2个主题：
 接口的基本知识 定义我们自己的接口  ##简单案例
如果您看到一个需要空接口的函数或方法，那么您通常可以将任何内容传递给此函数/方法。
package mainimport (&amp;quot;fmt&amp;quot;)func myFunc(a interface{}) {fmt.Println(a)}func main() {var my_age intmy_age = 25myFunc(my_age)}运行它
$ go run main.go25###有什么作用 通过定义interface{}的函数，我们基本上可以灵活地传递任何我们想要的东西。这个函数接受了一些东西，但我们不一定需要关心它的类型是什么。
##定义接口 那么，什么是接口？为什么我们在Go中使用它们？好吧，通过在Go中定义一个接口，我们基本上定义了一个契约。如果我们根据此接口定义类型，那么我们将必须实现该接口类型中定义的所有函数或方法。
比如说，我们想为吉他手定义一个interface。我们可以定义我们的接口以包含PlayGuitar（）函数，如下所示：
type Guitarist interface {// PlayGuitar在终端打印出“弹吉他”PlayGuitar()}通过定义我们的吉他手interface，我们可以定义一个BaseGuitarist和一个AcousticGuitarist结构。
package mainimport &amp;quot;fmt&amp;quot;type Guitarist interface {PlayGuitar()}type BaseGuitarist struct {Name string}type AcousticGuitarist struct {Name string}func (b BaseGuitarist) PlayGuitar() {fmt.</description>
    </item>
    
    <item>
      <title>Go的方法</title>
      <link>https://kissjava.cn/posts/go%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Mon, 29 Jul 2019 18:52:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/go%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>在本教程中，我们将首先了解哪些方法以及它们如何在Go编程语言的范围内工作。然后，我们将看看揭开方法和函数之间的差异，以及何时在Go程序中使用它们。 ##一个简单实例 我们将创建一个非常简单的员工管理系统，允许您更新员工姓名并打印出该名称。不是最令人兴奋的示例项目，但它将作为演示还可以。
我们首先创建一个Employee类型的结构，它包含一个字符串字段Name
接下来，我们将声明一个UpdateName()和一个PrintName()方法，它允许我们更新和打印我们创建的员工的姓名。
package mainimport (&amp;quot;fmt&amp;quot;)type Employee struct {Name string}func (e *Employee) UpdateName(newName string) {e.Name = newName}func (e *Employee) PrintName() {fmt.Println(e.Name)}func main() {var employee Employeeemployee.Name = &amp;quot;Michael&amp;quot;employee.UpdateName(&amp;quot;Mike&amp;quot;)employee.PrintName()}与函数一样，方法会创建传递给它的参数的副本。为避免这种情况，我们可以在定义方法时使用指针接收器func (pointer *Pointer) myMethod()。指针指向内存地址，是传递的引用。多用用就回习惯了，不像C的指针那么恐怖。
为什么我们在Go程序中使用方法呢？
##函数vs方法
方法通常作用于给定的对象，即player.Update（params），这种方式比用UpdatePlayer（player，params）更优雅和直观。
func UpdatePlayer(player *Player, params ParamsStruct) {fmt.Println(&amp;quot;这是个简单的函数&amp;quot;)}UpdatePlayer(player, params)上面需要传入player和其它参数，下面的方式更加明了：
func (g *Player) Update(params ParamsStruct) {fmt.</description>
    </item>
    
    <item>
      <title>Go的函数</title>
      <link>https://kissjava.cn/posts/go%E7%9A%84%E5%87%BD%E6%95%B0/</link>
      <pubDate>Mon, 29 Jul 2019 17:37:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/go%E7%9A%84%E5%87%BD%E6%95%B0/</guid>
      <description>在本教程中，我们将学习Golang中的函数，并希望在本教程结束时，您将牢牢掌握它们是什么以及如何在您自己的项目中使用它们。 我们将在本教程中介绍以下主题：
 函数声明的基础知识 使用多个返回值  ##函数的声明 Go中的所有函数都以func关键字开始，然后是函数名称。在名称之后，我们打开括号并定义我们的参数列表，后跟一个非常相似的返回结果列表：
func name(parameter-list) (result-list) {// 函数体} 访问权限！如果您希望在其他包中访问您的函数，那么您必须将函数名称的第一个字母设为大写！
 ##举个栗子 对于这个例子，我们将创建一个名为myFunction的函数，它将接收2个字符串参数并返回结果字符串：
func myfunction(firstName string, lastName string) (string) {fullname := firstName + &amp;quot; &amp;quot; + lastName return fullname}在函数体的第一行，我们创建了一个名为fullname的新变量，它是我们的firstName变量与空格和我们的lastName变量连接成的新字符串。完成此连接后，我们将返回fullname变量。
##完整的代码
package mainimport (&amp;quot;fmt&amp;quot;)func myfunction(firstName string, lastName string) (string) {fullname := firstName + &amp;quot; &amp;quot; + lastName return fullname}func main() {fmt.Println(&amp;quot;Hello World&amp;quot;)fullName := myfunction(&amp;quot;Michael&amp;quot;, &amp;quot;Yang&amp;quot;)fmt.</description>
    </item>
    
    <item>
      <title>Go的复合数据类型</title>
      <link>https://kissjava.cn/posts/go%E7%9A%84%E5%A4%8D%E5%90%88%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Mon, 29 Jul 2019 17:13:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/go%E7%9A%84%E5%A4%8D%E5%90%88%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid>
      <description>上节我们学过来基本数据类型，本节说说go的复合数据类型。
##数组 Arrays 让我们首先声明一周中所有天的数组。
// 声明一个空数组的字符串var days []string// 声明一个包含元素的数组days := [...]string{&amp;quot;monday&amp;quot;, &amp;quot;tuesday&amp;quot;, &amp;quot;wednesday&amp;quot;, &amp;quot;thursday&amp;quot;, &amp;quot;friday&amp;quot;, &amp;quot;saturday&amp;quot;, &amp;quot;sunday&amp;quot;}如果我们想查询数组中的第一个元素或特定元素，我们可以以与其他语言非常相似的方式查询：
fmt.Println(days[0]) // 打印 &#39;monday&#39;fmt.Println(days[5]) // 打印 &#39;saturday&#39;##切片 Slices 切片和数组之间的区别非常微妙。 Go中的切片允许您访问底层数组元素的子集。
切片由三个部分组成，指针，长度length和容量capactiy。让我们试着用一个例子来形象化。比方说，例如，我们有一个星期几的数组，我们可以使用切片来仅提取那些工作日的天数。
days := [...]string{&amp;quot;Monday&amp;quot;, &amp;quot;Tuesday&amp;quot;, &amp;quot;Wednesday&amp;quot;, &amp;quot;Thursday&amp;quot;, &amp;quot;Friday&amp;quot;, &amp;quot;Saturday&amp;quot;, &amp;quot;Sunday&amp;quot;}weekdays := days[0:5]fmt.Println(weekdays)// 这会返回: [Monday Tuesday Wednesday Thursday Friday]##映射 Maps 映射是Go表示的哈希表，这是一种允许您将一种任意数据类型映射到另一种数据的数据结构。例如，让我们根据该频道的订阅者数量创建 YouTube频道名称=&amp;gt;订阅数量 的Map：
youtubeSubscribers := map[string]int{&amp;quot;TutorialEdge&amp;quot;: 2240,&amp;quot;MKBHD&amp;quot;: 6580350,&amp;quot;Fun Fun Function&amp;quot;: 171220,}fmt.</description>
    </item>
    
    <item>
      <title>Go的基本数据类型</title>
      <link>https://kissjava.cn/posts/go%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Mon, 29 Jul 2019 15:47:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/go%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid>
      <description>在本教程中，我们将学习Go语言中可用的所有基本数据类型。在本教程结束时，您应该熟悉该语言中提供的各种不同类型，并希望了解如何在您自己的Go程序中使用这些类型。 ps：本节课程很无聊，但是不可或缺。
##数据类型 Go编程语言中有4种不同类型的类型
 基本类型 我们将在本教程中介绍的内容 聚合类型 数组和结构 引用类型 指针和切片 接口类型 标准接口  ##整型
简单点，直接在代码里注释讲解吧
// 所有数字类型默认为0// 无符号的8位整型// 可存储: 0 to 255var myint uint8// 有符号的8位整型// 可存储: -127 to 127var myint int8// 无符号的16位整型var myint uint16// 有符号的16位整型var myint int16// 无符号的32位整型var myint uint32// 带符号的32位整型var myint int32// 无符号的64位整型var myint uint64// 带符号的64位整型var myint int64存储超过大小的值编译会无法通过。初始存储未超过大小，但是运行中溢出了，可能会出现其它结果：
package mainimport (&amp;quot;fmt&amp;quot;)func main() {fmt.</description>
    </item>
    
    <item>
      <title>Go入门</title>
      <link>https://kissjava.cn/posts/go%E5%85%A5%E9%97%A8/</link>
      <pubDate>Mon, 29 Jul 2019 14:58:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/go%E5%85%A5%E9%97%A8/</guid>
      <description>希望是无废话的go语言教程。 Go是一种绝对令人难以置信的语言，可以构建各种不同的应用程序。从命令行界面到分布式微系统甚至云平台，它的简单性和并发性使其成为许多开发团队的强大语言选择。
在本教程中，我将着手帮助您启动并运行该语言，以便您可以开始构建更加出色的应用程序并推动技术的发展。
我们将专注于启动和运行一个非常简单的Hello World风格的应用程序。一旦你掌握了一切正常的工作，我们就可以开始学习语言中更复杂的方面，比如函数，方法，以及最终的并发和反射等方面。
您需要在开发计算机上安装Go。如果您需要安装，请查看官方下载页面：官方下载
##入门
让我们深入了解安装好所有内容并编写一个非常简单的程序来让我们热热身。
您首先要进入官方的入门页面，其中包含一个链接，用于安装目前可用的各种不同版本的Go。
使用官方安装文件安装，把Go的可执行文件添加到您机器的PATH中。完成后，我们应该能够在终端中运行go version：
$ go versiongo version go1.12.5 darwin/amd64如果正常，我们就准备开始编写自己的Go程序。
打开代码编辑器，然后创建一个新的目录，我们的Hello World项目将存在该目录中。
在这个目录中，我们将创建一个名为main.go的新文件，它将包含我们相对简单的Go程序。我们还想在这个目录打开一个终端并运行以下命令：
$ GOMODULES11=ON$ go mod init github.com/hello/world这将初始化我们的项目，并允许我们将来的Go代码分成子包。它还允许我们以最小的麻烦来检索我们可能想要的任何外部依赖项。就是用go module来管理包依赖。
现在，在我们的main.go文件中，我们将要添加以下代码：
// 每个go源文件的第一个语句// 必须是包裹声明。如果我们什么都不做// 一般就是main包package main// 我们想要使用fmt包// 它具有`print`功能 - Printlnimport &amp;quot;fmt&amp;quot;// 我们需要定义我们的main函数// 把它想象成我们Go的切入点，就是程序入口func main() {// 在main函数中，我们调用fmt的Println函数打印出Hello Worldfmt.Println(&amp;quot;Hello World&amp;quot;)}我们可直接运行。
$ go run main.goHello World或是编译成二进制文件后再运行
$ go build main.</description>
    </item>
    
    <item>
      <title>双十一黑五接连而来还是 bwh 的 CN2 GIA 稳定</title>
      <link>https://kissjava.cn/posts/%E5%8F%8C%E5%8D%81%E4%B8%80%E9%BB%91%E4%BA%94%E6%8E%A5%E8%BF%9E%E8%80%8C%E6%9D%A5%E8%BF%98%E6%98%AF-bwh-%E7%9A%84-cn2-gia-%E7%A8%B3%E5%AE%9A/</link>
      <pubDate>Mon, 26 Nov 2018 10:44:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%8F%8C%E5%8D%81%E4%B8%80%E9%BB%91%E4%BA%94%E6%8E%A5%E8%BF%9E%E8%80%8C%E6%9D%A5%E8%BF%98%E6%98%AF-bwh-%E7%9A%84-cn2-gia-%E7%A8%B3%E5%AE%9A/</guid>
      <description>都被 virmach 的抢购刷屏了，实际体验对比还是 bwh（搬瓦工）的 CN2 GIA 最是稳定。 如果，只是建个小博客，测试点代码，个人爬墙 bwh 的 CN2 GIA 还是比较推荐的，够用且稳定。 推荐一下：直达链接</description>
    </item>
    
    <item>
      <title>Debian9 快速开启 TCP BBR </title>
      <link>https://kissjava.cn/posts/debian9-%E5%BF%AB%E9%80%9F%E5%BC%80%E5%90%AF-tcp-bbr-/</link>
      <pubDate>Mon, 08 Oct 2018 11:14:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/debian9-%E5%BF%AB%E9%80%9F%E5%BC%80%E5%90%AF-tcp-bbr-/</guid>
      <description>Debian9 默认的内核是 4.9 的内核而且编译了 TCP BBR，所以可以直接通过参数开启, 不仅方便而且很快, 反正也不花多少时间, 还是开启吧。
干货如下 1,修改系统变量
echo &amp;quot;net.core.default_qdisc=fq&amp;quot; &amp;gt;&amp;gt; /etc/sysctl.confecho &amp;quot;net.ipv4.tcp_congestion_control=bbr&amp;quot; &amp;gt;&amp;gt; /etc/sysctl.conf 保存修改的配置使之生效
sysctl -p 2,执行以下命令开启 BBR
sysctl net.ipv4.tcp_available_congestion_control 一般回显如下:
sysctl net.ipv4.tcp_available_congestion_controlnet.ipv4.tcp_available_congestion_control = bbr cubic reno 就是开启成功了。
3,可以执行以下命令以检测 BBR 是否开启。
lsmod | grep bbr 回显
tcp_bbr 20480 1  </description>
    </item>
    
    <item>
      <title>Mac OS X 设置英文为默认输入法</title>
      <link>https://kissjava.cn/posts/mac-os-x-%E8%AE%BE%E7%BD%AE%E8%8B%B1%E6%96%87%E4%B8%BA%E9%BB%98%E8%AE%A4%E8%BE%93%E5%85%A5%E6%B3%95/</link>
      <pubDate>Tue, 18 Sep 2018 15:09:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/mac-os-x-%E8%AE%BE%E7%BD%AE%E8%8B%B1%E6%96%87%E4%B8%BA%E9%BB%98%E8%AE%A4%E8%BE%93%E5%85%A5%E6%B3%95/</guid>
      <description>为了方便开发,一般都是把系统语言改成英文. 但是,中文输入法一直会把自己搞成默认的.网上一搜,老旧的东西都是没法用的,一直没法把输入法调好. 每次打开 Terminal 总要删除然后切换成英文,再敲命令.很烦人的说. 上干货,方便像 Mike 一样的 coder.适用High Sierra ~ Mojave.
1, System Preferences 2, Language &amp;amp; region 3, 把 Englis 拖到列表顶部,设为 Primary 4, (重点,重点,重点)右侧的 List sort order: Chinese(Pinyin Sort Order)
看看状态栏, U.S. 是不是跑到中文输入法的上面了.搞定.</description>
    </item>
    
    <item>
      <title>Nginx 反向代理并替换内容的Demo</title>
      <link>https://kissjava.cn/posts/nginx-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%B9%B6%E6%9B%BF%E6%8D%A2%E5%86%85%E5%AE%B9%E7%9A%84demo/</link>
      <pubDate>Fri, 31 Aug 2018 08:12:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/nginx-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%B9%B6%E6%9B%BF%E6%8D%A2%E5%86%85%E5%AE%B9%E7%9A%84demo/</guid>
      <description>我就是把mikeyang.me反向代理到kissjava.cn/about.html，并且把logo文字从kissjava.cn改成了mikeyang.me。上配置。 server { listen 80; #listen [::]:80; server_name mikeyang.me ; index index.html index.htm index.php default.html default.htm default.php; root /home/wwwroot/mikeyang.me;
 include rewrite/none.conf; #error_page 404 /404.html; # Deny access to PHP files in specific directory #location ~ /(wp-content|uploads|wp-includes|images)/.*\.php$ { deny all; } # 以下开始是反向代理配置location / { proxy_pass https://kissjava.cn/about.html; proxy_redirect off; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # 以下是替换内容，可以继续增加条目，也支持正则，可以看官方文档 sub_filter &#39;&amp;lt;a href=&amp;quot;https://kissjava.cn/&amp;quot; class=&amp;quot;navbar-logo&amp;quot;&amp;gt; kissjava.cn &amp;lt;/a&amp;gt;&#39; &#39;&amp;lt;a href=&amp;quot;https://kissjava.cn/&amp;quot; class=&amp;quot;navbar-logo&amp;quot;&amp;gt;mikeyang.me&amp;lt;/a&amp;gt;&#39;;# 以下说明只替换一次 sub_filter_once on; } #.</description>
    </item>
    
    <item>
      <title>SSL去掉了，又加上了</title>
      <link>https://kissjava.cn/posts/ssl%E5%8E%BB%E6%8E%89%E4%BA%86%E5%8F%88%E5%8A%A0%E4%B8%8A%E4%BA%86/</link>
      <pubDate>Mon, 20 Aug 2018 16:05:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/ssl%E5%8E%BB%E6%8E%89%E4%BA%86%E5%8F%88%E5%8A%A0%E4%B8%8A%E4%BA%86/</guid>
      <description>终究还是搬家，然后又加上了。 顺便说一下，阿里国际ECS，很容易被封443。 ====以上2018/08/31更新====
没时间写东西. ssl 去掉了，ip 被误伤了吧. 443端口联通和电信都无法访问了，没有办法，只好去掉了:(</description>
    </item>
    
    <item>
      <title>怎样用外部触点信号控制fanuc数控系统的启动停止</title>
      <link>https://kissjava.cn/posts/%E6%80%8E%E6%A0%B7%E7%94%A8%E5%A4%96%E9%83%A8%E8%A7%A6%E7%82%B9%E4%BF%A1%E5%8F%B7%E6%8E%A7%E5%88%B6fanuc%E6%95%B0%E6%8E%A7%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%90%AF%E5%8A%A8%E5%81%9C%E6%AD%A2/</link>
      <pubDate>Thu, 09 Aug 2018 07:49:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E6%80%8E%E6%A0%B7%E7%94%A8%E5%A4%96%E9%83%A8%E8%A7%A6%E7%82%B9%E4%BF%A1%E5%8F%B7%E6%8E%A7%E5%88%B6fanuc%E6%95%B0%E6%8E%A7%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%90%AF%E5%8A%A8%E5%81%9C%E6%AD%A2/</guid>
      <description>资料收集，待测
 首先，你需要初步掌握FANUC系统PMC编程知识；
然后，编辑PMC梯形图程序，使用外部触点信号（通常为一个按钮，X地址），在梯形图中将G7.2在MEM、RMT或MDI模式下接通32ms以上并重新置为0，即可启动数控系统运行；在自动运行状态下，将G8.5从1置为0，系统停止运行。
 </description>
    </item>
    
    <item>
      <title>又又又搬家了，搬回国内</title>
      <link>https://kissjava.cn/posts/%E5%8F%88%E5%8F%88%E5%8F%88%E6%90%AC%E5%AE%B6%E4%BA%86%E6%90%AC%E5%9B%9E%E5%9B%BD%E5%86%85/</link>
      <pubDate>Wed, 29 Nov 2017 17:23:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%8F%88%E5%8F%88%E5%8F%88%E6%90%AC%E5%AE%B6%E4%BA%86%E6%90%AC%E5%9B%9E%E5%9B%BD%E5%86%85/</guid>
      <description>又搬回国内阿里云了。 主域名更换为备案过的 kissjava.cn。
关于 kissjava： 走上it这条路，其实收自己的一个兄弟影响极大。 当时他还做了个比较 nb 的网站，域名就是 kissjava.com。 不过我当时在搞 ASP，后来是 PHP，等我学JAVA 时他早就不纠结技术细节了。 我对 kissjava 念念不忘，于是注册了 kissjava.cn。</description>
    </item>
    
    <item>
      <title>圆通速递？呵呵</title>
      <link>https://kissjava.cn/posts/%E5%9C%86%E9%80%9A%E9%80%9F%E9%80%92%E5%91%B5%E5%91%B5/</link>
      <pubDate>Fri, 29 Sep 2017 15:34:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%9C%86%E9%80%9A%E9%80%9F%E9%80%92%E5%91%B5%E5%91%B5/</guid>
      <description>不想说太多，就放张图吧。 速递，这速是多少？ 客服也是&amp;hellip;</description>
    </item>
    
    <item>
      <title>WPF 的状态栏控件</title>
      <link>https://kissjava.cn/posts/wpf-%E7%9A%84%E7%8A%B6%E6%80%81%E6%A0%8F%E6%8E%A7%E4%BB%B6/</link>
      <pubDate>Sat, 23 Sep 2017 13:28:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/wpf-%E7%9A%84%E7%8A%B6%E6%80%81%E6%A0%8F%E6%8E%A7%E4%BB%B6/</guid>
      <description>状态栏可以放些提示信息，目前情况下会比 MessageBox 好用。特别是无需用户确认的情况。
简单的没意思，直接来个多栏的。 &amp;lt;StatusBar.ItemsPanel&amp;gt; &amp;lt;Grid.ColumnDefinitions&amp;gt; &amp;lt;/Grid.ColumnDefinitions&amp;gt; &amp;lt;/StatusBar.ItemsPanel&amp;gt; 效果： </description>
    </item>
    
    <item>
      <title>Enabling Scrollbar in WPF</title>
      <link>https://kissjava.cn/posts/enabling-scrollbar-in-wpf/</link>
      <pubDate>Fri, 22 Sep 2017 10:01:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/enabling-scrollbar-in-wpf/</guid>
      <description>Put a ScrollViewer inside your Window:  &amp;lt;ScrollViewer &amp;gt;&amp;lt;!-- Window content here --&amp;gt;&amp;lt;/ScrollViewer&amp;gt;&amp;lt;/Window&amp;gt; </description>
    </item>
    
    <item>
      <title>C sharp 测试代码的运行时间</title>
      <link>https://kissjava.cn/posts/c-sharp-%E6%B5%8B%E8%AF%95%E4%BB%A3%E7%A0%81%E7%9A%84%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4/</link>
      <pubDate>Wed, 20 Sep 2017 17:27:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/c-sharp-%E6%B5%8B%E8%AF%95%E4%BB%A3%E7%A0%81%E7%9A%84%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4/</guid>
      <description>计算C#代码运行的耗时，方便测试出效率。
System.Diagnostics.Stopwatch watch = new System.Diagnostics.Stopwatch();watch.Start(); //开始监视代码运行时间// 添加需要测试的代码// ...watch.Stop(); //停止TimeSpan timespan = watch.Elapsed; //获取当前实例测量得出的总时间System.Diagnostics.Debug.WriteLine(string.Format(&amp;quot;代码执行时间：{0}(毫秒)&amp;quot;, timespan.TotalMilliseconds));  TimeSpan 还可以计算出TotalHours，TotalMinutes， TotalSeconds。</description>
    </item>
    
    <item>
      <title>PyQt5表格应用的详细Demo</title>
      <link>https://kissjava.cn/posts/pyqt5%E8%A1%A8%E6%A0%BC%E5%BA%94%E7%94%A8%E7%9A%84%E8%AF%A6%E7%BB%86demo/</link>
      <pubDate>Wed, 13 Sep 2017 14:38:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/pyqt5%E8%A1%A8%E6%A0%BC%E5%BA%94%E7%94%A8%E7%9A%84%E8%AF%A6%E7%BB%86demo/</guid>
      <description>PyQt5实现的一个表格应用的 demo。涉及的知识点：tableWidget 的基本使用，cell 内放置 widget，设置 cell 模式，分页，获取选中项目。 首先是 QtDesigner 设计, 一个 tablewidget，4个 pushbuttno：
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&amp;lt;ui version=&amp;quot;4.0&amp;quot;&amp;gt;&amp;lt;class&amp;gt;MainWindow&amp;lt;/class&amp;gt;&amp;lt;widget class=&amp;quot;QMainWindow&amp;quot; name=&amp;quot;MainWindow&amp;quot;&amp;gt;&amp;lt;property name=&amp;quot;geometry&amp;quot;&amp;gt;&amp;lt;rect&amp;gt;&amp;lt;x&amp;gt;0&amp;lt;/x&amp;gt;&amp;lt;y&amp;gt;0&amp;lt;/y&amp;gt;&amp;lt;width&amp;gt;800&amp;lt;/width&amp;gt;&amp;lt;height&amp;gt;600&amp;lt;/height&amp;gt;&amp;lt;/rect&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;property name=&amp;quot;windowTitle&amp;quot;&amp;gt;&amp;lt;string&amp;gt;MainWindow&amp;lt;/string&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;widget class=&amp;quot;QWidget&amp;quot; name=&amp;quot;centralwidget&amp;quot;&amp;gt;&amp;lt;widget class=&amp;quot;QTableWidget&amp;quot; name=&amp;quot;tableWidget&amp;quot;&amp;gt;&amp;lt;property name=&amp;quot;geometry&amp;quot;&amp;gt;&amp;lt;rect&amp;gt;&amp;lt;x&amp;gt;0&amp;lt;/x&amp;gt;&amp;lt;y&amp;gt;0&amp;lt;/y&amp;gt;&amp;lt;width&amp;gt;801&amp;lt;/width&amp;gt;&amp;lt;height&amp;gt;541&amp;lt;/height&amp;gt;&amp;lt;/rect&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;property name=&amp;quot;rowCount&amp;quot;&amp;gt;&amp;lt;number&amp;gt;5&amp;lt;/number&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;property name=&amp;quot;columnCount&amp;quot;&amp;gt;&amp;lt;number&amp;gt;11&amp;lt;/number&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;row/&amp;gt;&amp;lt;row/&amp;gt;&amp;lt;row/&amp;gt;&amp;lt;row/&amp;gt;&amp;lt;row/&amp;gt;&amp;lt;column/&amp;gt;&amp;lt;column/&amp;gt;&amp;lt;column/&amp;gt;&amp;lt;column/&amp;gt;&amp;lt;column/&amp;gt;&amp;lt;column/&amp;gt;&amp;lt;column/&amp;gt;&amp;lt;/widget&amp;gt;&amp;lt;widget class=&amp;quot;QWidget&amp;quot; name=&amp;quot;horizontalLayoutWidget&amp;quot;&amp;gt;&amp;lt;property name=&amp;quot;geometry&amp;quot;&amp;gt;&amp;lt;rect&amp;gt;&amp;lt;x&amp;gt;0&amp;lt;/x&amp;gt;&amp;lt;y&amp;gt;540&amp;lt;/y&amp;gt;&amp;lt;width&amp;gt;801&amp;lt;/width&amp;gt;&amp;lt;height&amp;gt;31&amp;lt;/height&amp;gt;&amp;lt;/rect&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;layout class=&amp;quot;QHBoxLayout&amp;quot; name=&amp;quot;horizontalLayout&amp;quot;&amp;gt;&amp;lt;item&amp;gt;&amp;lt;widget class=&amp;quot;QPushButton&amp;quot; name=&amp;quot;btnLoad&amp;quot;&amp;gt;&amp;lt;property name=&amp;quot;text&amp;quot;&amp;gt;&amp;lt;string&amp;gt;Load&amp;lt;/string&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;/widget&amp;gt;&amp;lt;/item&amp;gt;&amp;lt;item&amp;gt;&amp;lt;widget class=&amp;quot;QPushButton&amp;quot; name=&amp;quot;btnPre&amp;quot;&amp;gt;&amp;lt;property name=&amp;quot;text&amp;quot;&amp;gt;&amp;lt;string&amp;gt;《Pre&amp;lt;/string&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;/widget&amp;gt;&amp;lt;/item&amp;gt;&amp;lt;item&amp;gt;&amp;lt;widget class=&amp;quot;QPushButton&amp;quot; name=&amp;quot;btnNext&amp;quot;&amp;gt;&amp;lt;property name=&amp;quot;text&amp;quot;&amp;gt;&amp;lt;string&amp;gt;Next》&amp;lt;/string&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;/widget&amp;gt;&amp;lt;/item&amp;gt;&amp;lt;item&amp;gt;&amp;lt;widget class=&amp;quot;QPushButton&amp;quot; name=&amp;quot;btnDetail&amp;quot;&amp;gt;&amp;lt;property name=&amp;quot;text&amp;quot;&amp;gt;&amp;lt;string&amp;gt;Detail&amp;lt;/string&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;/widget&amp;gt;&amp;lt;/item&amp;gt;&amp;lt;/layout&amp;gt;&amp;lt;/widget&amp;gt;&amp;lt;/widget&amp;gt;&amp;lt;widget class=&amp;quot;QStatusBar&amp;quot; name=&amp;quot;statusbar&amp;quot;/&amp;gt;&amp;lt;/widget&amp;gt;&amp;lt;resources/&amp;gt;&amp;lt;connections/&amp;gt;&amp;lt;/ui&amp;gt; 生成的 ui 代码 tableWidgetDemo.</description>
    </item>
    
    <item>
      <title>PyQt5自定义改变窗口大小信号</title>
      <link>https://kissjava.cn/posts/pyqt5%E8%87%AA%E5%AE%9A%E4%B9%89%E6%94%B9%E5%8F%98%E7%AA%97%E5%8F%A3%E5%A4%A7%E5%B0%8F%E4%BF%A1%E5%8F%B7/</link>
      <pubDate>Tue, 12 Sep 2017 11:13:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/pyqt5%E8%87%AA%E5%AE%9A%E4%B9%89%E6%94%B9%E5%8F%98%E7%AA%97%E5%8F%A3%E5%A4%A7%E5%B0%8F%E4%BF%A1%E5%8F%B7/</guid>
      <description>模式是没有这个信号的，但是我们可以自己创建一个 resized 信号，并在 resizeEvent 方法中 emit.
用 QtDesigner 设计个主窗口，拖了 Horizontal Layout（mainHLayout） 和窗体同一尺寸，三个 pushbutton，分割按钮的4个Horizontal Spacer。就是想改变窗体大小时，可以让按钮可以继续按比例分配空间。
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&amp;lt;ui version=&amp;quot;4.0&amp;quot;&amp;gt;&amp;lt;class&amp;gt;MainWindow&amp;lt;/class&amp;gt;&amp;lt;widget class=&amp;quot;QMainWindow&amp;quot; name=&amp;quot;MainWindow&amp;quot;&amp;gt;&amp;lt;property name=&amp;quot;geometry&amp;quot;&amp;gt;&amp;lt;rect&amp;gt;&amp;lt;x&amp;gt;0&amp;lt;/x&amp;gt;&amp;lt;y&amp;gt;0&amp;lt;/y&amp;gt;&amp;lt;width&amp;gt;800&amp;lt;/width&amp;gt;&amp;lt;height&amp;gt;600&amp;lt;/height&amp;gt;&amp;lt;/rect&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;property name=&amp;quot;windowTitle&amp;quot;&amp;gt;&amp;lt;string&amp;gt;MainWindow&amp;lt;/string&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;widget class=&amp;quot;QWidget&amp;quot; name=&amp;quot;centralwidget&amp;quot;&amp;gt;&amp;lt;widget class=&amp;quot;QWidget&amp;quot; name=&amp;quot;horizontalLayoutWidget&amp;quot;&amp;gt;&amp;lt;property name=&amp;quot;geometry&amp;quot;&amp;gt;&amp;lt;rect&amp;gt;&amp;lt;x&amp;gt;0&amp;lt;/x&amp;gt;&amp;lt;y&amp;gt;0&amp;lt;/y&amp;gt;&amp;lt;width&amp;gt;801&amp;lt;/width&amp;gt;&amp;lt;height&amp;gt;571&amp;lt;/height&amp;gt;&amp;lt;/rect&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;layout class=&amp;quot;QHBoxLayout&amp;quot; name=&amp;quot;mainHLayout&amp;quot;&amp;gt;&amp;lt;item&amp;gt;&amp;lt;spacer name=&amp;quot;horizontalSpacer&amp;quot;&amp;gt;&amp;lt;property name=&amp;quot;orientation&amp;quot;&amp;gt;&amp;lt;enum&amp;gt;Qt::Horizontal&amp;lt;/enum&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;property name=&amp;quot;sizeHint&amp;quot; stdset=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;size&amp;gt;&amp;lt;width&amp;gt;40&amp;lt;/width&amp;gt;&amp;lt;height&amp;gt;20&amp;lt;/height&amp;gt;&amp;lt;/size&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;/spacer&amp;gt;&amp;lt;/item&amp;gt;&amp;lt;item&amp;gt;&amp;lt;widget class=&amp;quot;QPushButton&amp;quot; name=&amp;quot;pushButton_3&amp;quot;&amp;gt;&amp;lt;property name=&amp;quot;text&amp;quot;&amp;gt;&amp;lt;string&amp;gt;PushButton&amp;lt;/string&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;/widget&amp;gt;&amp;lt;/item&amp;gt;&amp;lt;item&amp;gt;&amp;lt;spacer name=&amp;quot;horizontalSpacer_2&amp;quot;&amp;gt;&amp;lt;property name=&amp;quot;orientation&amp;quot;&amp;gt;&amp;lt;enum&amp;gt;Qt::Horizontal&amp;lt;/enum&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;property name=&amp;quot;sizeHint&amp;quot; stdset=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;size&amp;gt;&amp;lt;width&amp;gt;40&amp;lt;/width&amp;gt;&amp;lt;height&amp;gt;20&amp;lt;/height&amp;gt;&amp;lt;/size&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;/spacer&amp;gt;&amp;lt;/item&amp;gt;&amp;lt;item&amp;gt;&amp;lt;widget class=&amp;quot;QPushButton&amp;quot; name=&amp;quot;pushButton_2&amp;quot;&amp;gt;&amp;lt;property name=&amp;quot;text&amp;quot;&amp;gt;&amp;lt;string&amp;gt;PushButton&amp;lt;/string&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;/widget&amp;gt;&amp;lt;/item&amp;gt;&amp;lt;item&amp;gt;&amp;lt;spacer name=&amp;quot;horizontalSpacer_3&amp;quot;&amp;gt;&amp;lt;property name=&amp;quot;orientation&amp;quot;&amp;gt;&amp;lt;enum&amp;gt;Qt::Horizontal&amp;lt;/enum&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;property name=&amp;quot;sizeHint&amp;quot; stdset=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;size&amp;gt;&amp;lt;width&amp;gt;40&amp;lt;/width&amp;gt;&amp;lt;height&amp;gt;20&amp;lt;/height&amp;gt;&amp;lt;/size&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;/spacer&amp;gt;&amp;lt;/item&amp;gt;&amp;lt;item&amp;gt;&amp;lt;widget class=&amp;quot;QPushButton&amp;quot; name=&amp;quot;pushButton&amp;quot;&amp;gt;&amp;lt;property name=&amp;quot;text&amp;quot;&amp;gt;&amp;lt;string&amp;gt;PushButton&amp;lt;/string&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;/widget&amp;gt;&amp;lt;/item&amp;gt;&amp;lt;item&amp;gt;&amp;lt;spacer name=&amp;quot;horizontalSpacer_4&amp;quot;&amp;gt;&amp;lt;property name=&amp;quot;orientation&amp;quot;&amp;gt;&amp;lt;enum&amp;gt;Qt::Horizontal&amp;lt;/enum&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;property name=&amp;quot;sizeHint&amp;quot; stdset=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;size&amp;gt;&amp;lt;width&amp;gt;40&amp;lt;/width&amp;gt;&amp;lt;height&amp;gt;20&amp;lt;/height&amp;gt;&amp;lt;/size&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;/spacer&amp;gt;&amp;lt;/item&amp;gt;&amp;lt;/layout&amp;gt;&amp;lt;/widget&amp;gt;&amp;lt;/widget&amp;gt;&amp;lt;widget class=&amp;quot;QStatusBar&amp;quot; name=&amp;quot;statusbar&amp;quot;/&amp;gt;&amp;lt;/widget&amp;gt;&amp;lt;resources/&amp;gt;&amp;lt;connections/&amp;gt;&amp;lt;/ui&amp;gt; pyuic5 resizeDemo.</description>
    </item>
    
    <item>
      <title>Visual C# 中的事件及委托</title>
      <link>https://kissjava.cn/posts/visual-csharp-%E4%B8%AD%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%8F%8A%E5%A7%94%E6%89%98/</link>
      <pubDate>Sat, 09 Sep 2017 15:53:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/visual-csharp-%E4%B8%AD%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%8F%8A%E5%A7%94%E6%89%98/</guid>
      <description>在传统的程式设计语言中，事件一般是一种回调。在C#中这种回调被称为委托，事件处理不过是通过委托呼叫方法。
委托类别定义一个方法签名，可将相容签名的方法与委托相关联。
C#中事件采用发布/订阅模型，订阅事件其实就是用委托来实现的。
namespace WpfApplication1{/// &amp;lt;summary&amp;gt;/// Interaction logic for MainWindow.xaml/// &amp;lt;/summary&amp;gt;public partial class MainWindow : Window{public MainWindow(){InitializeComponent();var timer = new System.Timers.Timer(1000);timer.Start();timer.Elapsed += new System.Timers.ElapsedEventHandler(TimerElapsedHandler);}void TimerElapsedHandler(object sender, EventArgs e){MessageBox.Show(&amp;quot;Timer has Elapsed&amp;quot;);}}} 第一个参数 sender 表示引发实践的物件；第二个参数 e 是传说的数据，类别是 EventArgs 或其子类。事件处理方法返回值 void。
其实委托关联可以简写为timer.Elapsed += TimerElapsedHandler;，取消事件订阅timer.Elapsed -= TimerElapsedHandler;
匿名委托更为简洁，但是取消订阅不好处理,这里不作展开。
2017年09月11日 更新一下匿名的两张写法：
timer.Elapsed += delegate(object sender, System.</description>
    </item>
    
    <item>
      <title>Jupyter Notebook 在 CentOS7 下的安装配置</title>
      <link>https://kissjava.cn/posts/jupyter-notebook-%E5%9C%A8-centos7-%E4%B8%8B%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 04 Sep 2017 16:39:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/jupyter-notebook-%E5%9C%A8-centos7-%E4%B8%8B%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</guid>
      <description>使用Jupyter在浏览器上快(ku)乐(bi)的 编码吧 如果手头没有电脑，只有手机和 Pad ，却想用 python 写点东西（也许只是验证一下），这时就需要 Jupyter 了。（当然也可以直接用 Terminal 工具连上服务器搞起，也是一种解决方式，就是稍微繁琐点）。
好吧，我们开始安装 Jupyter之旅。先到官网版本库看看 https://repo.continuum.io/archive/，找到适合的最新版，复制链接地址（Mike 以 Linux 为例）。
$ wget https://repo.continuum.io/archive/Anaconda3-4.4.0-Linux-x86_64.sh--2017-09-04 09:15:29-- https://repo.continuum.io/archive/Anaconda3-4.4.0-Linux-x86_64.shResolving repo.continuum.io (repo.continuum.io)... 104.16.19.10, 104.16.18.10, 2400:cb00:2048:1::6810:130a, ...Connecting to repo.continuum.io (repo.continuum.io)|104.16.19.10|:443... connected.HTTP request sent, awaiting response... 200 OKLength: 523283080 (499M) [application/x-sh]Saving to: ‘Anaconda3-4.4.0-Linux-x86_64.sh’100%[=================================================================&amp;gt;] 523,283,080 11.3MB/s in 59s 2017-09-04 09:16:29 (8.39 MB/s) - ‘Anaconda3-4.4.0-Linux-x86_64.sh’ saved [523283080/523283080] 下载完成，vps 速度还算及格。
$ sudo bash Anaconda3-4.4.0-Linux-x86_64.shWelcome to Anaconda3 4.</description>
    </item>
    
    <item>
      <title>Somagu NAT 小鸡的挂载过程</title>
      <link>https://kissjava.cn/posts/somagu-nat-%E5%B0%8F%E9%B8%A1%E7%9A%84%E6%8C%82%E8%BD%BD%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Sat, 02 Sep 2017 13:33:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/somagu-nat-%E5%B0%8F%E9%B8%A1%E7%9A%84%E6%8C%82%E8%BD%BD%E8%BF%87%E7%A8%8B/</guid>
      <description>Somagu 提供了免费的 kvm 技术的 vps（免费到2017年9月底），虽然是 NAT 的（共享公网 IP），但是线路不错还是可玩的。 Somagu 小鸡根据你选择的 OS 模板，默认只有2.2G 或是8G 的硬盘空间。但是它提供了20G 的 Disk，但是需要我们自己去挂载。官网的说明
 If you created a VPS based on OS template, your extra disk space is at /dev/vdb device. Please mount, format and use it.
 好吧，下面记录一下挂载过程，Linux 挂载基本都是这个套路了。
# df -hFilesystem Size Used Avail Use% Mounted ondevtmpfs 222M 0 222M 0% /devtmpfs 244M 24K 244M 1% /dev/shmtmpfs 244M 8.3M 236M 4% /runtmpfs 244M 0 244M 0% /sys/fs/cgroup/dev/vda1 8.</description>
    </item>
    
    <item>
      <title>阿里云 ubuntu 的防火墙操作</title>
      <link>https://kissjava.cn/posts/%E9%98%BF%E9%87%8C%E4%BA%91-ubuntu-%E7%9A%84%E9%98%B2%E7%81%AB%E5%A2%99%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Wed, 23 Aug 2017 15:16:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E9%98%BF%E9%87%8C%E4%BA%91-ubuntu-%E7%9A%84%E9%98%B2%E7%81%AB%E5%A2%99%E6%93%8D%E4%BD%9C/</guid>
      <description>阿里云服务器，没有 web 面板权限，只有 root 用户。
重新安装了服务器的 web 环境，需要开发相关端口。
检查防火墙  $whereis iptables iptables: /sbin/iptables /etc/iptables.rules /usr/share/iptables /usr/share/man/man8/iptables.8.gz 说明防火墙开了
 根据上面的路径，编辑规则  $vi /etc/iptables.rules -A INPUT -p tcp -m state &amp;ndash;state NEW -m tcp &amp;ndash;dport 9443 -j ACCEPT -A INPUT -p udp -m state &amp;ndash;state NEW -m udp &amp;ndash;dport 9443 -j ACCEPT 以上放行了9443的 tcp 和 udp（拷贝已有规则改端口就好）
 更新规则  $iptables-restore &amp;lt; /etc/iptables.rules $chmod +x /etc/network/if-pre-up.d/iptables
 查看一下  $iptables -L -n Chain INPUT (policy DROP) target prot opt source destination ACCEPT all &amp;ndash; 0.</description>
    </item>
    
    <item>
      <title>Visual C# 禁止应用多次启动</title>
      <link>https://kissjava.cn/posts/visual-csharp-%E7%A6%81%E6%AD%A2%E5%BA%94%E7%94%A8%E5%A4%9A%E6%AC%A1%E5%90%AF%E5%8A%A8/</link>
      <pubDate>Thu, 10 Aug 2017 17:23:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/visual-csharp-%E7%A6%81%E6%AD%A2%E5%BA%94%E7%94%A8%E5%A4%9A%E6%AC%A1%E5%90%AF%E5%8A%A8/</guid>
      <description>废话少说，上代码：
System.Diagnostics.Process[] myProcesses = System.Diagnostics.Process.GetProcessesByName(&amp;quot;AppProcessName&amp;quot;);if (myProcesses.Length &amp;gt; 1) {MessageBox.Show(&amp;quot;The application has already started ！&amp;quot;);Close();} 以上是 WPF 适用的。 如果是 winform 就把 Close() 改为 Application.Exit();。 end.</description>
    </item>
    
    <item>
      <title>AlibabaCloudPricing</title>
      <link>https://kissjava.cn/posts/alibabacloudpricing/</link>
      <pubDate>Tue, 08 Aug 2017 08:17:51 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/alibabacloudpricing/</guid>
      <description>a:8:{s:4:&amp;ldquo;name&amp;rdquo;;s:23:&amp;ldquo;alibabaCloudPricing.png&amp;rdquo;;s:4:&amp;ldquo;path&amp;rdquo;;s:35:&amp;quot;/usr/uploads/2017/08/4072597731.png&amp;rdquo;;s:4:&amp;ldquo;size&amp;rdquo;;i:789109;s:4:&amp;ldquo;type&amp;rdquo;;s:3:&amp;ldquo;png&amp;rdquo;;s:4:&amp;ldquo;mime&amp;rdquo;;s:9:&amp;ldquo;image/png&amp;rdquo;;s:7:&amp;ldquo;isImage&amp;rdquo;;b:1;s:3:&amp;ldquo;url&amp;rdquo;;s:54:&amp;ldquo;http://kissjava.cn/usr/uploads/2017/08/4072597731.png&amp;quot;;s:11:&amp;quot;description&amp;quot;;N;}</description>
    </item>
    
    <item>
      <title>转战阿里国际</title>
      <link>https://kissjava.cn/posts/%E8%BD%AC%E6%88%98%E9%98%BF%E9%87%8C%E5%9B%BD%E9%99%85/</link>
      <pubDate>Mon, 07 Aug 2017 16:11:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E8%BD%AC%E6%88%98%E9%98%BF%E9%87%8C%E5%9B%BD%E9%99%85/</guid>
      <description>转战阿里国际，顺便更新个皮肤。
原本黑五的新加坡小鸡速度不错，就是最近频繁的宕机。
正好阿里云国际版出4.5刀/月的新加坡。配置良心，1024m 内存，40G SSD云盘，30m 带宽，1T 流量。于是又搬家了。
博主亲身体验，阿里云国际真心不错。绝对是目前的首选推荐。地址传送。
如果要更加便宜还要靠谱的 vps，建议搬瓦工，8机房任你切换。其中两个 LA 机房都是亚洲直连，速度还行。年付19$搬瓦工直连VPS传送。</description>
    </item>
    
    <item>
      <title>搬出搬瓦工了</title>
      <link>https://kissjava.cn/posts/%E6%90%AC%E5%87%BA%E6%90%AC%E7%93%A6%E5%B7%A5%E4%BA%86/</link>
      <pubDate>Thu, 15 Dec 2016 12:15:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E6%90%AC%E5%87%BA%E6%90%AC%E7%93%A6%E5%B7%A5%E4%BA%86/</guid>
      <description>剁了个新加坡vps，于是乎搬出搬瓦工。 搬瓦工速度还行，但是新加坡速度飞起（价格也感人）。 还是说明了，世界加钱可达！ 当然，搬瓦工性价比还是很高的，技术确实牛逼很稳定。 推荐年付19$搬瓦工KVM直连VPS，传输机在此！ 忽然发现，这2016年的第一篇博文。 今年还有半个月就完了！估计很可能也是今年的最后一篇吧。</description>
    </item>
    
    <item>
      <title>ipython tab键无法提示补全</title>
      <link>https://kissjava.cn/posts/ipython-tab%E9%94%AE%E6%97%A0%E6%B3%95%E6%8F%90%E7%A4%BA%E8%A1%A5%E5%85%A8/</link>
      <pubDate>Sat, 07 Nov 2015 08:39:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/ipython-tab%E9%94%AE%E6%97%A0%E6%B3%95%E6%8F%90%E7%A4%BA%E8%A1%A5%E5%85%A8/</guid>
      <description>python3.4下pip安装了ipython
pip install ipythoncmd运行ipython貌似正常，但是无法tab补全、提示 需要pip 安装 pyreadline
pip install pyreadline以上在win8.1下32位python3.4通过</description>
    </item>
    
    <item>
      <title>cx_Freeze setup.py</title>
      <link>https://kissjava.cn/posts/cx_freeze-setup.py/</link>
      <pubDate>Thu, 29 Oct 2015 16:34:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/cx_freeze-setup.py/</guid>
      <description>from cx_Freeze import setup, Executable# http://msdn.microsoft.com/en-us/library/windows/desktop/aa371847(v=vs.85).aspxshortcut_table = [(&amp;quot;DesktopShortcut&amp;quot;, # Shortcut&amp;quot;DesktopFolder&amp;quot;, # Directory_&amp;quot;YourAppDetailName&amp;quot;, # App Name&amp;quot;TARGETDIR&amp;quot;, # Component_&amp;quot;[TARGETDIR]AppName.exe&amp;quot;, # TargetNone, # ArgumentsNone, # DescriptionNone, # HotkeyNone, # IconNone, # IconIndexNone, # ShowCmd&#39;TARGETDIR&#39; # WkDir)]# Now create the table dictionarymsi_data = {&amp;quot;Shortcut&amp;quot;: shortcut_table}# Change some default MSI options and specify the use of the above defined tablesbdist_msi_options = {&#39;data&#39;: msi_data}# Dependencies are automatically detected, but it might need# fine tuning.</description>
    </item>
    
    <item>
      <title>spec demo</title>
      <link>https://kissjava.cn/posts/spec-demo/</link>
      <pubDate>Fri, 05 Sep 2014 14:15:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/spec-demo/</guid>
      <description># -*- mode: python -*-a = Analysis([&#39;d:\\Work\\dbTools\\dbTools.py&#39;],pathex=[&#39;D:\\Apps\\PyInstaller-2.1\\dbTools&#39;],hiddenimports=[],hookspath=None,runtime_hooks=None)pyz = PYZ(a.pure)exe = EXE(pyz,a.scripts,exclude_binaries=True,name=&#39;dbTools.exe&#39;,debug=False,strip=None,upx=True,console=False , version=&#39;d:\\Work\\dbTools\\v.txt&#39;, icon=&#39;d:\\Work\\dbTools\\dbTools.ico&#39;)dict_tree = Tree(&#39;d:\\Work\\dbTools\\backup&#39;, prefix = &#39;backup&#39;)dict_tree += Tree(&#39;d:\\Work\\dbTools\\test&#39;, prefix = &#39;test&#39;)dict_tree += [(&#39;dbTools.ico&#39;, &#39;d:\\Work\\dbTools\\dbTools.ico&#39;, &#39;DATA&#39;),(&#39;appcfg.dll&#39;,&#39;d:\\Work\\dbTools\\appcfg.dll&#39;,&#39;DATA&#39;),(&#39;backup.dll&#39;,&#39;d:\\Work\\dbTools\\backup.dll&#39;,&#39;DATA&#39;),(&#39;mysqlr.exe&#39;,&#39;d:\\Work\\dbTools\\mysqlr.exe&#39;,&#39;DATA&#39;),(&#39;mysqlb.exe&#39;,&#39;d:\\Work\\dbTools\\mysqlb.exe&#39;,&#39;DATA&#39;)]coll = COLLECT(exe,a.binaries,dict_tree,a.zipfiles,a.datas,strip=None,upx=True,name=&#39;dbTools&#39;)cmd
pyinstaller.py --upx-dir=d:\Apps\upx391w path\to\dbTools.spec资源文件也拷贝到位了，文件也压缩了，一下子打包的工作全部完成了。
2015年10月23日11:22:11 update： pyinstller现在支持python3.5了，cx_Freeze才支持到3.4。头疼的选择</description>
    </item>
    
    <item>
      <title>用Homebrew搞定MySQL-python</title>
      <link>https://kissjava.cn/posts/%E7%94%A8homebrew%E6%90%9E%E5%AE%9Amysql-python/</link>
      <pubDate>Wed, 13 Aug 2014 14:35:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E7%94%A8homebrew%E6%90%9E%E5%AE%9Amysql-python/</guid>
      <description>写php时，因为懒惰，所以在mac上用了mamp。 后来，写python。MySQLdb一直无法安装，后来是单独安装了mysql-5.1.73-osx10.6-x86_64 。 然后配置.bash_profile :
# Setting PATH for MySQLdbPATH=&amp;quot;/usr/local/mysql-5.1.73-osx10.6-x86_64/bin:${PATH}&amp;quot;export PATHexport DYLD_LIBRARY_PATH=&amp;quot;/usr/local/mysql-5.1.73-osx10.6-x86_64/lib&amp;quot;export VERSIONER_PYTHON_PREFER_64_BIT=noexport VERSIONER_PYTHON_PREFER_32_BIT=yes再使用pip安装既可：
sudo pip install MySQL-python比较繁琐。后来发现不用在使用mamp还要再安装一个mysql就可以安装上MySQL-python的方法。用brew两行代码搞定：
brew install mysql-connector-csudo pip install MySQL-python爽翻天了。
另，安装 Homebrew:
ruby -e &amp;quot;$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)&amp;quot;</description>
    </item>
    
    <item>
      <title>Flight 中文手册</title>
      <link>https://kissjava.cn/posts/flight-%E4%B8%AD%E6%96%87%E6%89%8B%E5%86%8C/</link>
      <pubDate>Thu, 12 Jun 2014 10:42:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/flight-%E4%B8%AD%E6%96%87%E6%89%8B%E5%86%8C/</guid>
      <description>&lt;h1 id=&#34;flight-是什么&#34;&gt;Flight 是什么?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;http://flightphp.com&#34;&gt;Flight&lt;/a&gt;是快速的，简洁的可扩展的PHP开发框架。 Flight 使您能够快速轻松地构建REST风格的Web应用程序。
中文手册由&lt;a href=&#34;http://kissjava.cn&#34;&gt;kissjava.cn&lt;/a&gt;翻译。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;require &amp;#39;flight/Flight.php&amp;#39;;

Flight::route(&amp;#39;/&amp;#39;, function(){
    echo &amp;#39;hello world!&amp;#39;;
});

Flight::start();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;** 转载请勿删改，并注明来源：http://kissjava.cn **&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PhpStorm 7.1.3 for Mac</title>
      <link>https://kissjava.cn/posts/phpstorm-7.1.3-for-mac/</link>
      <pubDate>Tue, 06 May 2014 23:13:25 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/phpstorm-7.1.3-for-mac/</guid>
      <description>EMBRACE
===== LICENSE BEGIN ===== 43136-12042010 00002UsvSON704l&amp;quot;dILe1PVx3y4&amp;quot;B3 49AU6oSDJrsjE8nMOQh&amp;quot;8HTDJHIUUh gd1BebYc5U&amp;quot;6OxDbVsALB4Eb10PW8&amp;rdquo; ===== LICENSE END =====
作为dscxy，你懂的。</description>
    </item>
    
    <item>
      <title>pycharm 3.1.3 for mac</title>
      <link>https://kissjava.cn/posts/pycharm-3.1.3-for-mac/</link>
      <pubDate>Wed, 30 Apr 2014 23:55:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/pycharm-3.1.3-for-mac/</guid>
      <description>确实比较好用，下面你懂得。
yueting3527
===== LICENSE BEGIN ===== 93347-12042010 00001FMHemWIs&amp;quot;6wozMZnat3IgXKXJ 2!nV2I6kSO48hgGLa9JNgjQ5oKz1Us FFR8k&amp;quot;nGzJHzjQT6IBG!1fbQZn9!Vi ===== LICENSE END =====</description>
    </item>
    
    <item>
      <title>准备申请SAE中级开发者（已通过）</title>
      <link>https://kissjava.cn/posts/%E5%87%86%E5%A4%87%E7%94%B3%E8%AF%B7sae%E4%B8%AD%E7%BA%A7%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%B2%E9%80%9A%E8%BF%87/</link>
      <pubDate>Sun, 27 Apr 2014 10:57:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%87%86%E5%A4%87%E7%94%B3%E8%AF%B7sae%E4%B8%AD%E7%BA%A7%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%B2%E9%80%9A%E8%BF%87/</guid>
      <description>为了每月免费补充至1万云豆，打算申请sina云的中级开发者认证，应用需要各位的独立IP，希望路过的多点支持，进去看看谢谢。
是一个进销存的web应用，前段用J-UI，php采用了Codeigniter框架。测试账号demo/demo。
http://minimis.sinaapp.com
2014-05-04 update:已经通过，谢谢各位。</description>
    </item>
    
    <item>
      <title>搞定在 Mac 安装 MySQLdb（MySQL-python）</title>
      <link>https://kissjava.cn/posts/%E6%90%9E%E5%AE%9A%E5%9C%A8-mac-%E5%AE%89%E8%A3%85-mysqldbmysql-python/</link>
      <pubDate>Fri, 25 Apr 2014 20:28:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E6%90%9E%E5%AE%9A%E5%9C%A8-mac-%E5%AE%89%E8%A3%85-mysqldbmysql-python/</guid>
      <description>重新安装easy_install（setuptools） 1，去下载 setuptools
2，到终端执行 sudo sh setuptools-0.6c11-py2.7.egg
3，清除下载的setuptools-0.6c11-py2.7.egg
删除MySQL sudo rm /usr/local/mysqlsudo rm -rf /usr/local/mysql*sudo rm -rf /Library/StartupItems/MySQLCOMsudo rm -rf /Library/PreferencePanes/MySQL*vim /etc/hostconfig and removed the line MYSQLCOM=-YES-rm -rf ~/Library/PreferencePanes/MySQL*sudo rm -rf /Library/Receipts/mysql*sudo rm -rf /Library/Receipts/MySQL*sudo rm -rf /var/db/receipts/com.mysql.* Mac下删除自己安装的Python 删除Python框架 sudo rm -rf /Library/Frameworks/Python.framework/Versions/x.x 删除Python程序 sudo rm -rf “/Applications/Python x.x” 删除/usr/local/bin目录下的Python连接 x.x为Python的版本号
安装PHP开发环境 MAMP 都有了
安装Python开发环境 受累MAMP，被MySQLdb折腾好久。最后，删除了python重新来过。 安装python 安装wxpython 安装easy_install 安装mysql-5.1.73-osx10.6-x86_64（64位的mysql，就是为了安装下面的MySQLdb） 编辑.</description>
    </item>
    
    <item>
      <title>Sublime text 3059 for MAC</title>
      <link>https://kissjava.cn/posts/sublime-text-3059-for-mac/</link>
      <pubDate>Wed, 23 Apr 2014 10:39:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/sublime-text-3059-for-mac/</guid>
      <description>1、去Sublime 官网下载最新的3059并安装。
2、执行并退出Sublime主程序。
3、下载本文附件，并解压。
4、Finder 打开 Applications 目录， 找到Sublime，右键“显示包内容”，找到 macOS 目录，把上一步解压出来的文件，拷贝到这里来，会提示“你是否要替换该文件”，选择替换。
5、打开终端，输入命令： cd /Applications/Sublime\ Text.app/Contents/macOS/ sudo chmod +x Sublime\ Text 根据提示，输入密码，因为要临时获取root权限。
6、运行Sublime，“关于 Sublime Text”，已经注册了。
End
你懂得附件</description>
    </item>
    
    <item>
      <title>wxpython设置背景</title>
      <link>https://kissjava.cn/posts/wxpython%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF/</link>
      <pubDate>Thu, 13 Mar 2014 22:30:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/wxpython%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF/</guid>
      <description>用wxformbuilder+一点代码来实现。
首先用wxformbuilder来做出界面，并生成代码。运行结果：
使其有背景图片效果： 实现代码如下：
#coding:utf-8import wx#导入wxformbuilder生成的代码import BgDemoclass Main(wx.App):def __init__(self, redirect=False, filename=None):wx.App.__init__(self, redirect, filename)dlg = BgDemo.MyFrame(None)#这里设置哪个控件需要设置背景dlg.m_panel1.Bind(wx.EVT_ERASE_BACKGROUND, self.OnEraseBackground)dlg.Show()def OnEraseBackground(self, evt):&amp;quot;&amp;quot;&amp;quot;设置背景的方法&amp;quot;&amp;quot;&amp;quot;dc = evt.GetDC()if not dc:dc = wx.ClientDC(self)rect = self.GetUpdateRegion().GetBox()dc.SetClippingRect(rect)dc.Clear()bmp = wx.Bitmap(&amp;quot;Sunset.jpg&amp;quot;)dc.DrawBitmap(bmp, 0, 0)if __name__ == &amp;quot;__main__&amp;quot;:app = Main()app.MainLoop() </description>
    </item>
    
    <item>
      <title>PyInstaller无法easy_install或pip安装</title>
      <link>https://kissjava.cn/posts/pyinstaller%E6%97%A0%E6%B3%95easy_install%E6%88%96pip%E5%AE%89%E8%A3%85/</link>
      <pubDate>Sat, 04 Jan 2014 13:53:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/pyinstaller%E6%97%A0%E6%B3%95easy_install%E6%88%96pip%E5%AE%89%E8%A3%85/</guid>
      <description>应该是由于奇葩的网络环境，总是无法顺利的采用easy_install，pip安装pyinstaller。 只好打开浏览器，http://www.pyinstaller.org/ 下载 PyInstaller 2.1 (zip) 手动安装。 也就一步，就是解压。淡水解压到d盘根目录 使用也很简单：
PS C:\Users\Frank&amp;gt; d:PS D:\&amp;gt; cd .\PyInstaller-2.1PS D:\PyInstaller-2.1&amp;gt; .\pyinstaller.py --noconsole --icon D:\wms\julin.ico D:\wms\julinWms.py 和easy_install安装后的使用方法几乎一样。 嗯，没多少干货。2014了，随便写点，证明一下还在喘气。</description>
    </item>
    
    <item>
      <title>Python MySQLdb模块的使用</title>
      <link>https://kissjava.cn/posts/python-mysqldb%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 22 Dec 2013 08:59:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/python-mysqldb%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>#-*- encoding: utf-8 -*-import os, sys, stringimport MySQLdb# 连接数据库　try:conn = MySQLdb.connect(host=&#39;localhost&#39;,user=&#39;root&#39;,passwd=&#39;xxxx&#39;,db=&#39;test1&#39;)except Exception, e:print esys.exit()# 获取cursor对象来进行操作cursor = conn.cursor()# 查询时返回元组#cursor = conn.cursor(cursorclass = MySQLdb.cursors.DictCursor)# 查询时返回字典# 创建表sql = &amp;quot;create table if not exists test1(name varchar(128) primary key, age int(4))&amp;quot;cursor.execute(sql)# 插入数据sql = &amp;quot;insert into test1(name, age) values (&#39;%s&#39;, %d)&amp;quot; % (&amp;quot;zhaowei&amp;quot;, 23)try:cursor.execute(sql)except Exception, e:print esql = &amp;quot;insert into test1(name, age) values (&#39;%s&#39;, %d)&amp;quot; % (&amp;quot;张三&amp;quot;, 21)try:cursor.</description>
    </item>
    
    <item>
      <title>wxPython跨线程调用[转]</title>
      <link>https://kissjava.cn/posts/wxpython%E8%B7%A8%E7%BA%BF%E7%A8%8B%E8%B0%83%E7%94%A8%E8%BD%AC/</link>
      <pubDate>Sat, 21 Dec 2013 12:44:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/wxpython%E8%B7%A8%E7%BA%BF%E7%A8%8B%E8%B0%83%E7%94%A8%E8%BD%AC/</guid>
      <description>&lt;p&gt;出处：http://guangboo.org/2013/08/23/wxpython-non-gui-thread-call-gui-method
之前有介绍了《wxPython多线程支持》，包含了wx.CallAfter, wx.PostEvent, wxCallLater的用法，本文将wx.CallAfter封装成decorator，使得UI线程中的方法可以在非UI线程中调用。&lt;/p&gt;
&lt;p&gt;本文将wx.CallAfter方法进行了封装，代码如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import wx

def call_after(func):
    def _wrapper(*args, **kwargs):
        return wx.CallAfter(func, *args, **kwargs)
    return _wrapper
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;当UI线程中的方法需要被非UI线程调用时，只有使用call_after进行修饰即可。如下对《wxPython多线程》中的实例改进：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>wxPython多线程支持[转]</title>
      <link>https://kissjava.cn/posts/wxpython%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%94%AF%E6%8C%81%E8%BD%AC/</link>
      <pubDate>Thu, 19 Dec 2013 09:23:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/wxpython%E5%A4%9A%E7%BA%BF%E7%A8%8B%E6%94%AF%E6%8C%81%E8%BD%AC/</guid>
      <description>&lt;p&gt;出处：&lt;a href=&#34;http://guangboo.org/2013/03/04/wxpython-threading&#34;&gt;http://guangboo.org/2013/03/04/wxpython-threading&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如果你经常使用python开发GUI程序的话，那么就知道，有时你需要很长时间来执行一个任务。当然，如果你使用命令行程序来做的话，你回非常惊讶。大部分情况下，这会堵塞GUI的事件循环，用户会看到程序卡死。如何才能避免这种情况呢？当然是利用线程或进程了！本文，我们将探索如何使用wxPython和theading模块来实现。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;wxpython线程安全方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;wxPython中，有三个“线程安全”的函数。如果你在更新UI界面时，三个函数都不使用，那么你可能会遇到奇怪的问题。有时GUI也运行挺正常，有时却会无缘无故的崩溃。因此就需要这三个线程安全的函数：wx.PostEvent, wx.CallAfter和wx.CallLater。据Robin Dunn（wxPython作者）描述，wx.CallAfter使用了wx.PostEvent来给应用程序对象发生事件。应用程序会有个事件处理程序绑定到事件上，并在收到事件后，执行处理程序来做出反应。我认为wx.CallLater是在特定时间后调用了wx.CallAfter函数，以实现规定时间后发送事件。&lt;/p&gt;
&lt;p&gt;Robin Dunn还指出Python全局解释锁 (GIL)也会避免多线程同时执行python字节码，这会限制程序使用CPU内核的数量。另外，他还说，“wxPython发布GIL是为了在调用wx API时，其他线程也可以运行”。换句话说，在多核机器上使用多线程，可能效果会不同。&lt;/p&gt;
&lt;p&gt;总之，大概的意思是wx函数中，wx.CallLater是最抽象的线程安全函数, wx.CallAfter次之，wx.PostEvent是最低级的。下面的实例，演示了如何使用wx.CallAfter和wx.PostEvent函数来更新wxPython程序。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>新玩具</title>
      <link>https://kissjava.cn/posts/%E6%96%B0%E7%8E%A9%E5%85%B7/</link>
      <pubDate>Sat, 16 Nov 2013 12:47:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E6%96%B0%E7%8E%A9%E5%85%B7/</guid>
      <description>先上图App? 其实是jquerymobile写的html5. 感谢jquerymobile，感谢LazyPHP(真的很好用)。 都是刚刚上手，耗时大约48个小时完成。 用到html5的localStorage和eventSource特性。 遗憾没有真正的push，其实eventSource和使用定时ajax轮询效果相当，都是定时发送查询。 eventSource可以少写些代码，ajax轮询可以自己定制多些。 最后，玩一把美图秀秀&amp;hellip; </description>
    </item>
    
    <item>
      <title>Python调用windows下DLL详解 - ctypes库的使用[转]</title>
      <link>https://kissjava.cn/posts/python%E8%B0%83%E7%94%A8windows%E4%B8%8Bdll%E8%AF%A6%E8%A7%A3-ctypes%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8%E8%BD%AC/</link>
      <pubDate>Wed, 30 Oct 2013 10:31:29 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/python%E8%B0%83%E7%94%A8windows%E4%B8%8Bdll%E8%AF%A6%E8%A7%A3-ctypes%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8%E8%BD%AC/</guid>
      <description>来源：http://blog.csdn.net/magictong/article/details/3075478
在python中某些时候需要C做效率上的补充，在实际应用中，需要做部分数据的交互。使用python中的ctypes模块可以很方便的调用windows的dll（也包括linux下的so等文件），下面将详细的讲解这个模块（以windows平台为例子），当然我假设你们已经对windows下怎么写一个DLL是没有问题的。
引入ctypes库 from ctypes import * 假设你已经有了一个的DLL（名字是add.dll)，且该DLL有一个符合cdecl（这里强调调用约定是因为，stdcall调用约定和cdecl调用约定声明的导出函数，在使用python加载时使用的加载函数是不同的，后面会有说明）调用约定的导出函数Add。 建立一个Python文件DllCall.py测试： from ctypes import * dll = CDLL(&amp;ldquo;add.dll&amp;rdquo;) print dll.Add(1, 102) 结果：103
上面是一个简单的例子。下面简单聊一下调用流程： 1、加载DLL 上面已经说过，加载的时候要根据你将要调用的函数是符合什么调用约定的。 stdcall调用约定：两种加载方式 Objdll = ctypes.windll.LoadLibrary(&amp;ldquo;dllpath&amp;rdquo;) Objdll = ctypes.WinDLL(&amp;ldquo;dllpath&amp;rdquo;) cdecl调用约定：也有两种加载方式 Objdll = ctypes.cdll.LoadLibrary(&amp;ldquo;dllpath&amp;rdquo;) Objdll = ctypes.CDLL(&amp;ldquo;dllpath&amp;rdquo;) 其实windll和cdll分别是WinDLL类和CDll类的对象。
2、调用dll中的方法 在1中加载dll的时候会返回一个DLL对象（假设名字叫Objdll），利用该对象就可以调用dll中的方法。 e.g.如果dll中有个方法名字叫Add（注意如果经过stdcall声明的方法，如果不是用def文件声明的导出函数或者extern “C” 声明的话，编译器会对函数名进行修改，这个要注意，我想你们懂的。） 调用：nRet = Objdll.Add(12, 15) 即完成一次调用。
看起来调用似乎很简单，不要只看表象，呵呵，这是因为Add这个函数太简单了，现在假设函数需要你传入一个int类型的指针（int*），可以通过库中的byref关键字来实现，假设现在调用的函数的第三个参数是个int类型的指针。
如果是要传入一个char缓冲区指针，和缓冲区长度，方法至少有四种：
方法2 sBuf = &amp;lsquo;aaaaaaaaaabbbbbbbbbbbbbb&amp;rsquo; pStr = c_char_p( ) pStr.value = sBuf #pVoid = ctypes.cast( pStr, ctypes.c_void_p ).value dll.PrintInfo(pStr, len(pStr.value)) print pStr.</description>
    </item>
    
    <item>
      <title>一个最简单的用PYTHON实现的WINDOWS服务程序 [转]</title>
      <link>https://kissjava.cn/posts/%E4%B8%80%E4%B8%AA%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E7%94%A8python%E5%AE%9E%E7%8E%B0%E7%9A%84windows%E6%9C%8D%E5%8A%A1%E7%A8%8B%E5%BA%8F-%E8%BD%AC/</link>
      <pubDate>Wed, 30 Oct 2013 10:31:09 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E4%B8%80%E4%B8%AA%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E7%94%A8python%E5%AE%9E%E7%8E%B0%E7%9A%84windows%E6%9C%8D%E5%8A%A1%E7%A8%8B%E5%BA%8F-%E8%BD%AC/</guid>
      <description>原文:http://blog.sina.com.cn/s/blog_633b6d790100g4tu.html1、想写一个监视服务器是否运行的简单服务，网上搜到的例程不太完善，如梅劲松的许久 没有更新，而且SvcDoRun写得不完整（见http://www.chinaunix.net/jh/55/558190.html， 不知道是不是原始出处）；而mail.python.org中的没有定义_svc_name_等变量（见 http://mail.python.org/pipermail/python-list/2005-December/315190.html） 2、这个实现功能很简单，就是把当前时间写入‘c:\temp\time.txt’文件，一看即知， 大家可以随意扩充。 3、用 service install 安装 service start 启动 service stop 停止 service debug 调试 service remove 删除
service.py #coding:utf-8 import win32serviceutil import win32service import win32event import win32evtlogutil import time class service(win32serviceutil.ServiceFramework): svc_name = &amp;ldquo;test_python&amp;rdquo; svc_display_name = &amp;ldquo;test_python&amp;rdquo; def init(self, args): win32serviceutil.ServiceFramework.init(self, args) self.hWaitStop = win32event.CreateEvent(None, 0, 0, None) print &amp;lsquo;服务开始&amp;rsquo; def SvcDoRun(self): import servicemanager #&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; # Make entry in the event log that this service started #&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; servicemanager.</description>
    </item>
    
    <item>
      <title>Pyinstaller安装及使用</title>
      <link>https://kissjava.cn/posts/pyinstaller%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 16 Oct 2013 17:26:21 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/pyinstaller%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/</guid>
      <description>也可以用py2exe,但是总要写个xxx.py的文件来配置,不是很乐意.
chinaunix上有朋友推荐用pyinstaller,说更容易使用.那就用用看吧.
第一步:安装 easy_install pyinstaller(淡水在win8.1下需要用管理员权限安装)
第二步:使用 cd d: mkdir temp cd temp pyinstaller &amp;ndash;noconsole &amp;ndash;icon d:\ledpub\julin.ico d:\ledpub\julinKanBan.py 真的很简单,在d盘建立了临时文件夹,打包好的程序会放在这里. noconsole,设置不要出现控制台窗口(就是doc窗口) icon,设置exe的图标文件(图标有限制,按128,64,48,32,16的大小排列,否则win7下可能看不到图标)
The end.</description>
    </item>
    
    <item>
      <title>[转]sublime text 3 插件：package control</title>
      <link>https://kissjava.cn/posts/%E8%BD%ACsublime-text-3-%E6%8F%92%E4%BB%B6package-control/</link>
      <pubDate>Thu, 10 Oct 2013 15:03:12 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E8%BD%ACsublime-text-3-%E6%8F%92%E4%BB%B6package-control/</guid>
      <description>来源：http://qianduanblog.com/1900.html和sublime text 2不同的是，sublime text 3无法使用命令直接来安装package control，一直不明白，这么一个很好的工具，为什么不直接集成在软件里呢，还要这么麻烦的安装呢？相比sublime text 2来说，sublime text 3的安装过程相对要麻烦很多。
在搜索引擎中搜索后，有很多的安装方法，权衡各种方法，这里描述的方法应该是最简单的了。
打开页面，右下角，点击下载：
 下载之后，修改该文件夹名称为Package Control，注意大小写。
B、复制刚才的“package control”文件到该目录下面。
C、重新打开sublime text 3编辑器，在菜单-&amp;gt;preferences-&amp;gt;Package Settings和Package Control选项，就说明安装Package Control成功了。</description>
    </item>
    
    <item>
      <title>搬家到SAE</title>
      <link>https://kissjava.cn/posts/%E6%90%AC%E5%AE%B6%E5%88%B0sae/</link>
      <pubDate>Tue, 17 Sep 2013 15:53:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E6%90%AC%E5%AE%B6%E5%88%B0sae/</guid>
      <description>搬家到SAE。友链及部分文章丢失，有劳各位友链博主留言，我会一一补上。从搜索引擎过来的朋友，链接和内容无法对上，请搜索。
为了找到备案号，搜快照，居然找到2005年在opera上写的东西，还有一张老照片啊。</description>
    </item>
    
    <item>
      <title>How to run a wxPython GUI app in Sublime Text 2</title>
      <link>https://kissjava.cn/posts/how-to-run-a-wxpython-gui-app-in-sublime-text-2/</link>
      <pubDate>Tue, 27 Aug 2013 10:35:55 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/how-to-run-a-wxpython-gui-app-in-sublime-text-2/</guid>
      <description>Step 1:Preference-&amp;gt;Browse Packages-&amp;gt;python，编辑Python.sublime-build文件，在字典里添加path item，value为python路径，淡水的如下： { &amp;ldquo;cmd&amp;rdquo;:[&amp;ldquo;python.exe&amp;rdquo;, &amp;ldquo;-u&amp;rdquo;, &amp;ldquo;$file&amp;rdquo;], &amp;ldquo;path&amp;rdquo;:&amp;ldquo;C:/Python27&amp;rdquo;, &amp;ldquo;file_regex&amp;rdquo;: &amp;ldquo;^[ ]File &amp;ldquo;(&amp;hellip;?)&amp;rdquo;, line ([0-9]*)&amp;rdquo;, &amp;ldquo;selector&amp;rdquo;: &amp;ldquo;source.python&amp;rdquo; } 这就解决了python的ctrl+b的build（python里算是运行）问题；但是如果使用了wxpython它还是不能跑起来。
Step 2:Preference-&amp;gt;Browse Packages-&amp;gt;Default，编辑exec.py，31行左右注释掉一行代码，淡水的如下（从代码来看适用windows系统）： if os.name == &amp;ldquo;nt&amp;rdquo;: startupinfo = subprocess.STARTUPINFO() # startupinfo.dwFlags |= subprocess.STARTF_USESHOWWINDOW 应该就可以直接ctrl+b跑wxpython的程序了。这下调试不用手动在dos和sublime间来回切换了。</description>
    </item>
    
    <item>
      <title>完成第一个基于python的GUI程序</title>
      <link>https://kissjava.cn/posts/%E5%AE%8C%E6%88%90%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%9F%BA%E4%BA%8Epython%E7%9A%84gui%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Wed, 21 Aug 2013 17:28:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%AE%8C%E6%88%90%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%9F%BA%E4%BA%8Epython%E7%9A%84gui%E7%A8%8B%E5%BA%8F/</guid>
      <description>上图先
采用wxpython。涉及到多线程，socket。
耗费时间大概5天，从tkinter，到wxpython的转变。还有wxpython的gui工具等占了一半，后面多线程和socket的测试占了一半时间。
程序写得一般，原因是没有重复利用python的一些语法特色，应可以写得更加pythonic
开始用php写，但是无法解决多线程同时监控，弃之。</description>
    </item>
    
    <item>
      <title>python虚拟环境virtualenv</title>
      <link>https://kissjava.cn/posts/python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83virtualenv/</link>
      <pubDate>Tue, 23 Jul 2013 14:34:44 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/python%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83virtualenv/</guid>
      <description>昨儿提到了python安装virtualenv但是并未说明它的用途和使用方法.今天就再次勤快一下.
virtualenv是可以在python中建立隔离不同的第三方工具包的工具,它建立一个虚拟的独立环境.嗯,就是一个沙箱吧.
这样每个项目都可以有自己的第三方工具包,可以自己升级,而不会影响到其他环境里的工具包.
比如,我可以为公司的项目搞个环境叫comDjango;还可以自己偷偷搞个myDjango.
domDjango里可以是老版的Django,myDjango里可以是最新的测试版.他们不会影响到对方.解决了所有项目都用同一版本类库的尴尬,当然还有其他好处.比如某个环境里只安装想要的包,满足洁癖等等&amp;hellip;
好吧,说说安装和使用吧.
#安装 $easy_install virtualenv#使用 #在当前目录下,建立了一个comDjango(是个目录) $virtualenv comDjango #上面的操作,会依赖系统已有的site packages,要建立一个更纯净的可以用 $virtualenv &amp;ndash;no-site-packages comDjango #进入这个目录,并激活这个环境 $cd comDjango #$source bin/activate(Linux下的激活) #windows下的操作. $Scriptsactivate.bat #完成后提示符路径前会多出&amp;rdquo;(comDjango)&amp;quot;,也就是成功进入了comDjango的虚拟环境了此时,去pip install xxx就会安装到comDjango里了,和其他环境不相干了.
#最后,退出这个虚拟环境 $deactivate</description>
    </item>
    
    <item>
      <title>python 安装二三事</title>
      <link>https://kissjava.cn/posts/python-%E5%AE%89%E8%A3%85%E4%BA%8C%E4%B8%89%E4%BA%8B/</link>
      <pubDate>Sun, 21 Jul 2013 13:44:09 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/python-%E5%AE%89%E8%A3%85%E4%BA%8C%E4%B8%89%E4%BA%8B/</guid>
      <description>恰好,下载文件夹里有个python2.7.5.mis
双击,一路next,安装完成.
在命令行窗口,敲python回车.尽然没有说不是内部或外部命令.显然是没有写到Path里. 好吧,手动吧.
系统-&amp;gt;高级属性设置-&amp;gt;环境变量:
编辑Path:添加上 ;C:\Python27\Scripts;C:\Python27;C:\Python27\Lib再到命令行,敲python回车.妥了.
还要安装easy install(应该叫它setuptools,官方叫这个包).这个没有mis包.需要下载一个ez_setup.py(这里有:http://peak.telecommunity.com/dist/ez_setup.py)
命令行下安装:cd 下载目录;python ez_setup.py只要连网了,一般都能安装成功,要么就是人品问题了.
好吧,这下就可以在命令行下,简单的安装python第三方的包了.比如 easy_install virtualenv还有 easy_install MySQL-python&amp;hellip;
好像比php方便些呢.其实好久没更新blog了,随意写写,凑数来了. 注意是随意,不是随便.</description>
    </item>
    
    <item>
      <title>安装sublime text 2后的几件事</title>
      <link>https://kissjava.cn/posts/%E5%AE%89%E8%A3%85sublime-text-2%E5%90%8E%E7%9A%84%E5%87%A0%E4%BB%B6%E4%BA%8B/</link>
      <pubDate>Sat, 01 Dec 2012 09:24:29 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%AE%89%E8%A3%85sublime-text-2%E5%90%8E%E7%9A%84%E5%87%A0%E4%BB%B6%E4%BA%8B/</guid>
      <description>1，安装 Package Control 的方法：
打开 Sublime Text 2，按下 Control + ` 调出 Console 将以下代码粘贴进命令行中并回车：
重启sublime Text 2
2，ctrl+shift+p 输入 install package，安装alignment用于对其代码(ctrl+alt+a)
3, ctrl+shift+p 输入 install package, 安装GBK Encoding Support,支持GBK的文件
4, ctrl+shift+p 输入 install package, 安装theme soda, Preferences-&amp;gt;setings user-&amp;gt;&amp;ldquo;theme&amp;rdquo;: &amp;ldquo;Soda Light.sublime-theme&amp;rdquo;
5, 2012年12月2日 续补. https://github.com/eric-wieser/build-with-input 下载插件,解决写python时ctrl+b运行时无法从控制台获取输入的bug. 安装:preferences-&amp;gt;brower packages ,复制进去即可.
ps:记住一些快捷键
ctrl+p 直接输入文件名可以立刻打开它
ctrl+P 输入 @ 可以列出当前文件的function方便跳转到对应的function 或ctrl+r,他会自动输入@
ctrl+p 输入 : 可以转到对应的行 或ctrl+g,它会自动输入:
ctrl+p 输入 ＃ 在当前文件中快速搜索内容
ctrl+alt+上下方向键 可以在多行同时出现光标,进行多行编辑 也可以用ctrl+鼠标点击 ctrl+鼠标拖选 可以选择多行的不同部分</description>
    </item>
    
    <item>
      <title>清理.SVN文件夹及右键菜单</title>
      <link>https://kissjava.cn/posts/%E6%B8%85%E7%90%86.svn%E6%96%87%E4%BB%B6%E5%A4%B9%E5%8F%8A%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95/</link>
      <pubDate>Fri, 30 Nov 2012 13:02:20 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E6%B8%85%E7%90%86.svn%E6%96%87%E4%BB%B6%E5%A4%B9%E5%8F%8A%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95/</guid>
      <description>无废话，不博客-_-! 先说清理.svn文件夹吧，不知道为什么好好的svn的export不用，搞得文件夹下都有.svn文件夹。微软上有个批处理，导入到注册表后就有个右键菜单“Delete SVN Folders”。如下，保存为.reg后缀后双击导入注册表即可使用。 Windows Registry Editor Version 5.00
[HKEY_LOCAL_MACHINESOFTWAREClassesFoldershellDeleteSVN] @=&amp;quot;Delete SVN Folders&amp;rdquo;
[HKEY_LOCAL_MACHINESOFTWAREClassesFoldershellDeleteSVNcommand] @=&amp;quot;cmd.exe /c &amp;ldquo;TITLE Removing SVN Folders in %1 &amp;amp;&amp;amp; COLOR 9A &amp;amp;&amp;amp; FOR /r &amp;ldquo;%1&amp;rdquo; %%f IN (.svn) DO RD /s /q &amp;ldquo;%%f&amp;rdquo; &amp;quot;&amp;rdquo; 说到右键菜单，我就发现，右键的发送到下面有个115备份。这个我早就删除了，注册表也搜索后删除了，但是还在。嗯，很顽强。下载右键管家，终于搞定。右键管家的下载地址：http://www.xiazaiba.com/html/5887.htmlps：win8 64位管家依旧给力支持</description>
    </item>
    
    <item>
      <title>又要回头搞微软么</title>
      <link>https://kissjava.cn/posts/%E5%8F%88%E8%A6%81%E5%9B%9E%E5%A4%B4%E6%90%9E%E5%BE%AE%E8%BD%AF%E4%B9%88/</link>
      <pubDate>Mon, 19 Nov 2012 12:36:07 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%8F%88%E8%A6%81%E5%9B%9E%E5%A4%B4%E6%90%9E%E5%BE%AE%E8%BD%AF%E4%B9%88/</guid>
      <description>标题党 -_-! 写着php，却喜欢python。但是搞java貌似比有市场，满大街的Andriod呀。 要不，先搞搞比较容易上手的C#？ MS的IDE实在是给力。又是选择题，悲催。 </description>
    </item>
    
    <item>
      <title>Simple Test 中文参考</title>
      <link>https://kissjava.cn/posts/simple-test-%E4%B8%AD%E6%96%87%E5%8F%82%E8%80%83/</link>
      <pubDate>Mon, 25 Jun 2012 15:14:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/simple-test-%E4%B8%AD%E6%96%87%E5%8F%82%E8%80%83/</guid>
      <description>&lt;p&gt;先来一个SimpleTest的简单的演示。&lt;/p&gt;
&lt;p&gt;我们假设我们正在测试一个简单的文件登陆类。这个叫做Log的类放在classes/log.php里。
我们用以下代码来创建一个测试脚本放在tests/log_test.php里．
&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;autorun.php不仅包含了Simpletest的相关文件，还能够把测试自动执行起来。&lt;/p&gt;
&lt;p&gt;TestOfLogging是我们的第一测试用例，此时还是空的。每一个测试用例都是一个继承SimpleTest的类，我们可以在一个文件里写多个测试用例。&lt;/p&gt;
&lt;p&gt;代码的第三行，引入了Log类，现在我们有了测试框架，但还没有写具体的测试。&lt;/p&gt;
&lt;p&gt;第一个测试，我们假定Log类通过构造函数传入要存储log信息的文件名，并且我们有临时文件夹来放置这个文件&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&amp;lt;?php
require_once(&amp;lsquo;simpletest/autorun.php&amp;rsquo;);
require_once(&amp;rsquo;../classes/log.php&amp;rsquo;);&lt;/p&gt;
&lt;p&gt;class TestOfLogging extends UnitTestCase {
function testLogCreatesNewFileOnFirstMessage() {
@unlink(&#39;/temp/test.log&amp;rsquo;);
$log = new Log(&#39;/temp/test.log&amp;rsquo;);
$this-&amp;gt;assertFalse(file_exists(&#39;/temp/test.log&amp;rsquo;));
$log-&amp;gt;message(&amp;lsquo;Should write this to a file&amp;rsquo;);
$this-&amp;gt;assertTrue(file_exists(&#39;/temp/test.log&amp;rsquo;));
}
}
?&amp;gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;当一个测试用例执行时，它会搜索所有以&amp;quot;test&amp;quot;开头的方法来并且执行。 这里我们用了一个很长的方法名testLogCreatesNewFileOnFirstMessage()，这是一个好习惯，可以让测试的输出信息更有可读性。&lt;/p&gt;
&lt;p&gt;通常一个测试用例里会有多个测试方法，后边会具体来讲。&lt;/p&gt;
&lt;p&gt;测试方法中的断言（assertion）会触发测试框架来即时显示测试结果。这个即时反馈很重要，不仅发生在代码导致的崩溃时，也用来显示与断言有关的调试信息。&lt;/p&gt;
&lt;p&gt;要看测试结果，我们需要实际地执行一下测试。不需要再写代码了，只要在浏览器里打开这个页面就可以了
测试失败会显示以下信息&amp;hellip;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;1/1 test cases complete. 1 passes and 1 fails.&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;通过测试则会显示以下信息&amp;hellip;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;如果你得到这样的信息&amp;hellip;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;表示你没准备好classes/Log.php这个文件&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&amp;lt;?php
class Log {
function Log($file_path) {
}&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function message() {
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;}
?&amp;gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;在测试之后写代码，这样的开发方式称之为“测试驱动开发”&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>xampp下安装 PhpDocumenter</title>
      <link>https://kissjava.cn/posts/xampp%E4%B8%8B%E5%AE%89%E8%A3%85-phpdocumenter/</link>
      <pubDate>Tue, 29 May 2012 12:04:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/xampp%E4%B8%8B%E5%AE%89%E8%A3%85-phpdocumenter/</guid>
      <description>没有长篇大论，也不用pear安装PhpDocumentor。比较简洁。 淡水在win7下采用的是xampp lite版。貌似pear install phpdocumentor不顶用。而且淡水不喜欢用集成了phpdocumentor的ZSE，所以有了本文。 下载PhpDocumentor-1.4.4.tgz 解压到D:xampphpPhpDocumentor目录下（这里淡水的php目录，需要修改为自己的路径） 然后修改该目录里的 phpdoc.bat 这个批处理文件，将16行 “SET phpCli=”修改成你的PHP路径： SET phpCli=D:xamppphpphp.exe 集成到eclipse PDT里（zend studio for eclipse里已经自带了，pdt要自己动手）：参数说明：快小半年没更新了，这里都快荒废了，有木有！</description>
    </item>
    
    <item>
      <title>Lazy Load Plugin for jQuery</title>
      <link>https://kissjava.cn/posts/lazy-load-plugin-for-jquery/</link>
      <pubDate>Mon, 06 Feb 2012 20:37:18 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/lazy-load-plugin-for-jquery/</guid>
      <description>lazy load 就是 懒惰加载。要告诉它，我需要你啦，它才跑出来。
这个插件，就是浏览器还没有浏览到的图片，都不加载；等滚动条下拉，下面的页面显示了，原来下面页面包含的图片才会被触发加载。
已经有些站用这样的技术了。淡水一直不致力于前端研究，正好晃荡到这个插件的站点。
http://www.appelsiini.net/projects/lazyload
就不翻译了。简单的用用。图片源给个1*1像素的空图，真正的图片路径放到data-original属性里。底部加载jquery和插件js还有简单的插件函数调用。
其他还有一些乱七八糟的用法就不多说了。上边的代码足矣。</description>
    </item>
    
    <item>
      <title>MongoDB快速上手PHP篇</title>
      <link>https://kissjava.cn/posts/mongodb%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8Bphp%E7%AF%87/</link>
      <pubDate>Thu, 02 Feb 2012 15:37:20 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/mongodb%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8Bphp%E7%AF%87/</guid>
      <description>1，简介mongoDB（http://www.mongodb.org）是一种 NoSQL 的文档型的数据库管理系统。MongoDB是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。他支持的数据结构非常松散，是类似 json的bjson格式，因此可以存储比较复杂的数据类型。Mongo最大的特点是他支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。 Mongo主要解决的是海量数据的访问效率问题，根据官方的文档，当数据量达到50GB以上的时候，Mongo的数据库访问速度是MySQL的 10倍以上。Mongo的并发读写效率不是特别出色，根据官方提供的性能测试表明，大约每秒可以处理0.5万－1.5次读写请求。
2，安装（windows only）到官网下载对应的包 解压到d:mongodb 创建d:mongodbdata放置数据文件
3,运行mongodbd:mongodbbin下有一些可执行文件，其中mongod.exe是服务器端，mongo.exe是客户端。 运行cmd，输入 d:mongodbbin&amp;gt;mongod.exe -dbpath d:mongodbdata 服务器成功启动
4，让php支持MongoDB下载php_mongo.dll,注意版本，php5.3.x应该支持v9的（有些老资料让apache的下v6，其实要看看phpinfo后下载对应的版本）; 修改php.ini,增加 extension = php_mongo.dll; 重启apache.
5,php操作MongoDB这里淡水找到了 xiaocai 的博文一篇，做了些调整，比较好。 原文链接：PHP操作MongoDB学习笔记以下是淡水的修改版： </description>
    </item>
    
    <item>
      <title>web.py尝鲜时遭遇no module named MySQLdb</title>
      <link>https://kissjava.cn/posts/web.py%E5%B0%9D%E9%B2%9C%E6%97%B6%E9%81%AD%E9%81%87no-module-named-mysqldb/</link>
      <pubDate>Tue, 31 Jan 2012 17:09:34 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/web.py%E5%B0%9D%E9%B2%9C%E6%97%B6%E9%81%AD%E9%81%87no-module-named-mysqldb/</guid>
      <description>python看了好一阵了，一直没有突破。挤了点时间折腾web.py。
下个小应用跑跑看，出现解决“no module named MySQLdb”。就是缺了MySQLdb模块，于是下了安装，但是一直不行。
google之，原来是版本不一致，淡水是在64位的win7上用的64位的python2.7，所以对应的MySQL-python也要64位的。
这里有下。http://www.lfd.uci.edu/~gohlke/pythonlibs/ 里面还有好多的。</description>
    </item>
    
    <item>
      <title>怎样使用php编辑以文件形式存储的配置文件</title>
      <link>https://kissjava.cn/posts/%E6%80%8E%E6%A0%B7%E4%BD%BF%E7%94%A8php%E7%BC%96%E8%BE%91%E4%BB%A5%E6%96%87%E4%BB%B6%E5%BD%A2%E5%BC%8F%E5%AD%98%E5%82%A8%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</link>
      <pubDate>Mon, 30 Jan 2012 20:08:20 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E6%80%8E%E6%A0%B7%E4%BD%BF%E7%94%A8php%E7%BC%96%E8%BE%91%E4%BB%A5%E6%96%87%E4%BB%B6%E5%BD%A2%E5%BC%8F%E5%AD%98%E5%82%A8%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</guid>
      <description>文件形式存储配置文件比较方便，一些不常变动的部分就无需写到数据库中，这样就无需每次都要读取数据库，可以降低数据库的负担，还可以提高响应速度。但是修改貌似没那么方便，如果可以在线上修改php配置文件那就好了。比如改改广告链接啊，变动部分css等等都可以的。
淡水的意思其实就是不要滥用数据库，文件的读写也是可以帮助我们完成许多工作的。</description>
    </item>
    
    <item>
      <title>meta标签简明教程</title>
      <link>https://kissjava.cn/posts/meta%E6%A0%87%E7%AD%BE%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/</link>
      <pubDate>Mon, 30 Jan 2012 02:13:46 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/meta%E6%A0%87%E7%AD%BE%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/</guid>
      <description>又是简明教程，嗯，好为人师啊。
其实这应该是基本功，只是有些只注意速成的web设计师没有留心到。
meta的存放位置meta标签放置在head标签之间。 关键字关键字须用英文逗号(,)隔开,不要有空白。 网站描述页面如果没有给出网站描述时，搜寻引擎通常会自动抓网页的前25字做为网页内容摘要，呈现在搜寻结果上。但有时网页的前25字可能未必能表达文章的宗旨。 网页隐私用来告知搜寻引擎该网页是否可被搜寻，并且有几个参数可作设定: noindex：不要检索。 nofollow：只检索该页，不检索该页里的链结。 noindex, nofollow：搜寻引擎的小蜘蛛到这里时，就会停止，不作任何的检索。 作者版权说明网页编码强烈建议编码设为utf-8（这个都统一用它比较方便，避免乱码等问题）。 关闭图片菜单关闭鼠标移到图片上方，出现储存图片的相关菜单。 </description>
    </item>
    
    <item>
      <title>Jquery Notification Plugin</title>
      <link>https://kissjava.cn/posts/jquery-notification-plugin/</link>
      <pubDate>Mon, 09 Jan 2012 14:41:24 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/jquery-notification-plugin/</guid>
      <description>一款简单易用的jquery通知插件。会在页面顶部show出成功，失败，警告，和信息提示框。
基本设置1，引入jquery和本插件（notification libraries） 插件下载：jquery_notification</description>
    </item>
    
    <item>
      <title>jQuery Mobile Framework 便捷指南</title>
      <link>https://kissjava.cn/posts/jquery-mobile-framework-%E4%BE%BF%E6%8D%B7%E6%8C%87%E5%8D%97/</link>
      <pubDate>Mon, 09 Jan 2012 14:18:30 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/jquery-mobile-framework-%E4%BE%BF%E6%8D%B7%E6%8C%87%E5%8D%97/</guid>
      <description>Jquery mobile framework 可以帮助你开发基于web的富移动应用程序。在这篇教程里，我们将解释一些基本的事情，比如theme selection （主题选择），library usage（库的使用），design pages（页面设计），page links（页面链接）和transition animations （过渡动画）。代码轻便，简单，灵活。它支持流行的智能手机和嵌入平台。使用它可以让你的移动应用更充实。
包含jQuery Mobile库第一步就是在你的web page头部引入jQuery Mobile的样式表和javascript库文件。
设计你的web pagejQuery Mobile可以在普通的html标签或html5标签中工作，但是你必须添加一些data属性（data-role，data-theme等等）在html标签中。 自定义列表项你可以自定义你的文章行，添加一些描述和评论数码。看看如下代码：
选择主题样式Data-theme属性是用来为特定元素选择一个主题的。Data-theme的值可以是a，b，c，d，e。（根据文档data-theme的值可以是a到z，但是还在开发中。） 链接内含页 链接内含页可以使用简单的锚标签。锚链接的href值对应于包含标签的id值。
过渡动画你可以在页面切换时使用过渡动画。Data-transition属性定义过渡效果。 About Us代码下载：jquery_mobileDemo：http://demos.9lessons.info/demos/jquery_mobile/ 原文：http://www.9lessons.info/2011/12/jquery-mobile-framework-tutorial.html</description>
    </item>
    
    <item>
      <title>贴点权限系统的部分代码</title>
      <link>https://kissjava.cn/posts/%E8%B4%B4%E7%82%B9%E6%9D%83%E9%99%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%83%A8%E5%88%86%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Sat, 24 Dec 2011 12:04:21 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E8%B4%B4%E7%82%B9%E6%9D%83%E9%99%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%83%A8%E5%88%86%E4%BB%A3%E7%A0%81/</guid>
      <description>好久未更了，凑数:( </description>
    </item>
    
    <item>
      <title>jQuery ajax方式加载页面后，被加载页面的js不能执行的问题</title>
      <link>https://kissjava.cn/posts/jquery-ajax%E6%96%B9%E5%BC%8F%E5%8A%A0%E8%BD%BD%E9%A1%B5%E9%9D%A2%E5%90%8E%E8%A2%AB%E5%8A%A0%E8%BD%BD%E9%A1%B5%E9%9D%A2%E7%9A%84js%E4%B8%8D%E8%83%BD%E6%89%A7%E8%A1%8C%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 07 Dec 2011 09:46:58 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/jquery-ajax%E6%96%B9%E5%BC%8F%E5%8A%A0%E8%BD%BD%E9%A1%B5%E9%9D%A2%E5%90%8E%E8%A2%AB%E5%8A%A0%E8%BD%BD%E9%A1%B5%E9%9D%A2%E7%9A%84js%E4%B8%8D%E8%83%BD%E6%89%A7%E8%A1%8C%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>在回调函数里注册一下事件就可以了，要么就各个函数写在被加载的页面里。 $(document).ready(function() { $(&amp;lsquo;content_div&amp;rsquo;).hide();
$(&#39;#list_user&#39;).click(function(event){ event.preventDefault(); load_user(); });  });
function load_user(){ //load page $(&amp;quot;#content_div&amp;rdquo;).load(&amp;lsquo;your page url&amp;rsquo;,function(){ //回调函数，在这里注册被加载页面需要的事件 $(&amp;quot;.deleteItem&amp;rdquo;).click(delItem); $(&amp;quot;.editItem&amp;rdquo;).click(editItem); });
function delItem(){ $.ajax({ type:&amp;quot;POST&amp;quot;, url:&amp;quot;your url&amp;quot;, dataType:&amp;quot;json&amp;quot;, success:function(data){ } }); } function editItem(){ $.ajax({ type:&amp;quot;POST&amp;quot;, url:&amp;quot;you url&amp;quot;, dataType:&amp;quot;json&amp;quot;, success:function(data){ } }); }  } 这里也有个例子供参考：http://www.crazyphper.com/?p=1167</description>
    </item>
    
    <item>
      <title>MAMP环境下，在zend studio 9 里使用xdebug调试</title>
      <link>https://kissjava.cn/posts/mamp%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%9C%A8zend-studio-9-%E9%87%8C%E4%BD%BF%E7%94%A8xdebug%E8%B0%83%E8%AF%95/</link>
      <pubDate>Sat, 03 Dec 2011 08:40:07 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/mamp%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%9C%A8zend-studio-9-%E9%87%8C%E4%BD%BF%E7%94%A8xdebug%E8%B0%83%E8%AF%95/</guid>
      <description>没有技术含量。 MAMP下面有两个版本（MAMP/bin/php），他们都有各自的php.ini 在其文件最后，都提供了xdebug块，仅有一行，“；zend_extension=&amp;hellip;”貌似去掉zend_extension前的注释就能使用了。 实际上还需要添加一些配置才能进行断点调试的。否则只是在页面上var_dump变量提供更详情的信息而已。</description>
    </item>
    
    <item>
      <title>Photoshop教程：一款清新高雅的网页布局</title>
      <link>https://kissjava.cn/posts/photoshop%E6%95%99%E7%A8%8B%E4%B8%80%E6%AC%BE%E6%B8%85%E6%96%B0%E9%AB%98%E9%9B%85%E7%9A%84%E7%BD%91%E9%A1%B5%E5%B8%83%E5%B1%80/</link>
      <pubDate>Tue, 29 Nov 2011 17:18:46 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/photoshop%E6%95%99%E7%A8%8B%E4%B8%80%E6%AC%BE%E6%B8%85%E6%96%B0%E9%AB%98%E9%9B%85%E7%9A%84%E7%BD%91%E9%A1%B5%E5%B8%83%E5%B1%80/</guid>
      <description>&lt;p&gt;本教程中，你将学习如何设计优雅并专业的网页布局，我们将运用各种photoshop技巧，依靠图形工具和图层样式等基本操作来实现此布局。作为奖励，在教程结束后附有HTML/CSS/JavaScript的网站模板，完全免费下载。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    
    <item>
      <title>CodeIgniter Ajax Request</title>
      <link>https://kissjava.cn/posts/codeigniter-ajax-request/</link>
      <pubDate>Mon, 28 Nov 2011 23:30:41 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/codeigniter-ajax-request/</guid>
      <description>先添加一行简单的代码，在ci里定义ajax的请求。
在application/config/constants.php 添加如下： // Define Ajax Request define(&amp;lsquo;IS_AJAX&amp;rsquo;, isset($_SERVER[&amp;lsquo;HTTP_X_REQUESTED_WITH&amp;rsquo;]) &amp;amp;&amp;amp; strtolower($_SERVER[&amp;lsquo;HTTP_X_REQUESTED_WITH&amp;rsquo;]) == &amp;lsquo;xmlhttprequest&amp;rsquo;); 在控制器里就可以判断是否是Ajax的请求，从而决定是否load view。 public function test(){ if(IS_AJAX){ $this-&amp;gt;load-&amp;gt;view(&amp;lsquo;ajax_test&amp;rsquo;); }else{ echo &amp;lsquo;Direct access not allowed!&#39;; // or load other view file. //$this-&amp;gt;load-&amp;gt;view(&amp;lsquo;test&amp;rsquo;); } } Codeigniter里在登录后使用Ajax的简单方式.如果没有登录，发送401。 public function secure(){ if(! $this-&amp;gt;session-&amp;gt;userdata(&amp;lsquo;logged_in&amp;rsquo;)){ header(&amp;lsquo;HTTP/1.1 401 Unauthorized); }
//other code...  } 再在js做判断跳转： $().ajaxError(function(xhr,status,err){ if(status.status == 401){ window.location.href=&amp;rsquo;/login&amp;rsquo;; } }); </description>
    </item>
    
    <item>
      <title>到当当买东西，太傻太天真</title>
      <link>https://kissjava.cn/posts/%E5%88%B0%E5%BD%93%E5%BD%93%E4%B9%B0%E4%B8%9C%E8%A5%BF%E5%A4%AA%E5%82%BB%E5%A4%AA%E5%A4%A9%E7%9C%9F/</link>
      <pubDate>Tue, 22 Nov 2011 13:20:31 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%88%B0%E5%BD%93%E5%BD%93%E4%B9%B0%E4%B8%9C%E8%A5%BF%E5%A4%AA%E5%82%BB%E5%A4%AA%E5%A4%A9%E7%9C%9F/</guid>
      <description>买了当当两本书。 现在被他们搞得心情郁闷。 付款后，足足等了9天才拿到书，9天啊！还有比这个更慢的么？我在苏州，又不是新疆等边远，交通不便的地方。 当时有活动，满100返200。结果，返券需要再买至少200元的图书才能抵用。 他大爷的，也过了退货期了，换货还要自己邮过去。 算了，希望其他朋友接受我的教训，不要再它那边浪费时间了。 其价钱不是最实惠的，送货的效率也是最差的，还有欺骗消费的行为。。 可恶！</description>
    </item>
    
    <item>
      <title>将小型、现代的产品主页由psd转换成XHTML/CSS模板 </title>
      <link>https://kissjava.cn/posts/%E5%B0%86%E5%B0%8F%E5%9E%8B%E7%8E%B0%E4%BB%A3%E7%9A%84%E4%BA%A7%E5%93%81%E4%B8%BB%E9%A1%B5%E7%94%B1psd%E8%BD%AC%E6%8D%A2%E6%88%90xhtml-css%E6%A8%A1%E6%9D%BF-/</link>
      <pubDate>Sat, 19 Nov 2011 15:31:29 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%B0%86%E5%B0%8F%E5%9E%8B%E7%8E%B0%E4%BB%A3%E7%9A%84%E4%BA%A7%E5%93%81%E4%B8%BB%E9%A1%B5%E7%94%B1psd%E8%BD%AC%E6%8D%A2%E6%88%90xhtml-css%E6%A8%A1%E6%9D%BF-/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;如果你想跳过第一部分，你可以直接在第一部分中下载源文件，下面将会需要它才能继续。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;2 在portfolio目录下面继续创建&lt;!-- raw HTML omitted --&gt;images&lt;!-- raw HTML omitted --&gt;目录用于存放图片。&lt;/p&gt;
&lt;p&gt;3 接下来创建两个空文件 &lt;!-- raw HTML omitted --&gt;styles.css&lt;!-- raw HTML omitted --&gt;和&lt;!-- raw HTML omitted --&gt;index.html&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>用Photoshop设计一个小型、现代的产品主页</title>
      <link>https://kissjava.cn/posts/%E7%94%A8photoshop%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E5%B0%8F%E5%9E%8B%E7%8E%B0%E4%BB%A3%E7%9A%84%E4%BA%A7%E5%93%81%E4%B8%BB%E9%A1%B5/</link>
      <pubDate>Sat, 19 Nov 2011 11:46:04 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E7%94%A8photoshop%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E5%B0%8F%E5%9E%8B%E7%8E%B0%E4%BB%A3%E7%9A%84%E4%BA%A7%E5%93%81%E4%B8%BB%E9%A1%B5/</guid>
      <description>这个Photoshop web设计的教程中，我们将学习设计一个整洁的具有现代气息的web站点。这是设计和HTML/CSS模板转换系列教程的第一部分。
3 使用油漆桶工具（G）用任意颜色填充头部刚才选定区域。点开图层样式对话框，用以下设置来增加一个渐变叠加效果。
完了，应该出现以下效果：
5 设定好渐变工具（G）后，从顶部的中间垂直的拖动到画布的4/1大小左右。
7 重复6的步骤，创建另外一条垂直参考线，不过这次输入1025px(175px + 850px = 1025px)。这样一个850px宽、居中的区域就做好了
9 在标题文本图层下面创建一个新图层，选定矩形选框工具（M），在头部选取出一个区域。宽度必须填满1200px，高度大概在60px左右。
10 用白色（#FFFFFF）填充（G）选定区域，然后在图层面板中设置透明度为25%。效果如下。
12 在每个菜单项之间使用矩形选框工具（M）做一个1px宽的分割线；长度跨越整个头部。用#CECECE颜色填充（G）这1px的线条。效果如下图。
13 现在，我们在每个菜单项中加入鼠标悬停动态效果（hover）。我已经给其中一个菜单项加入颜色表示鼠标悬停时的效果。使用多边形套索工具（L）按住shift，创建一个三角形，以保证每条线都是直的。
14 用#00315C这个颜色填充选定的三角形区域
16 在欢迎文本的右边将插入一个欢迎图片；我这里使用的是Six Revisions网站界面裁图。裁剪你的图片，去掉不需要的部分。图片准备好之后，通过编辑 &amp;gt; 变换 &amp;gt; 透视 改变图片的视角。
17 选择椭圆选框工具，然后在欢迎图片下方画一个椭圆。
18 用黑色（#000000）填充（G）椭圆选定区域。
19 然后设置区域图层透明度为35%。
20 然后使用滤镜 &amp;gt; 模糊 &amp;gt; 高斯模糊这个椭圆，设定模糊半径为1到2px。
21 把欢迎图片和下面的阴影再复制一份，然后把它们拖动到原图片的下面。
22 位置拖动好之后，使用高斯模糊下面的裁图，半径为1px。
24 分别使用颜色#000D19和#003461填充这两个线条。
25 选择椭圆选框工具（M）然后在分割线上面画出一个椭圆。
26 使用黑色（#000000）填充（G）选定区域，加上2到3px的高斯模糊。然后使用矩形选框工具删掉分割线上半部分，这样就剩下了半个椭圆。
27 将这两个图层合并（Ctrl+E），然后添加一个图层蒙版（点击图层面板上的“添加图层蒙版”按钮）来合并图层。
28 使用渐变工具（G）,渐变类型为对称渐变，前景色设为白色（#FFFFFF）,背景色设置黑色（#000000）。
29 拖动对称渐变，从分割线中间向两边拖动，从而产生中间向两边淡入效果。
31 使用圆角矩形工具（U）在内容文本区域的左边创建一个圆角矩形；半径设为10px（默认情况下背景是10px）。
32 路径画好之后，选择钢笔工具（P），右击矩形内部，选择建立选区。
33 设置前景色为#00315C，背景色为#001B32，然后选择渐变工具（G），渐变类型为径向渐变。
34 从顶部把渐变拖动到中间，和我们绘制背景方法相同。效果如下图。
35 现在需要给圆角矩形图层加入投影、内阴影和描边的图层样式（双击图层面板上面的图层，打开图层样式对话框）。设置如下。
36 使用多边形套索工具（L），然后在矩形上面做一个三角形的选区。</description>
    </item>
    
    <item>
      <title>[转载] 用实例详细讲解将PSD转成HTML&amp;amp;CSS</title>
      <link>https://kissjava.cn/posts/%E8%BD%AC%E8%BD%BD-%E7%94%A8%E5%AE%9E%E4%BE%8B%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3%E5%B0%86psd%E8%BD%AC%E6%88%90htmlampcss/</link>
      <pubDate>Thu, 17 Nov 2011 11:41:04 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E8%BD%AC%E8%BD%BD-%E7%94%A8%E5%AE%9E%E4%BE%8B%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3%E5%B0%86psd%E8%BD%AC%E6%88%90htmlampcss/</guid>
      <description>将PSD转成一个静态的html/css对一些朋友来说是一个很大的困扰。这个教程通过对一个完整实例的详细讲解，来教大家如何将psd转成html/css，以及JS插件的使用，制作完成的html/css页面兼容各种主流浏览器。
我们将设计页面分成基本的5个部分，每一个部分都有自己的容器wrapper和内容。基本的流程是先编写Html代码，然后通过编写CSS来还原psd设计稿。
如下图，我们只需要从这个psd文件得到4个非常基本的东西。推荐内容(featured)的背景、底部背景、欢迎文字（Welcome）、推荐图片的框（少女面部图的白色透明边框）。其余的部分我们只需要通过CSS生成或者在html里嵌入相应图片。
下图红线圈起来的地方，就是我们需要从psd获取的内容。本部分内容需要读者具备一定的Photoshop的基础知识和操作能力。
你可以借助Photoshop的切片工具或者自己手动切片，并将其保存成相应的图片格式。 为一个网站设置良好的开发环境是非常重要的，我已经创建了一个非常基本的文件夹结构来建立这个网站，下面是文件夹结构设置，也可称之为模板。
下面这个文件夹结构是由html文件、CSS文件、js等文件组成，你可以根据自己的需要调整文件夹结构。 &amp;lt;li&amp;gt;这是网站的顶级目录&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;JavaScript 文件夹&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;我们在这个教程用到的jquery插件Nivo-Slider（做推荐内容）也放在这个文件夹里&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;样式（Styles ）文件夹&amp;lt;/li&amp;gt;  &amp;lt;li&amp;gt;Images: 这是我们存放推荐内容部分的图片以及网站展示的图片的地方&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;Template: 这是存放和网页设计样式相关图片的地方，比如说底部背景图&amp;lt;/li&amp;gt;  将index.html文件放置在根目录，这个文件也是我们编写html代码的文件。 将jquery插件Nivo-Slider里面的三个文件jQuery-1.4.2.min.js和HTML5-Shiv.js以及Nivo-Slider.min.js放到Javascript文件夹。 将两个css文件，reset.css和global.css放到样式文件夹。 这样我们的文件夹结构设置就差不多完成了。
将psd转换成html/css的工作流程是先编写出html文件，随后再编写css，并加入js动态效果。
下面我们会一步步讲解html的编写，先编写出大概完整的框架，代码如下： 下面我们要开始为刚才的html文件添加细节。首先是head部分，在head部分我们要添加一些meta信息，这样有利于搜索引擎读取。
我们增加了keywords、authors、description、copyright等meta信息，并把语言编码设置为utf-8。代码如下:
现在要开始在html载入一些必须js和css的文件，以便让这些文件起作用，同时为了考虑到浏览器的兼容性，还增加了一些相应的判断条件。具体代码如下：
 &amp;lt;!-- Meta Data --&amp;gt; &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot; /&amp;gt; &amp;lt;meta name=&amp;quot;keywords&amp;quot; content=&amp;quot;photography, commercials, exposure videos, senior pictures&amp;quot;&amp;gt; &amp;lt;meta name=&amp;quot;description&amp;quot; content=&amp;quot;Your company description.&amp;quot;&amp;gt; &amp;lt;meta name=&amp;quot;author&amp;quot; content=&amp;quot;TutToaster.com/authors/CodyRobertson&amp;quot;&amp;gt; &amp;lt;meta name=&amp;quot;copyright&amp;quot; content=&amp;quot;Copyright 2010 TutToaster.com&amp;quot;&amp;gt; &amp;lt;meta name=&amp;quot;robots&amp;quot; content=&amp;quot;follow, index&amp;quot;&amp;gt; &amp;lt;!-- Site Theme Styling --&amp;gt; &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;style/reset.</description>
    </item>
    
    <item>
      <title>Postmark的邮件代发服务</title>
      <link>https://kissjava.cn/posts/postmark%E7%9A%84%E9%82%AE%E4%BB%B6%E4%BB%A3%E5%8F%91%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Thu, 03 Nov 2011 10:41:27 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/postmark%E7%9A%84%E9%82%AE%E4%BB%B6%E4%BB%A3%E5%8F%91%E6%9C%8D%E5%8A%A1/</guid>
      <description>以往都是找可以开通smtp的免费邮箱来做的。 但是限制较多，一般是发送要延时，每天限制50或100封。容易被屏蔽等等。对外贸用途的就更不行了，大都是被当成垃圾邮件处理了。 有了Postmark就不一样了。下面淡水就介绍一下。
Postmark是国外服务。可用于web线上发送mail。简单的API，简单的操作，零维护，比较方便。
问Postmark官方网站：http://postmarkapp.com
点击“sign up” 进入注册页：
Full Name ： //这里填入你的全名。 Email ： //你的电子邮件 Password ： //密码 Password again ： //再次输入密码 Time Zone ：//时区，选+8的都可以。。
点击下面的“Create Account” 提交。
完成后提示： Congratulations, you have signed up successfully! Unfortunately, you have not setup any servers yet.
意思是，成功注册鸟，但是没有设置任何服务器。
接下来，我们就添加一个服务器。点击“Setup a New Server” 跳转到 Add a new server 页面
点击页面最下方的“Next Step”
“Enter a name for your server ” 为你的服务器命名，再选一个颜色。然后继续点击页面最下方的“Next Step”
经过一系列的验证之后，通过！
点击“Done! Now add a sender signature” 就是说，可以了，现在添加一个签名</description>
    </item>
    
    <item>
      <title>codeigniter2中使用simpletest做单元测试</title>
      <link>https://kissjava.cn/posts/codeigniter2%E4%B8%AD%E4%BD%BF%E7%94%A8simpletest%E5%81%9A%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Sat, 29 Oct 2011 12:26:11 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/codeigniter2%E4%B8%AD%E4%BD%BF%E7%94%A8simpletest%E5%81%9A%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</guid>
      <description>接近年底，人手紧张。为了保证进度的同时还要保证质量，于是就单元测试就出现在了淡水的视野。
由于采用codeigniter2，所以首选是内置的unit_test类。但是实在是比较的简单，所以就看中了simpletest。 但是ci+simpletest整合起来，网上可用的并不多。支持1.6/1.7的倒是有。
最后才用呢了codeigniter—simpletest，但是默认在php5.2下，并不能运行。做了些调整，嗯。记录一下。
##安装 unit_test.php文件应该放在CodeIgniter的根目录，也就是index.php相同的地方 打开这个文件,并且在文件顶部改变一下以适合你的路径。 tests目录可以放到任何你想放的地方,但放在根目录比较好。 所有测试文件需要命名成“test_name_folder.php”的格式。例如: test_whatever_bug.php test_string_helper.php test_auth_library.php test_core_model.php 增加了一个完整的simpletest下载，仅定制了“simpletest/extensions/my_reporter.php”。
　##注: 在目录“tests”里,包含了两个测试文件的例子。test_users_model。php并能运行，因为你的程序里没有对应的user model。它只是一个提供的指导。 注意,simpletest版本不支持php 5.3
下面的修改很重要！！！ 淡水的本机测试无法成功，查看日志后，淡水做了如下修改： 1,unit_test.php 的32-36行；的构造函数: public function __construct($lable=false) { parent::__construct($lable); $this-&amp;gt;_ci =&amp;amp; get_instance(); }
2,test/tests/test_gui.php增加编码支持： 3,test_123_bug.php的构造函数里，调用父类构造时，添加了测试主题。方便显示。可以忽视。
4,test_user_model.php的构造改用php5的方式调用： public function __construct() { parent::__construct(&amp;lsquo;Users Model&amp;rsquo;); $this-&amp;gt;load-&amp;gt;model(&amp;lsquo;users/users_model&amp;rsquo;); $this-&amp;gt;rand = rand(500,15000); }
5,另外还增加了test_homepage.php的demo，来演示如何测试界面。</description>
    </item>
    
    <item>
      <title>Codeigniter里的单元测试</title>
      <link>https://kissjava.cn/posts/codeigniter%E9%87%8C%E7%9A%84%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Thu, 27 Oct 2011 12:49:57 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/codeigniter%E9%87%8C%E7%9A%84%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</guid>
      <description>测试驱动开发已经提出好久了。在web领域估计国内采用的不多。 其实单元测试也是很好用的东西，确实可以提高开发人员的效率。 淡水用codeigniter举例说明一下。 </description>
    </item>
    
    <item>
      <title>textmate 常用快捷键</title>
      <link>https://kissjava.cn/posts/textmate-%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <pubDate>Thu, 13 Oct 2011 16:36:19 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/textmate-%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <description>ctrl + cmd + ^ 整行上移 ctrl + cmd + v 整行下移 ctrl + shift + k 整行删除 ctrl + shift + d 复制所在整行 ctrl + shift + t 查看TODO
alt + &amp;gt; 光标右移一个单词 alt + &amp;lt; 光标左移一个单词
esc 自动补全
F1 开关当前方法块</description>
    </item>
    
    <item>
      <title>Codeigniter里的无刷新上传</title>
      <link>https://kissjava.cn/posts/codeigniter%E9%87%8C%E7%9A%84%E6%97%A0%E5%88%B7%E6%96%B0%E4%B8%8A%E4%BC%A0/</link>
      <pubDate>Thu, 15 Sep 2011 14:31:47 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/codeigniter%E9%87%8C%E7%9A%84%E6%97%A0%E5%88%B7%E6%96%B0%E4%B8%8A%E4%BC%A0/</guid>
      <description>好久没有更新了，写点吧算是翻译吧，纯原创没空啊XD Codeigniter还是很好用的，淡水一直很推崇。说是codeigniter里的无刷新上传吧，fashion 一点的说法就是利用AJAX技术上传。其中用到了Jquery和 AjaxFileUpload 。
先建个表 CREATE TABLE files ( id int NOT NULL AUTO_INCREMENT PRIMARY KEY, filename varchar(255) NOT NULL, title varchar(100) NOT NULL ); 文件的目录结构如下：
第一步，建立表单看上去就一个title文本字段，一个文件框，一个提交按钮，还有一个files的div。 控制器部分 首先，我们要建一个上传的表单和一个upload的Controller。在index方法里渲出upload的视图。如下： class Upload extends CI_Controller { public function __construct() { parent::__construct(); $this-&amp;gt;load-&amp;gt;model(&amp;lsquo;files_model&amp;rsquo;); $this-&amp;gt;load-&amp;gt;database(); $this-&amp;gt;load-&amp;gt;helper(&amp;lsquo;url&amp;rsquo;); } public function index() { $this-&amp;gt;load-&amp;gt;view(&amp;lsquo;upload&amp;rsquo;); } } 我们已经在构造里加载了files_model，所以可以使用files_model里的方法。
建立表单视图视图文件upload.php,包含了我们的上传表单。 &amp;lt;!doctype html&amp;gt;
一些简单的css在css下建立style.css h1, h2 { font-family: Arial, sans-serif; font-size: 25px; } h2 { font-size: 20px; } label { font-family: Verdana, sans-serif; font-size: 12px; display: block; } input { padding: 3px 5px; width: 250px; margin: 0 0 10px; } input[type=&amp;quot;file&amp;rdquo;] { padding-left: 0; } input[type=&amp;quot;submit&amp;rdquo;] { width: auto; } #files { font-family: Verdana, sans-serif; font-size: 11px; } #files strong { font-size: 13px; } #files a { float: right; margin: 0 0 5px 10px; } #files ul { list-style: none; padding-left: 0; } #files li { width: 280px; font-size: 12px; padding: 5px 0; border-bottom: 1px solid #CCC; } 第二步，Javascript在js下建立site.</description>
    </item>
    
    <item>
      <title>Mysql的随机读取</title>
      <link>https://kissjava.cn/posts/mysql%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%AF%BB%E5%8F%96/</link>
      <pubDate>Sun, 19 Jun 2011 09:56:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/mysql%E7%9A%84%E9%9A%8F%E6%9C%BA%E8%AF%BB%E5%8F%96/</guid>
      <description>随机读取数据库记录，搜索发现很多人都使用 order by rand() 来达到该目的，这是mysql提供的功能。但是实际上存在非常严重的性能问题。 如果表里记录不多，偶尔用一下也可以。但是如果数据多的话，就会凸显出查询的性能问题。
随机查询5条记录：
在数十万记录的表里，这样的查询要好几秒的时间。下面采用JOIN的方式改进一下：
这样得到连续的5条记录。要不联续的记录，可以连续查询几次，每次limit 1条。这淡水比较推荐，SQL语句比较清晰，效率也不错。
还有，可以这样的：
其他更复杂的实现，淡水无视之。
update：2011年8月24日 15:03:26
如果随机抓取，并且要分页呢？
在表里增加一个sortbyrand字段。要随机排序時只需一个简单的sql。
例如记录总数是10000 update table_name set sortbyrand=FLOOR(RAND()*10000); 抓取只需要order by sortbyrand就可以了，其实这个是最不耗脑子的。</description>
    </item>
    
    <item>
      <title>swfupload在codeigniter中的应用</title>
      <link>https://kissjava.cn/posts/swfupload%E5%9C%A8codeigniter%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/</link>
      <pubDate>Wed, 15 Jun 2011 12:48:30 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/swfupload%E5%9C%A8codeigniter%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/</guid>
      <description>应该中需要批量上传，google到了swfupload，期间碰到一点小问题跟大家分享一下。
第一个问题是无法上传，参照demo，已经修改了上传字段为Filedata，代码如下：
$this-&amp;gt;upload-&amp;gt;do_upload(&amp;lsquo;Filedata&amp;rsquo;)但是问题依旧。google，baidu一起找，在codeigniter的wiki里找到方案，在config/mimes.php里
搞定。
后来又碰到了第二个问题，在ie6下，上传后无法保存，一刷新才知道被踢出了，登录失效了。google百度之，在sina的一个blog里找到了方法，而且第一个问题他也碰到了。
这个问题，他的原文如下：
问题2：带有session验证的后台，会导致上传后退出登陆的状况回答： 一般方法1:swfuplaod在上传时，会新开一个进程，和原来的进程不一致，要解决这个问题，需要指定session_id，然后在登录页面判断，如果有post过来的session_id，那么就用函数session_id( $_POST[&amp;lsquo;PHP_SESSIONID&amp;rsquo;])指定一下。上传页的JS里面，可以获取当前的SESSION_ID的。（淡水注：适合普通的使用php自带session存储登录状态的情况；codeigniter不一样的。）
ci中的状态：一般情况下，因为诸如uploadify,swfupload采用的都是flash客户端，这样它们产生的useragent与用户使用浏览器的user-agent必然不同。所以，虽然用户登录了你的系统产生了一个session，但是当触发上传程序时会产生另一个session（在上述useragent选项开启的情况下）。
所以，不是session丢失了，而是当你上传文件时，CI为uploadify另外创建了一个session。
解决方法1：将$config[&amp;lsquo;sess_match_useragent&amp;rsquo;]设置成FALSE，重试。 解决方法2（推荐）：为了安全起见，不建议使用第1条解决方案，而是使用另外的验证方法，比如在每次上传时，在url中附加一个token与服务器端的token比对（比如这个token可以是用户名的hash值）。具体实现方法请参考stblog的上传验证实现（使用的是swfupload）。~~~~~~我尝试了这个方法，重点在于，如果你的session类是放在autoload里自动加载的，那么，这样肯定是失败的，解决办法是，新建一个类，例如MY_Controller继承于CI_Controller,用于后台登陆，需要权限判断后台处理，讲upload类继承于CI_Controller这样的话，就不经过session类的验证了，当然上传还是得验证，不过可以用post_params传值进行验证：
示例: class Upload extends CI_Controller { //code&amp;hellip; } &amp;lt;code lang=&#39;php&#39;&amp;gt; class client_photo extends MY_Controller { function __construct() { parent::__construct(); } function index() { //code... } } &amp;lt;/code&amp;gt; </description>
    </item>
    
    <item>
      <title>Git安装使用手记</title>
      <link>https://kissjava.cn/posts/git%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E6%89%8B%E8%AE%B0/</link>
      <pubDate>Fri, 03 Jun 2011 14:27:28 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/git%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E6%89%8B%E8%AE%B0/</guid>
      <description>这篇主要是记录我在 Windows 平台安装 Git 的过程和git的简单使用。
先描述一下安装的需求：
· 用户端和服务器端的操作系统都是 Windows。· 用户端要能透过 HTTP 的方式存取版本库。· 无论是取出档案还是送交档案，都需要验证身分（输入账号密码）。
底下是安装步骤：
Step 1: 安装 Git for Windows在 Windows 环境使用 Git，可以用 msysgit (Git for Windows)，我安装的版本是 v1.7.4。装好之后，程序集里面会多出一个选单：Git，里面有两个程序：Git GUI 和 Git Bash。前者是图形操作界面，后者是命令列视窗。Git 的预设安装目录是 c:Program FilesGit。由于我要让用户端可透过 HTTP 协定来存取版本库，因此还要把 Git 安装目录下的 binlibiconv2.dll 复制到安装目录下的 libexecgit-core 底下。少了这个动作，将来透过 HTTP 存取版本库时，就会出现 HTTP 500 Internal Server Error 的讯息。如下图所示：Step 2: 安装 Apache HTTP Server欲提供 HTTP 的存取方式，可以利用Apache Http Server。我安装的版本是 Apache 2.2.19（包含 OpenSSL）。安装好 Apache 之后，修改 httpd.conf，令它使用 8080 port，以免和 IIS 抢 80 port。接下来，一样是修改 httpd.</description>
    </item>
    
    <item>
      <title>为何改用Git</title>
      <link>https://kissjava.cn/posts/%E4%B8%BA%E4%BD%95%E6%94%B9%E7%94%A8git/</link>
      <pubDate>Fri, 03 Jun 2011 13:44:31 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E4%B8%BA%E4%BD%95%E6%94%B9%E7%94%A8git/</guid>
      <description>Subversion 用得好好的，为什么要改用 Git 呢？记得刚开始用 Subversion 时，它在 Windows 平台上的工具也还不是那么方便，光是安装就要手动设定一堆东西。现在，Subversion 服务已经几乎是点下一步、下一步的方式就能安装完成了，非常方便。而且，现有的软件项目、写作等工作，也都在是用 Subversion 来管理版本。在已经投资不少学习成本、且用得很习惯的情况下，要换另外一套版本管理系统总是会有一些阻力。更顺畅的工作流程其实我 lag 很久了。没有改用 Git，主要就是因为习惯问题，以及考虑到已经付出的学习成本，和没有一个让我觉得非换不可的理由。但是最近由于经常使用笔记本电脑，而且网络经常碰到无法连线的状态（有时候是笔电所在的环境无法连网，有时候是服务器离线），以至于有些本机的修改成果无法立即 commit 成一个修订版次。这个时候，如果我还要继续修改别的东西（例如，修正另一个 bug），往往就会跟刚才的修改混在一起 commit，而且是要等到可连上网络时才能 commit。这样的时间差，很容易造成一些遗漏或混乱，无形中就增加了成本和风险。我希望就算无法连接服务器，还是能够依目前的进度先 commit，并且继续做后续的修改，这样我就不用在那里空等，也不用担心自己等到网络可连线时，已经忘记那些档案的 commit 先后次序。Git 可以做到这点。快速Git 之所以反应迅速，主要是因为分散式架构的缘故。在此架构下，版本库的完整历史全都在本机上。因此，就算要进行历史版本比对，也都是在本机进行，速度当然比需要实时连线的 VCS 来得快。版本库毁损的风险较低同样是基于分散式架构的缘故，Git 的版本库会在各用户端机器上存在多个完整的复本，因此就算服务器上的版本库损坏了，还是可以利用其他用户端机器的复本轻易复原，大幅降低版本库备份的成本和档案遗失的风险。弹性的本地分支在使用 Subversion 时，分支其实就是把档案复制到另一个文件夹，然后在不同的分支（文件夹）之间切换。在试过 Subversion 的分支之后，我还是有怕怕的感觉，因而倾向尽量少用。因为我觉得自己有一天一定会不小心把分支和主线给弄混了，以至于出现版本错乱的情形。我还没有实验 Git 的分支功能，但从现有的一些技术文件看来，Git 分支的一个主要优点，就是它可以完全在本机进行。比如说，你可以在本机建立几个实验性质的分支，等到你觉得时机成熟了，便可以将特定分支推送至主机，分享给别人。或者，有些实验失败的分支，也可以直接在本机砍掉，而其他开发人员根本不知道曾经有这些分支。其他优点个人是觉得 Git 还有一个小地方比 Subversion 好：它的版本库目录结构。当我从远端 Subversion 服务器 checkout 一个版本库到本机时，在本机的工作目录下，每一层子目录都会有一个 .svn 的资料夹，作为版本控制之用。Git 不是这样。当我从远端服务器 clone 一个 Git 版本库到本机时，就只有该版本库复本的根目录底下会有一个 .git 目录，其他子目录则很「干净」。此外，它的档案忽略清单只要由 .git 目录下的一个名为 .gitignore 的档案就能完全控制。虽然是不太起眼的差异，我却觉得蛮好的。大概是有点洁癖的缘故吧 XD原文需要翻墙，哎http://huan-lin.blogspot.com/2011/05/why-git.html</description>
    </item>
    
    <item>
      <title>eclipse pdt 注释快捷键失效的解决方法</title>
      <link>https://kissjava.cn/posts/eclipse-pdt-%E6%B3%A8%E9%87%8A%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%B1%E6%95%88%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</link>
      <pubDate>Fri, 13 May 2011 15:31:28 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/eclipse-pdt-%E6%B3%A8%E9%87%8A%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%B1%E6%95%88%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</guid>
      <description>重装win7 64位系统后，下了64为的java jre和64位的eclipse pdt。
淡水突然发现写代码时，无法注释了。还以为是64位的谷歌输入法搞的鬼。卸载输入法后还是不行。
google之。原来是新版eclipse的bug。
到 http://sourceforge.jp/projects/pdt-tools/releases/51060
下载：org.eclipse.php.ui_2.2.1.v20101001-2300.jar
复制到你的eclipse的plugins目录。
eclipse.exe -clean 运行就可以了。
浪费了不少时间。记录下来，希望遇到同意问题的朋友可以看到。</description>
    </item>
    
    <item>
      <title>五一快到了，唠叨两句</title>
      <link>https://kissjava.cn/posts/%E4%BA%94%E4%B8%80%E5%BF%AB%E5%88%B0%E4%BA%86%E5%94%A0%E5%8F%A8%E4%B8%A4%E5%8F%A5/</link>
      <pubDate>Fri, 29 Apr 2011 10:19:40 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E4%BA%94%E4%B8%80%E5%BF%AB%E5%88%B0%E4%BA%86%E5%94%A0%E5%8F%A8%E4%B8%A4%E5%8F%A5/</guid>
      <description>去苏州的太湖牛仔度假村玩乐两天。折腾得够呛。
ubuntu11.04出了，嗯安装更加简单来，win7+ubuntu11.04，ubuntu会帮你update-grub，直接搞定双系统的启动菜单。
ci2也用得比较舒服，配置一下在eclipse里代码提示还是不错的。
手头两个案子都接近尾声。andirod开发还算没怎么看，python也还是没有进度。这样的学习进度，你伤不起啊伤不起。
最后祝大家五一玩得开心。</description>
    </item>
    
    <item>
      <title>Jquery UI dialog 详解 (中文)转</title>
      <link>https://kissjava.cn/posts/jquery-ui-dialog-%E8%AF%A6%E8%A7%A3-%E4%B8%AD%E6%96%87%E8%BD%AC/</link>
      <pubDate>Wed, 06 Apr 2011 15:02:44 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/jquery-ui-dialog-%E8%AF%A6%E8%A7%A3-%E4%B8%AD%E6%96%87%E8%BD%AC/</guid>
      <description>1.11 autoOpen ，这个属性为true的时候dialog被调用的时候自动打开dialog窗口。当属性为false的时候，一开始隐藏窗口，知道.dialog(&amp;ldquo;open&amp;rdquo;)的时候才弹出dialog窗口。默认为：true。
1.12 初始化例：请注意，$(&#39;.selector&amp;rsquo;)是dialog 的类名，在本例中.selector=#dialoag,以后不再说明。
$(&#39;.selector&amp;rsquo;).dialog({ autoOpen: false });
1.13 初始化后，得到和设置此属性例：
//获得
var autoOpen = $(&#39;.selector&amp;rsquo;).dialog(&amp;lsquo;option&amp;rsquo;, &amp;lsquo;autoOpen&amp;rsquo;);
//设置
$(&#39;.selector&amp;rsquo;).dialog(&amp;lsquo;option&amp;rsquo;, &amp;lsquo;autoOpen&amp;rsquo;, false);
1.21 bgiframe 默认为false ，When true, the bgiframe plugin will be used, to fix the issue in IE6 where select boxes show on top of other elements, regardless of zIndex. Requires including the bgiframe plugin. Future versions may not require a separate plugin.
在IE6下，让后面那个灰屏盖住select。
1.22 初始化例：
$(&#39;.selector&amp;rsquo;).dialog({ bgiframe: true });</description>
    </item>
    
    <item>
      <title>jquery ui according详解(中文)转</title>
      <link>https://kissjava.cn/posts/jquery-ui-according%E8%AF%A6%E8%A7%A3%E4%B8%AD%E6%96%87%E8%BD%AC/</link>
      <pubDate>Wed, 06 Apr 2011 15:02:27 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/jquery-ui-according%E8%AF%A6%E8%A7%A3%E4%B8%AD%E6%96%87%E8%BD%AC/</guid>
      <description></description>
    </item>
    
    <item>
      <title>jquery ui tabs详解(中文)转</title>
      <link>https://kissjava.cn/posts/jquery-ui-tabs%E8%AF%A6%E8%A7%A3%E4%B8%AD%E6%96%87%E8%BD%AC/</link>
      <pubDate>Wed, 06 Apr 2011 15:01:42 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/jquery-ui-tabs%E8%AF%A6%E8%A7%A3%E4%B8%AD%E6%96%87%E8%BD%AC/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CodeIgniter2 Model 支持单例</title>
      <link>https://kissjava.cn/posts/codeigniter2-model-%E6%94%AF%E6%8C%81%E5%8D%95%E4%BE%8B/</link>
      <pubDate>Sat, 02 Apr 2011 17:30:35 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/codeigniter2-model-%E6%94%AF%E6%8C%81%E5%8D%95%E4%BE%8B/</guid>
      <description>CodeIgniter 2真的很给力啊。现在模型支持load其他模型了。方便很多。代码说话：</description>
    </item>
    
    <item>
      <title>CodeIgniter Reactor&#39;s Caching Drivers</title>
      <link>https://kissjava.cn/posts/codeigniter-reactors-caching-drivers/</link>
      <pubDate>Sat, 02 Apr 2011 17:18:51 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/codeigniter-reactors-caching-drivers/</guid>
      <description>Before Reactordropped, I snuck in some caching drivers(Docs Link) that Pascalhad been tossing back and forth for several months. I&amp;rsquo;ve seen a few people talk about them, but I think they are still generally unknown so I want to give a brief intro on how to use them.
At this time, there are drivers available for APC, Memcached, file-based caching, and a dummy cache. If you haven&amp;rsquo;t already, head over to BitBucketand get cloning or forking.</description>
    </item>
    
    <item>
      <title>FirePHP,给力的调试工具</title>
      <link>https://kissjava.cn/posts/firephp%E7%BB%99%E5%8A%9B%E7%9A%84%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Tue, 25 Jan 2011 14:29:37 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/firephp%E7%BB%99%E5%8A%9B%E7%9A%84%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7/</guid>
      <description>&lt;p&gt;FirePHP功能就是将调试信息输出到http头信息上，不影响页面显示；
这样就特别适用ajax的调试，也适用线上产品不停止运行的调试。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;FirePHPCore的lib包里有四个文件，后缀为php4的明显是适用php4的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Zend Framework安裝</title>
      <link>https://kissjava.cn/posts/zend-framework%E5%AE%89%E8%A3%9D/</link>
      <pubDate>Thu, 13 Jan 2011 22:59:27 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/zend-framework%E5%AE%89%E8%A3%9D/</guid>
      <description>台湾同胞的入门笔记写得太好了，忍不住再贴一个。 这个是Zend Framework 1.0.1但是还是有很大的参考价值的。 環境： Windows XP Professional(SP2) Appserv(Apache 2.2.4, PHP/5.2.3, MySQL 5.0.45) Zend Framework 1.0.1(2007-07-30)
=========== 一、基本設定：   設定mod_rewrite 編輯httpd.conf #LoadModule rewrite_module modules/mod_rewrite.so 如果前面的”#”字在的話，就把它拿掉吧 (mod_rewrite的詳細資料，可參考apache網站)
  設定include_path 設定include path之目的，是為了方便在include類別時，省去輸入長長一串位置的時間 a) 可直接修改php.ini之設定 b) 或是於程式中動態加入set_include_path 參考網址：http://tw2.php.net/set_include_path
  設定httpd.conf之document root 請參考下一段之目錄架構，將document root指向/html
  以上設定完之後，請重新啟動Apache，並建議檢視一下error log 看是否有錯誤的地方
================== 二、Zend Framework設定 1.基本目錄架構 |-/application -|-/controllers (MVC之C) -|-/models (MVC之M) -|-/views (MVC之V) –|-/filters –|-/helpers –|-/scripts |-/html -|-/images (存放影像檔案) -|-/scripts (存放script檔) -|-/styles (存放CSS檔) -|-.htaccess (配合url rewrite之檔案) -|-index.</description>
    </item>
    
    <item>
      <title>Doctrine, the PHP ORM Framework</title>
      <link>https://kissjava.cn/posts/doctrine-the-php-orm-framework/</link>
      <pubDate>Thu, 13 Jan 2011 22:38:33 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/doctrine-the-php-orm-framework/</guid>
      <description>Doctrine是 一個在PHP上的資料庫ORM(Object Relational Mapper)，最近手邊的幾個小案子透過Doctrine來實作。ORM的確是讓開發者少寫不少的SQL查詢，但相對的效能一定是比簡單的SQL要來得 差，我想魚跟熊掌要兼得並不容易，便利跟效能之間總有個天平讓開發者來自已調整，所以ORM好不好用就見人見志囉。
一、前置作業：
  系統需求 依官網上面提到的，Doctrine需要PHP 5.2.3以上的版本，除此之外就不用再另外安裝其它的套件或函式庫即可運作，不過如果要使用PDO(PHP Data Object)的話，則可能會需要另外安裝PDO驅動程式。
  檢查PDO驅動程式 如果你要用PDO的話，想要知道你的主機上是不是有安裝你所需要的PDO驅動程式，只要一行簡單的PHP程式放到主機上執行：   二、取得原始檔
有幾種取得Doctrine的方法：
 SVN(Subversion) Pear Zip-package  如果你熟悉SVN的操作的話，這應該是最簡單使用的了。如果你只是想試玩一下Doctrine的功能的話，你可以下載官網上打包好的Sandbox套件來玩。我個人比較喜歡官方打包好的壓縮檔
什麼是Sandbox套件? Doctrine網站的下載區有貼心的打包了免設定的方便套件，直接下載、解壓縮後，就可以拿來試玩了。這裡面包括了一些範例schema檔案以及可以匯入的資料檔，讓你可以很快的就可以開始體驗Doctrine的優點。
三、開始第一個專案 在Doctrine裡，Doctrine_Record是最基本的元件。資料庫裡的每個資料表都會有一個對應的Doctrine_Record類別。這個類別是以Active Record這個設計模式實作的，所以在其它語言像是在ROR(Ruby on Rails)上才看得到方便功能，在Doctrine裡也可以使用到了，即使是複雜的資料庫操作，透過這個類別也可以簡單的完成。
在 使用Doctrine_Record來建立資料表時，如果沒有特別指定Primary Key的話，Doctrine會自動幫你加一個叫做”id”的主索引欄位(自動編號)。接下來你需要做的事情，就是建立一個繼承自 Doctrine_Record類別的子類別，然後透過setTableDefinition()以及hasColumn()就可以來建立你的資料表。
為 了單純一些，我們這裡只先用一個表格做範例(多個表格之間的關聯性操作，例如一對一、一對多、多對多等關係，再另外開幾篇再寫)。假設我們現在要建立一個 叫做”member”的會員資料表，這個資料表裡會有id、username、password以及建立日期這幾個欄位，我們可以這樣做：
檔案：models/Member.php </description>
    </item>
    
    <item>
      <title>班扎古鲁白玛的沉默</title>
      <link>https://kissjava.cn/posts/%E7%8F%AD%E6%89%8E%E5%8F%A4%E9%B2%81%E7%99%BD%E7%8E%9B%E7%9A%84%E6%B2%89%E9%BB%98/</link>
      <pubDate>Wed, 12 Jan 2011 19:25:53 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E7%8F%AD%E6%89%8E%E5%8F%A4%E9%B2%81%E7%99%BD%E7%8E%9B%E7%9A%84%E6%B2%89%E9%BB%98/</guid>
      <description>班扎古鲁白玛的沉默
——扎西拉姆·多多
你见，或者不见我 我就在那里 不悲不喜
你念，或者不念我 情就在那里 不来不去
你爱，或者不爱我 爱就在那里 不增不减
你跟，或者不跟我 我的手就在你手里 不舍不弃
来我的怀里 或者 让我住进你的心里
默然 相爱 寂静 欢喜
http://blog.sina.com.cn/s/blog_53cd30c90100l2k5.html
“班扎古鲁白玛”其实是梵文的音译，班扎，就是Vadjra，是“金刚”的意思；古鲁，就是：Guru，是“上师”；白玛，就是pema,是“莲花”的意思。“班扎古鲁白玛”：金刚上师白莲花，也就是莲花生大师（第一个将佛法传入西藏的人，被认为是第二佛陀）。</description>
    </item>
    
    <item>
      <title>win7，ubuntu10.10双系统，修复grub</title>
      <link>https://kissjava.cn/posts/win7ubuntu10.10%E5%8F%8C%E7%B3%BB%E7%BB%9F%E4%BF%AE%E5%A4%8Dgrub/</link>
      <pubDate>Wed, 12 Jan 2011 00:15:12 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/win7ubuntu10.10%E5%8F%8C%E7%B3%BB%E7%BB%9F%E4%BF%AE%E5%A4%8Dgrub/</guid>
      <description>为什么要修复？因为啃黑苹果失败鸟。
为什么要记录？网上大都不成功。
我的跟分区在sda9，boot独立分区在sda10；可以用fdisk -l 看。
 sudo -i  mkdir /home/ubuntu/mnt
mkdir /home/ubuntu/mnt/boot
mount /dev/sda9 /home/ubuntu/mnt  解释：mount指令是挂载分区，后面的/home/ubuntu/mnt可以自己更改位置，此处是挂 载根分区
 mount /dev/sda10 /home/ubuntu/mnt/boot 这一步是有给 /boot 单独分区的命令，若没单独分区跳过这步
  grub-install &amp;ndash;root-directory=/home/ubuntu/mnt /dev/sda
  重启.grub回来了。
  </description>
    </item>
    
    <item>
      <title>Lazy initialization 延迟加载</title>
      <link>https://kissjava.cn/posts/lazy-initialization-%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD/</link>
      <pubDate>Mon, 27 Dec 2010 14:06:45 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/lazy-initialization-%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD/</guid>
      <description>先贴代码，再做说明 </description>
    </item>
    
    <item>
      <title>Ubuntu10.10安装NVIDIA显卡驱动</title>
      <link>https://kissjava.cn/posts/ubuntu10.10%E5%AE%89%E8%A3%85nvidia%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8/</link>
      <pubDate>Thu, 16 Dec 2010 20:53:09 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/ubuntu10.10%E5%AE%89%E8%A3%85nvidia%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8/</guid>
      <description>去官方驱动下载页面：http://www.nvidia.cn/Download/index.aspx?lang=cn然后找到你自己的显卡型号，留意一下版本号，版本号只要在256版以上就不用安装编译环境了
使用右键另存为下载，放到主文件下。
打开终端：
如果你下载的显卡驱动版本在256版以下的就输入：
sudo apt-get install build-essential pkg-config xserver-xorg-dev linux-headers-uname -r否则直接输入：
sudo /etc/init.d/gdm stop
回车，然后输入密码，回车停止gdm。
再按：Ctrl+Alt+F1
输入你的系统帐号回车，然后输入密码回车，登录tty1
登录成功后输入：
sudo sh NVIDIA-Linux.260.xxx.run
然后输入密码来打开驱动包，会出现使用协议，并询问你接不接收协议，当然Accept。
接下来可能会出现，预安装脚本安装失败，是否继续安装?或是已经安装过了，是否重新安装等等。。
点Yes继续,这时会出现进度条。100%后会询问：是否更新X配置文件，选择更新，或手动编辑X配置文件以采用NVIDIA X驱动程序，或者运行 nvidia-xconfig
这里推荐点Yes，不然需要自己编辑配置文件，到这里安装就完成。startx或是按Ctrl+Alt+Del重启电脑就可以了。</description>
    </item>
    
    <item>
      <title>破解被保护的Excel文档</title>
      <link>https://kissjava.cn/posts/%E7%A0%B4%E8%A7%A3%E8%A2%AB%E4%BF%9D%E6%8A%A4%E7%9A%84excel%E6%96%87%E6%A1%A3/</link>
      <pubDate>Wed, 01 Dec 2010 20:23:02 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E7%A0%B4%E8%A7%A3%E8%A2%AB%E4%BF%9D%E6%8A%A4%E7%9A%84excel%E6%96%87%E6%A1%A3/</guid>
      <description></description>
    </item>
    
    <item>
      <title>宁海，浙东大峡谷2日游</title>
      <link>https://kissjava.cn/posts/%E5%AE%81%E6%B5%B7%E6%B5%99%E4%B8%9C%E5%A4%A7%E5%B3%A1%E8%B0%B72%E6%97%A5%E6%B8%B8/</link>
      <pubDate>Wed, 27 Oct 2010 09:55:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%AE%81%E6%B5%B7%E6%B5%99%E4%B8%9C%E5%A4%A7%E5%B3%A1%E8%B0%B72%E6%97%A5%E6%B8%B8/</guid>
      <description></description>
    </item>
    
    <item>
      <title>AVG free edition 2011</title>
      <link>https://kissjava.cn/posts/avg-free-edition-2011/</link>
      <pubDate>Thu, 14 Oct 2010 09:45:37 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/avg-free-edition-2011/</guid>
      <description>装上了AVG free edition 2011，好些比9漂亮了一些。上图：
去除安装文件夹下的 avgfree_zh.mht , avgmwdef_zh.mht , avgresf.dll;这样就更好用了，其他非中文系统，注意选择自己对应的语言版本。嗯，不解释。</description>
    </item>
    
    <item>
      <title>Access Control Library for Codeigniter</title>
      <link>https://kissjava.cn/posts/access-control-library-for-codeigniter/</link>
      <pubDate>Thu, 19 Aug 2010 20:21:54 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/access-control-library-for-codeigniter/</guid>
      <description>先检讨。比较浮躁，先前帖的Codeigniter ACL library有较大的bug。配置和使用方法也没有说太多。今天正好用到，调试了一下。重新发布。嗯，这个也是淡水在ci在官网论坛上挖到的。还有个autoacl的，也是基于这个修改的。不过淡水觉得太耦合了，而且繁琐了。还是没有采用。
先来library： </description>
    </item>
    
    <item>
      <title>li水平居中css实现</title>
      <link>https://kissjava.cn/posts/li%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%ADcss%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Thu, 05 Aug 2010 20:26:42 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/li%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%ADcss%E5%AE%9E%E7%8E%B0/</guid>
      <description>其实这个是凑数来的。只是好久没动博客了，实在是说不过去了，丫的太懒了。其实是淡水没有时间（好假的借口）。
闲话不多说了。现在一般都是用li做菜单了，淡水也就从了。li的float:left,可以了变成横向的菜单了。但是它们怎么跑到区域里居中显示呢（一般是页脚的链接是居中的）？li的display:inline;就可以了，float：left都不要了，自己跑一行去了。
#main_footer{ list-style:none; text-align:center; } #main_footer li{ display:inline; }
&amp;lt;ul id=&amp;quot;main_footer&amp;rdquo;&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;rdquo;#&amp;quot;&amp;gt;公司介绍&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;rdquo;#&amp;quot;&amp;gt;我们的创新&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;rdquo;#&amp;quot;&amp;gt;工作理念&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;rdquo;#&amp;quot;&amp;gt;价值观&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;rdquo;#&amp;quot;&amp;gt;联系我们&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt;
其实淡水还是在用table布局，为啥，方便啊。不过也少了:)
哎，div啊。。。</description>
    </item>
    
    <item>
      <title>mysql查询今天、昨天、7天、近30天、本月、上一月 数据</title>
      <link>https://kissjava.cn/posts/mysql%E6%9F%A5%E8%AF%A2%E4%BB%8A%E5%A4%A9%E6%98%A8%E5%A4%A97%E5%A4%A9%E8%BF%9130%E5%A4%A9%E6%9C%AC%E6%9C%88%E4%B8%8A%E4%B8%80%E6%9C%88-%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Sat, 26 Jun 2010 19:24:40 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/mysql%E6%9F%A5%E8%AF%A2%E4%BB%8A%E5%A4%A9%E6%98%A8%E5%A4%A97%E5%A4%A9%E8%BF%9130%E5%A4%A9%E6%9C%AC%E6%9C%88%E4%B8%8A%E4%B8%80%E6%9C%88-%E6%95%B0%E6%8D%AE/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Install ‘xdebug’ PHP extension for XAMPP on Ubuntu10.04</title>
      <link>https://kissjava.cn/posts/install-xdebug-php-extension-for-xampp-on-ubuntu10.04/</link>
      <pubDate>Wed, 23 Jun 2010 16:38:09 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/install-xdebug-php-extension-for-xampp-on-ubuntu10.04/</guid>
      <description></description>
    </item>
    
    <item>
      <title>关于ci和zend framework的一些牢骚</title>
      <link>https://kissjava.cn/posts/%E5%85%B3%E4%BA%8Eci%E5%92%8Czend-framework%E7%9A%84%E4%B8%80%E4%BA%9B%E7%89%A2%E9%AA%9A/</link>
      <pubDate>Fri, 11 Jun 2010 10:32:57 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%85%B3%E4%BA%8Eci%E5%92%8Czend-framework%E7%9A%84%E4%B8%80%E4%BA%9B%E7%89%A2%E9%AA%9A/</guid>
      <description>首先说明，这是淡水的牢骚，看不惯不要看。
老华仔歌里唱的应景“总逃不开工作表，做完了又来了，怎样也甩不掉……”。淡水手头的项目还没有完全结束，新的项目又要上马。于是前期就框架选择开大会，开小会。
有.net高手就开始在网上搜索合适框架。结果他得出的结论是Zend Framework，理由：官方。 不推荐Codeigniter是因为，一家小公司做的，后期支持跟不上。而且ci是轻量级的，功能不强。 php本身就是草根出身，如果看公司大小，那么为什么不用.net? ci是轻量级的，但是php能做的，他都能做，没有内置的功能，可以自己加阿？非得一定要和zend framework一样，几乎把所有能想到用到的功能都整合进去变成皇家内裤（类库）？ 窃以为，做大型应用时应用框架快速开发是可取的，但是要考虑到代码的执行效率，和开发的灵活度。 zend framework能做到的， ci扩展一下也能做到，麻烦一点了。但是zend framwork有ci灵活么，ci2天可以掌握，zend framework可以么（太NB的天才不算）。 这些主流框架的评比本身没有太大的意义。框架只是工具，各有其特点（Yii高效；ci上手容易，代码优雅；thinkphp代码全中文注释，文档齐全；qee……），人才是重点。
如果理由是： zend framework是官方出品，支持应该比其他（ci）公司长久。 zend framework是官方出品，使用人数较多，人力资源丰富。 zend framework内置许多类库，扩展类库的时间可以节省不少。 zend framework内置许多类库，规范了代码（尽量使用内置类库）。 还有最具分量的理由：这是高层主管决定的。
这些我可以接受，但是说ci不行，以否定ci来肯定zend framwork，那就有些牵强了。
滔滔不绝的，连绵不断，就是要表明“zend framework是php官方出品，功能强大。ci一家小公司做的，后期支持跟不上。而且ci是轻量级的，功能不强。”。但是，zend framework哪些方面强大，ci又是哪里功能不强，都没有说出个一二三来。
嗯，滔滔不绝但也要言之有物才行吧！</description>
    </item>
    
    <item>
      <title>恢复Ubuntu的默认面板</title>
      <link>https://kissjava.cn/posts/%E6%81%A2%E5%A4%8Dubuntu%E7%9A%84%E9%BB%98%E8%AE%A4%E9%9D%A2%E6%9D%BF/</link>
      <pubDate>Thu, 10 Jun 2010 08:10:35 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E6%81%A2%E5%A4%8Dubuntu%E7%9A%84%E9%BB%98%E8%AE%A4%E9%9D%A2%E6%9D%BF/</guid>
      <description>如果不小心将ubuntu的面板弄得一团糟，又不想慢慢找回来。有没有什么方法一键恢复默认状态呢？ 答案是：“能恢复是肯定的，但是没有一键！“。
首先重置面板设置
如果悲剧到没有办法进入终端，那么建个文件。往里面写入这三条命令，再保存为.sh文件。给执行权限，运行即可。
真的好用。
from:http://blog.okkey.net/1202.html</description>
    </item>
    
    <item>
      <title>投入ubuntu，体验中</title>
      <link>https://kissjava.cn/posts/%E6%8A%95%E5%85%A5ubuntu%E4%BD%93%E9%AA%8C%E4%B8%AD/</link>
      <pubDate>Wed, 09 Jun 2010 10:26:24 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E6%8A%95%E5%85%A5ubuntu%E4%BD%93%E9%AA%8C%E4%B8%AD/</guid>
      <description>嗯，体验还不错。推荐。。。 不过wine下ie6太耗资源了，能跑死机器。 两天了，基本上手 开发用XAMPP+PDT，PDT在linux下比windows下的速度快些，但是边框太粗，难看。 :p</description>
    </item>
    
    <item>
      <title>SVN小记</title>
      <link>https://kissjava.cn/posts/svn%E5%B0%8F%E8%AE%B0/</link>
      <pubDate>Fri, 16 Apr 2010 17:30:51 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/svn%E5%B0%8F%E8%AE%B0/</guid>
      <description>名词解释：修订版（revision）：可以认为是某个文件在其生命周期内各个保存的快照，每个快照和一个时间区间对应。 版本库（Repository）：存放修订版的数据库 本地工作拷贝（Local working copy）：修订版在本地的副本 版本的检入（Check in）：本地副本提交到服务器的版本库 检出（Check out）：从服务器的版本库中取出修订版成为本地副本 版本号的来源：有两种策略，基于文件的计数和基于仓库的计数，subversion使用后者 标签（Tags）：为版本加一个名字，便于检出 分支（Branches）：修订版打分支，以后可以平行修改，互不干扰 合并（Merging）：将分支的修订版合并为一个新的修订版 锁（Locking）：为修订版枷锁 冲突（Conflict）：并发版本控制时防止修订版混乱的错误机制
创建版本库创建服务器端版本库 命令行： svnadmin create file_path/repo_name
初始导入（import）通过命令行导入： svn import -m &amp;ldquo;init import&amp;rdquo; http://10.0.0.6/svn/teaching/ 该命令可将当前路径下文件导入到版本库中。
检出（checkout）通过命令行检入： svn co http://10.0.0.6/svn/teaching/ mysvntest 或者： svn checkout http://10.0.0.6/svn/teaching/ mysvntest 最后取出来的新目录名，不给定就会用路径的最后一个目录名（如这里的teaching，这里给了就是mysvntest）
保持更新（update）命令行： svn update 或者 svn up 多人合作时： 更新要经常频繁的做，尽量让问题及早暴露，便于处理。 提交代码前要更新，否则容易产生版本冲突。 通过第一步import后的那个目录并没有默认建立svn与远程的关系,需要手动从服务器checkout回服务器的版本到本地, 才算正式建立与远程的关系,才能直接 svn up……
添加（add）命令行： svn add file_path
告知svn服务器，添加目录和/或文件到服务器上，这个操作类似SQL的insert，但是并没有真的操作，直到commit。
提交改动（commit）相当于通用概念：检入（checkin）。 命令行： svn commit 或者： svn ci 要求：一般要注明修改的原因 svn ci -m &amp;ldquo;修改bug #224&amp;rdquo;</description>
    </item>
    
    <item>
      <title>socks5 proxy 折腾记</title>
      <link>https://kissjava.cn/posts/socks5-proxy-%E6%8A%98%E8%85%BE%E8%AE%B0/</link>
      <pubDate>Sat, 27 Mar 2010 09:53:02 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/socks5-proxy-%E6%8A%98%E8%85%BE%E8%AE%B0/</guid>
      <description>需要在服务器上装sock5 proxy，服务器平台是Redhat enterprise linux5,淡水要在有限的时间里去折腾它。 google之。 找到了socks5-v1.0r11编译报错:( 再google之。。。 又转找到ss5-3.6.4-3, 编译,又报错:( 时间有限，精力有限，关键是能力有限。。 最后google之。。。。。。 找到Antinat。看似很方便的样子。官网：http://antinat.sourceforge.net/ 下载： antinat-0.90-1.i386.rpm antinat-libs-0.90-1.i386.rpm 先rpm -ivh antinat-libs-0.90-1.i386.rpm 再rpm -ivh antinat-0.90-1.i386.rpm 搞定。 也可以下载：antinat-0.90.tar.bz2 编译安装。 tar jvxf antinat-0.90.tar.bz2 cd antinat-0.90 ./configure make install cp etc/antinat.xml.allopen /usr/local/etc/antinat.xml 配置端口：  &amp;lt;port value=&#39;1080&#39;/&amp;gt;  </description>
    </item>
    
    <item>
      <title>php5.3废弃函数</title>
      <link>https://kissjava.cn/posts/php5.3%E5%BA%9F%E5%BC%83%E5%87%BD%E6%95%B0/</link>
      <pubDate>Sun, 14 Mar 2010 19:58:36 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/php5.3%E5%BA%9F%E5%BC%83%E5%87%BD%E6%95%B0/</guid>
      <description>php5.3被放弃的函数有:
ereg();//直接用mb_ereg代替，或是preg_match代替，但是匹配规则需要用/包括起来 eregi();//preg_match代替，在规则后加上i，如：preg_match(&amp;quot;/^(style|style_)(.*)*/i&amp;rdquo;, $file); ereg_replace(); set_magic_quotes_runtime(); split(); mysql_close(); // 将不支持全部关闭, 需要改为:mysql_close($link);</description>
    </item>
    
    <item>
      <title>继续收拾残局，php和asp.net的md5差别</title>
      <link>https://kissjava.cn/posts/%E7%BB%A7%E7%BB%AD%E6%94%B6%E6%8B%BE%E6%AE%8B%E5%B1%80php%E5%92%8Casp.net%E7%9A%84md5%E5%B7%AE%E5%88%AB/</link>
      <pubDate>Tue, 09 Mar 2010 16:17:19 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E7%BB%A7%E7%BB%AD%E6%94%B6%E6%8B%BE%E6%AE%8B%E5%B1%80php%E5%92%8Casp.net%E7%9A%84md5%E5%B7%AE%E5%88%AB/</guid>
      <description>asp.net的md5加密貌似是16位的 而php的md5加密是32位的 这样解决 echo substr(md5(&amp;ldquo;admin&amp;rdquo;),8,16); // 16位MD5加密效果等同于asp.net的md5 echo &amp;ldquo;&amp;rdquo;; echo md5(&amp;ldquo;admin&amp;rdquo;); // 32位MD5加密 另：php的md5函数，按官方的说法，第二个参数设为true，可以生成16位的，但是淡水测试下来是乱码。淡水没空深究了，有心人可以找找缘由。</description>
    </item>
    
    <item>
      <title>收拾残局，过滤部分字段重复的数据</title>
      <link>https://kissjava.cn/posts/%E6%94%B6%E6%8B%BE%E6%AE%8B%E5%B1%80%E8%BF%87%E6%BB%A4%E9%83%A8%E5%88%86%E5%AD%97%E6%AE%B5%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Mon, 08 Mar 2010 16:54:03 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E6%94%B6%E6%8B%BE%E6%AE%8B%E5%B1%80%E8%BF%87%E6%BB%A4%E9%83%A8%E5%88%86%E5%AD%97%E6%AE%B5%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E6%8D%AE/</guid>
      <description>select distinct可以去掉重复记录。 disctinct将重复的记录忽略，但它忽略的是完全一致的重复记录，而不是其中某个字段重复的记录，或者说，distinct查询一个字段时好使，多个字段就不好使。
所以用聚合函数和group by实现 注意：group by只能跟聚合函数搭配使用例表
查询username和password组合起来的条件不能重复的查询结果（这个都能重复，不能不说这是个烂摊子）
当username和password重复时，取ID最大的记录:
select * from mytable where ID in(select max(ID) from mytable group by username,password)
当username和password重复时，取ID最小的记录：
select * from mytable where ID in(select min(ID) from mytable a group by username,password)</description>
    </item>
    
    <item>
      <title>Codeigniter ACL library</title>
      <link>https://kissjava.cn/posts/codeigniter-acl-library/</link>
      <pubDate>Mon, 08 Mar 2010 09:58:45 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/codeigniter-acl-library/</guid>
      <description>public function __construct() { $this-&amp;gt;load-&amp;gt;helper(&#39;url&#39;); $this-&amp;gt;load-&amp;gt;library(&#39;session&#39;); $this-&amp;gt;load-&amp;gt;config(&#39;mx_acl&#39;, TRUE); $this-&amp;gt;_config = $this-&amp;gt;config-&amp;gt;item(&#39;mx_acl&#39;); $this-&amp;gt;_cache_path = $this-&amp;gt;config-&amp;gt;item(&#39;cache_path&#39;); /* previous flashdata is available to views */ $this-&amp;gt;load-&amp;gt;vars($this-&amp;gt;_config[&#39;error_var&#39;], $this-&amp;gt;session-&amp;gt;flashdata($this-&amp;gt;_config[&#39;error_var&#39;])); /* run the access control check now */ ($this-&amp;gt;_config[&#39;check_uri&#39;]) AND $this-&amp;gt;check_uri(); } /** * Check the current uri and user privileges against the cached ACL array * Redirect if access is denied * * @return void */ public function check_uri() { /* Load the cached access control list or show error */ (is_file($cached_acl = $this-&amp;gt;_cache_path.</description>
    </item>
    
    <item>
      <title>apache下ab网站压力测试命令的参数、输出结果的中文注解</title>
      <link>https://kissjava.cn/posts/apache%E4%B8%8Bab%E7%BD%91%E7%AB%99%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95%E5%91%BD%E4%BB%A4%E7%9A%84%E5%8F%82%E6%95%B0%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E7%9A%84%E4%B8%AD%E6%96%87%E6%B3%A8%E8%A7%A3/</link>
      <pubDate>Sun, 07 Mar 2010 16:48:21 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/apache%E4%B8%8Bab%E7%BD%91%E7%AB%99%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95%E5%91%BD%E4%BB%A4%E7%9A%84%E5%8F%82%E6%95%B0%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E7%9A%84%E4%B8%AD%E6%96%87%E6%B3%A8%E8%A7%A3/</guid>
      <description>有用，记录一下。from：http://txm3217.blog.163.com/blog/static/21986987200762131027970/ 以前安装好APACHE总是不知道该如何测试APACHE的性能，现在总算找到一个测试工具了。就是APACHE自带的测试工具AB(apache benchmark).在APACHE的bin目录下。 格式： ./ab [options] [http://]hostname[:port]/path 参数： -n requests Number of requests to perform //在测试会话中所执行的请求个数。默认时，仅执行一个请求 -c concurrency Number of multiple requests to make //一次产生的请求个数。默认是一次一个。 -t timelimit Seconds to max. wait for responses //测试所进行的最大秒数。其内部隐含值是-n 50000。它可以使对服务器的测试限制在一个固定的总时间以内。默认时，没有时间限制。 -p postfile File containing data to POST //包含了需要POST的数据的文件. -T content-type Content-type header for POSTing //POST数据所使用的Content-type头信息。 -v verbosity How much troubleshooting info to print //设置显示信息的详细程度 - 4或更大值会显示头信息， 3或更大值可以显示响应代码(404, 200等), 2或更大值可以显示警告和其他信息。 -V 显示版本号并退出。 -w Print out results in HTML tables //以HTML表的格式输出结果。默认时，它是白色背景的两列宽度的一张表。 -i Use HEAD instead of GET // 执行HEAD请求，而不是GET。 -x attributes String to insert as table attributes // -y attributes String to insert as tr attributes // -z attributes String to insert as td or th attributes // -C attribute Add cookie, eg.</description>
    </item>
    
    <item>
      <title>vim记录</title>
      <link>https://kissjava.cn/posts/vim%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Sun, 07 Mar 2010 13:13:54 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/vim%E8%AE%B0%E5%BD%95/</guid>
      <description>1，vim中复制带有行号的内容到剪切板 进入normal模式，按查找键盘（/），然后然后用鼠标选择需要的内容，选取会自动选择行号，菜单栏编辑-复制（右键也行）即可。 2，删除引用符号中的内容，并进入到插入模式 ci[ 删除一对 [] 中的所有字符并进入插入模式 ci( 删除一对 () 中的所有字符并进入插入模式 ci&amp;lt; 删除一对 &amp;lt;&amp;gt; 中的所有字符并进入插入模式 ci{ 删除一对 {} 中的所有字符并进入插入模式 cit 删除一对 HTML/XML 的标签内部的所有字符并进入插入模式 ci&amp;rdquo; ci&amp;rsquo; ci删除一对引号字符 (&amp;quot;或 &#39; 或) 中所有字符并进入插入模式 3，除了，hjkl外的更微妙的光标移动 w：光标往下移动一个词。 b：光标往回移动一个词。 0：移动光标到当前行首。 ^：移动光标到当前行的第一个字母位置。 $：移动光标到行尾。 )：移动光标到下一个句子。 ( ：移动光标到上一个句子。
：向下移动一屏。 ：向上移动一屏。 G：到文件尾 numG：移动光标到指定的行（num）。（比如 10G 就是到第 10 行） gg：到文件首 H：移动光标到屏幕上面 M：移动光标到屏幕中间 L：移动光标到屏幕下面
  ：缩进所有选择的代码 &amp;laquo;：和上面类似，但是反缩进
  </description>
    </item>
    
    <item>
      <title>可以激活Win7系统的Key</title>
      <link>https://kissjava.cn/posts/%E5%8F%AF%E4%BB%A5%E6%BF%80%E6%B4%BBwin7%E7%B3%BB%E7%BB%9F%E7%9A%84key/</link>
      <pubDate>Sun, 07 Mar 2010 12:05:31 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%8F%AF%E4%BB%A5%E6%BF%80%E6%B4%BBwin7%E7%B3%BB%E7%BB%9F%E7%9A%84key/</guid>
      <description>可以激活Win7系统的Key（序列号）！ G到的，留着吧，看看什么时候能用上。 不懂什么是神Key的朋友自己去BD、GG吧！不要问我这样的问题！谢谢配合！ 我个人认为神Key是微软为扩展Win7市场故意放出。 回复可见！
本帖隐藏的内容需要回复才可以浏览 已经证实的 236TW-X778T-8MV9F-937GT-QVKBB 87VT2-FY2XW-F7K39-W3T8R-XMFGF KH2J9-PC326-T44D4-39H6V-TVPBY TFP9Y-VCY3P-VVH3T-8XXCC-MF4YK 流传于网上未经验证的 J783Y-JKQWR-677Q8-KCXTF-BHWGC C4M9W-WPRDG-QBB3F-VM9K8-KDQ9Y 2VCGQ-BRVJ4-2HGJ2-K36X9-J66JG MGX79-TPQB9-KQ248-KXR2V-DHRTD FJHWT-KDGHY-K2384-93CT7-323RC</description>
    </item>
    
    <item>
      <title>使用jQuery和flash的多文件上传组件</title>
      <link>https://kissjava.cn/posts/%E4%BD%BF%E7%94%A8jquery%E5%92%8Cflash%E7%9A%84%E5%A4%9A%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Sun, 07 Mar 2010 12:02:53 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E4%BD%BF%E7%94%A8jquery%E5%92%8Cflash%E7%9A%84%E5%A4%9A%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%84%E4%BB%B6/</guid>
      <description>标题党了。 这是一个使用jQuery和flash的多文件上传组件： http://www.uploadify.com/demo/</description>
    </item>
    
    <item>
      <title>flash,css hack,等等。。</title>
      <link>https://kissjava.cn/posts/flashcss-hack%E7%AD%89%E7%AD%89/</link>
      <pubDate>Mon, 01 Mar 2010 09:35:34 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/flashcss-hack%E7%AD%89%E7%AD%89/</guid>
      <description>1，插入flash，不追求web标准，可以这样简短： 2，同一选择器针对不同浏览器的css hack select { background-color: black;/* firefox, opera, ie8 */ [;background-color: green;]/* safari, chrome */ *background-color: blue;/* ie7 */ _background-color: red;/* ie6 */ } html*~/**/body select { border: 5px solid red;/* ie8 */ }以上只是一个例子说明混合写法.以下是对例子的补充 1.IE都能识别*;标准浏览器(如FF)不能识别*; 2.IE7,FF能识别!important,IE6不能. 3.只有IE6能识别_ 4.不管是什么方法，书写的顺序都应该是firefox的写在前面，IE7的写在中间，IE6的写在最后面。 5.对于ie8 chrome hack的请 GOOGLE or BAIDU …</description>
    </item>
    
    <item>
      <title>用 CSS 将超出显示宽度的内容隐藏起来 </title>
      <link>https://kissjava.cn/posts/%E7%94%A8-css-%E5%B0%86%E8%B6%85%E5%87%BA%E6%98%BE%E7%A4%BA%E5%AE%BD%E5%BA%A6%E7%9A%84%E5%86%85%E5%AE%B9%E9%9A%90%E8%97%8F%E8%B5%B7%E6%9D%A5-/</link>
      <pubDate>Mon, 01 Mar 2010 09:35:25 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E7%94%A8-css-%E5%B0%86%E8%B6%85%E5%87%BA%E6%98%BE%E7%A4%BA%E5%AE%BD%E5%BA%A6%E7%9A%84%E5%86%85%E5%AE%B9%E9%9A%90%E8%97%8F%E8%B5%B7%E6%9D%A5-/</guid>
      <description>实现原理：
（1）指定宽度：width:300px; （2）overflow:hidden; 将超出内容隐藏 （3）text-overflow:ellipsis; IE 专有属性，当对象内文本溢出时显示省略标记(&amp;hellip;) （4）white-space:nowrap; 强制在同一行内显示所有文本，直到文本结束或者遭遇 br 对象。</description>
    </item>
    
    <item>
      <title>Codeigniter里实现get_object_or_404</title>
      <link>https://kissjava.cn/posts/codeigniter%E9%87%8C%E5%AE%9E%E7%8E%B0get_object_or_404/</link>
      <pubDate>Mon, 01 Mar 2010 09:35:08 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/codeigniter%E9%87%8C%E5%AE%9E%E7%8E%B0get_object_or_404/</guid>
      <description>在Django里有个很好的功能，get_object_or_404。就是取得我们要的对象或是返回404。
我们在codeigniter里我们也可以在控制器里用简洁的代码实现。在下面的例子里我们加载一个user模型，并得到一个记录，否则返回404。 </description>
    </item>
    
    <item>
      <title>PHP5.3的新特新</title>
      <link>https://kissjava.cn/posts/php5.3%E7%9A%84%E6%96%B0%E7%89%B9%E6%96%B0/</link>
      <pubDate>Sat, 13 Feb 2010 16:31:57 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/php5.3%E7%9A%84%E6%96%B0%E7%89%B9%E6%96%B0/</guid>
      <description>本文主要说说PHP V5.3 的以下特性：
延迟静态绑定PHP V5.3 扩展了 static 关键词的使用。现在，无需实例化类便可访问静态类方法和属性。当类不存在对象，或者不需要对象时，这个特性就比较方便。下面就是展示了延迟静态绑定的一个例子。 代码中使用 CLASS 也许有点勉强，但确实可以说明 PHP V5.3.0 有一个小小的问题。显然，对于这个例子，这不是多大的问题，但是对于有数千行 PHP 代码的网站来说，就没那么简单了。重复代码通常意味着重复劳动。名称空间（也有叫命名空间的）PHP V5.3 提供名称空间功能，以增强该语言的封装能力。名称空间在现代语言中非常常见，例如 C# 和 XML。名称空间的主要优点是，通过它可以为代码符号（类、函数和常量）定义独立的容器，这听起来有点复杂，其实不然。以下代码显示了使用 PHP 名称空间定义本地和全局字符串常量的一个例子。 有了名称空间功能，和之前相比，代码之间的界限更加清晰。而这一点又有助于团队环境中的代码整合。换句话说，不同的团队可以分配他们自己的名称空间，当所有团队成员都遵循这个惯例时，名称冲突的情况应该会降为零。这也是 5.3.0 版对 PHP 语言在面向对象方面的一个增强。
类方法重载在 PHP 中，术语重载（overloading） 与通常的面向对象上下文稍有不同。在 Java 语言或 C# 中，“重载” 方法是指为不同参数列表提供相同代码的方法。例如，如果有一个名为 draw(String str) 的方法，那么重载的方法可以有以下形式：draw(String str, int i)。这种方法符号名称被称作方法签名，为了便于重载，返回类型被省略。
在 PHP 中，“重载” 是指动态创建的方法和属性。这实际上是动态代码，任何这样的动态实体都是由所谓的魔术方法（magic methods） 来处理。可以在一个类中为各种不同的动作创建这些魔术方法。然后，当代码中遇到未声明或不可见的属性或方法时，便可以调用重载方法。这样风格的重载提供了很大程度上的灵活性。
听起来有些复杂，所以来看看一个具体的例子。以下代码展示如何使用 PHP 重载调用对象和类方法。 变量解析和 heredocPHP 的优势之一在于字符串解析。PHP 对于字符串的长度没有限制，只要主机的可用内存够大就行。下面代码展示了使用 PHP 时拥有的灵活性。
代码产生以下输出：
这样的代码并不是直到 PHP V5.3.0 才有的。这里给出这段代码，只是为了提醒您字符串处理支持和一些解析规则。但是，PHP V5.3.0 增加了增强的 heredoc 语法支持。下面显示了一个简单的例子。 </description>
    </item>
    
    <item>
      <title>php的文档句法(heredoc)</title>
      <link>https://kissjava.cn/posts/php%E7%9A%84%E6%96%87%E6%A1%A3%E5%8F%A5%E6%B3%95heredoc/</link>
      <pubDate>Fri, 12 Feb 2010 21:54:46 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/php%E7%9A%84%E6%96%87%E6%A1%A3%E5%8F%A5%E6%B3%95heredoc/</guid>
      <description>不是新文章，以前写的。但是上次空间到期后数据都没了。网上有看到它，就把它弄回来了。 &amp;lt;li&amp;gt;双引号&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;定界符（heredoc syntax）&amp;lt;/li&amp;gt;  看见了吧，单引号居然可以用来表示字符串。那么如果我想表示单引号怎么办？和大多数语言一样，使用转义符号吧。即反斜线&amp;rdquo;&amp;quot;.那么使用单引号和双引号有什么区别呢？我的观点是没有多大区别。唯一的区别就是双引号可以应用更多的转义符。 让我们定界符吧。它的语法是&amp;quot;&amp;laquo;&amp;lt;&amp;rdquo;。用法是在其后提供一个标识符，然后在标识符后提供字符串，再在字符串后提供此标识符来结尾。例如： 2. 字符串的特别之处 从一个例子开始。 假设里你有很长的一段字符串，比如一段话。几个月后，你发现你的需求改变，需要在这段话的某个位置插入一个变量。这个时候如果重新用字符串符肯定是相当复杂的。那么有没有其他的方法呢？请放心，PHP已经考虑到这一点了。那就是花括号的应用。 对于PHP，它一般会按照如下规则解析： 如果遇到美元符号（$），解析器会尽可能多地取得后面的字符以组成一个合法的变量名。如果想明示指定名字的结束，用花括号把变量名括起来。例如 3，字符串的常用操作。我想这是令我们异常激动的一个话题，并且也是非常实用的。 字符串的函数比较多，我们还是介绍一部分函数吧。
字符串的整理函数 chop(),其实就是rtrim().当然rtrim()还是可以用的 ltrim(),去掉字符串左边的多于空格。 trim(),这个比较比较简单，就是把字符串左右2边的空格都给删除。 字符串的格式化输出 实用HTML格式化的。nl2br().即在字符串的新一行前插入. echo nl2br(&amp;ldquo;foo isn&amp;quot;tn bar&amp;rdquo;); 上面的字符串会分2行显示，如果把此函数去掉，就只在一行上显示了。 打印输出的格式化PHP支持print()函数，它和echo一样，唯一的差别就是print()返回一个整型值，一直为1。除了print(),还有printf()和 sprintf(). 写到这里，你肯定会想，怎么和C一样呢。它们的工作方式一样，差别是printf()将结果输出到浏览器，而sprintf()这是输出到变量。
看看它们的定义吧。 int printf ( string format [, mixed args [, mixed ]] ) string sprintf ( string format [, mixed args [, mixed ]] )
改变字符串的大小写strtolower将字符串变为小写 strtoupper将字符串变为大写 ucfirst将字符串的第一个字符大写。 ucwords 将字符串中的每一个单词的第一个字符变为大写。 格式化字符，以便存储其实就是为了替换引号，反斜杠，NULL等，因为它们有的时候不适合于很多场合，比如存储到数据库。为了达到目的，addslashes是一个不错的选择，它使用反斜线引用字符串。为了在显示数据，需要在之前调用stripslashes，否则反斜杠会显示出来的。
字符串比较 strcmp,strcasecmp,strnatcmp,有时间再查一下 strcmp(str1,str2)用来比较二字符串的大小。返回负数表示 str1 小于 str2；返回正数表示 str1 大于 str2；返回零表示二字符串相同。
字符串长度请调用strlen.</description>
    </item>
    
    <item>
      <title>PHP备忘</title>
      <link>https://kissjava.cn/posts/php%E5%A4%87%E5%BF%98/</link>
      <pubDate>Thu, 04 Feb 2010 20:33:58 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/php%E5%A4%87%E5%BF%98/</guid>
      <description>1，stdClass 他是php内置的一个类，提供给我们直接实例化使用。 $obj = new stdClass(); $obj-&amp;gt;prop = &amp;lsquo;hello world&amp;rsquo;; echo $obj-&amp;gt;prop; 我们可以看看他的内部结构 Reflection::export(new ReflectionClass(&amp;lsquo;stdClass&amp;rsquo;)); /* 输出结果 Class [ class stdClass ] {
 Constants [0] { } Static properties [0] { } Static methods [0] { } Properties [0] { } Methods [0] { } } */ 2，php的exception和error处理 他们各自的发生： exception可以通过php5 的try{}抛出，然后通过catch{}被捕获。 php内置函数执行时发生问题，是通过trigger_error显示error。 使用异常：   // set_error_handler()函数用于让用户自定义错误处理函数 // set_error_handler(error_function, error_type) // error_function 必须, 制定发生错误时运行的函数 // error_type 可选, 规定不同的错误级别提示的不同信息, 默认是&amp;quot;E_ALL&amp;rdquo; set_error_handler(&amp;lsquo;ErrorHandler&amp;rsquo;);</description>
    </item>
    
    <item>
      <title>TinyMVC中文手册</title>
      <link>https://kissjava.cn/posts/tinymvc%E4%B8%AD%E6%96%87%E6%89%8B%E5%86%8C/</link>
      <pubDate>Wed, 03 Feb 2010 09:04:40 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/tinymvc%E4%B8%AD%E6%96%87%E6%89%8B%E5%86%8C/</guid>
      <description>照例，先罗嗦几句。 一直想把codeigniter的代码通读一遍，虽然codeigniter是比较轻量级的php框架，但是里面的东西还是很多的，所以一直没有实现。顺便也一直在寻找适合的代替品。其间，大致看了&amp;lt;a href=&amp;quot;http://www.skiyo.cn/punny/&amp;quot;&amp;gt;punny&amp;lt;/a&amp;gt;，还有很自由的&amp;lt;a href=&amp;quot;http://code.google.com/p/lotusphp/&amp;quot;&amp;gt;lotusphp&amp;lt;/a&amp;gt;。lotusphp 这个不像是框架了，倒像是个php的几个常用功能封装起来的组件，很牛13的，好多都可以作为插件放到tinymvc里去。。。 最后还是选中了tinymvc。理由，它确实很小，但是我要的东西他基本都有了：  &amp;lt;li&amp;gt;url路由&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;pdo封装&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;自由的插件机制&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;php5 only&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;最关键的是和codeigniter非常相似的结构和语法&amp;lt;/li&amp;gt;  于是，淡水抱恙（身体和心理都有病）花费了一天的时间，通读了一般它的代码，翻译了它的文档，也就是这个《TinyMVC中文手册》了。如果想研究一下Php的框架，可以从这个入手。没有很多的分岔干扰，比较干净。如果你有什么建议或是插件需要分享的，可以留言。  TinyMVC中文手册</description>
    </item>
    
    <item>
      <title>CodeIgniter 和 Doctrine 从零开始 1-8章翻译打包下载</title>
      <link>https://kissjava.cn/posts/codeigniter-%E5%92%8C-doctrine-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B-1-8%E7%AB%A0%E7%BF%BB%E8%AF%91%E6%89%93%E5%8C%85%E4%B8%8B%E8%BD%BD/</link>
      <pubDate>Tue, 26 Jan 2010 09:19:53 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/codeigniter-%E5%92%8C-doctrine-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B-1-8%E7%AB%A0%E7%BF%BB%E8%AF%91%E6%89%93%E5%8C%85%E4%B8%8B%E8%BD%BD/</guid>
      <description>简介一下： CodeIgniter 和 Doctrine 从零开始 是ci配合一个php的orm类库结合开发一个论坛的例子。 这一系列文章，写的不错，淡水一直在跟着翻译。本想当作新春贺礼的，但是看到有人已经开始重复劳动了，还是先放出下载吧。 暂时只有八章，第九章还在翻译中，原作者写到了第十章了。 原作者地址： http://www.phpandstuff.com/ CodeIgniter 和 Doctrine 从零开始 1-8</description>
    </item>
    
    <item>
      <title>基于PHP的cURL快速入门[译][转]</title>
      <link>https://kissjava.cn/posts/%E5%9F%BA%E4%BA%8Ephp%E7%9A%84curl%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%AF%91%E8%BD%AC/</link>
      <pubDate>Tue, 19 Jan 2010 15:41:26 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%9F%BA%E4%BA%8Ephp%E7%9A%84curl%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E8%AF%91%E8%BD%AC/</guid>
      <description>本来想要翻译的，不想在蓝色上已经有人译好了。直接yy然后p吧（linux下vi的复制粘贴指令，最近捣鼓linux比较多些）。 原文地址：http://net.tutsplus.com/tutorials/php/techniques-and-resources-for-mastering-curl/ 译文地址：http://bbs.blueidea.com/viewthread.php?tid=2966700&amp;amp;extra=page%3D1%26amp%3Bfilter%3Dtype%26amp%3Btypeid%3D20
cURL 是一个利用URL语法规定来传输文件和数据的工具，支持很多协议，如HTTP、FTP、TELNET等。最爽的是，PHP也支持 cURL 库。本文将介绍 cURL 的一些高级特性，以及在PHP中如何运用它。
为什么要用 cURL?是的，我们可以通过其他办法获取网页内容。大多数时候，我因为想偷懒，都直接用简单的PHP函数： $content = file_get_contents(&amp;ldquo;http://www.nettuts.com&amp;rdquo;); // or $lines = file(&amp;ldquo;http://www.nettuts.com&amp;rdquo;); // or readfile(http://www.nettuts.com);不过，这种做法缺乏灵活性和有效的错误处理。而且，你也不能用它完成一些高难度任务——比如处理coockies、验证、表单提交、文件上传等等。
基本结构在学习更为复杂的功能之前，先来看一下在PHP中建立cURL请求的基本步骤：
// 1. 初始化 $ch = curl_init(); // 2. 设置选项，包括URL curl_setopt($ch, CURLOPT_URL, &amp;ldquo;http://www.nettuts.com&amp;rdquo;); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); curl_setopt($ch, CURLOPT_HEADER, 0); // 3. 执行并获取HTML文档内容 $output = curl_exec($ch); // 4. 释放curl句柄 curl_close($ch);第二步（也就是 curl_setopt() ）最为重要，一切玄妙均在此。有一长串cURL参数可供设置，它们能指定URL请求的各个细节。要一次性全部看完并理解可能比较困难，所以今天我们只试一下那些更常用也更有用的选项。
检查错误你可以加一段检查错误的语句（虽然这并不是必需的）： // &amp;hellip; $output = curl_exec($ch); if ($output === FALSE) { echo &amp;ldquo;cURL Error: &amp;quot; . curl_error($ch); } // &amp;hellip;请注意，比较的时候我们用的是“=== FALSE”，而非“== FALSE”。因为我们得区分 空输出 和 布尔值FALSE，后者才是真正的错误。</description>
    </item>
    
    <item>
      <title>mysql数据库的备份和恢复</title>
      <link>https://kissjava.cn/posts/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D/</link>
      <pubDate>Tue, 12 Jan 2010 14:20:47 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D/</guid>
      <description>利用了mysql自带的工具，效率高，也不怕文件过大。 先说备份 mysqldump -u数据库用户名 -p密码 dbname &amp;gt; 备份路径/导出名.sql就是把dbname数据库，导出到 备份路径/导出名.sql
恢复 mysql -u数据库用户名 -p密码 dbname &amp;lt; 备份路径/数据库名.sqlmysql命令说完了，下面该shell了，用shell来实现mysql的自动备份。
建立shell mysqlback.sh 内容如下： #!/bin/bash X=date +%Y%m%d	;获取当天时间，命名用 M=/usr/local/mysql/bin	;mysql程序的路径 B= /usr/back/mysql	;mysql备份的路径
$M/mysqldump -uroot -proot test &amp;gt; $B/$X.sql tar -zcvf $B/$X.tar.gz $B/$X.sql rm -rf $B/$X.sqltar 打包压缩后，rm 删除原sql文件 然后添加到计划任务，每天3点05分自动执行： #echo &amp;ldquo;05 3 * * * root /usr/back/shell/mysqlback.sh &amp;amp;&amp;gt;/dev/null&amp;rdquo; &amp;raquo;/etc/crontab</description>
    </item>
    
    <item>
      <title>vi/vim 中文乱码</title>
      <link>https://kissjava.cn/posts/vi-vim-%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</link>
      <pubDate>Tue, 12 Jan 2010 10:43:46 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/vi-vim-%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</guid>
      <description>linux下，用vi、vim编辑文件时，可能会碰到中文乱码。 由于在windows下默认是gb编码，而vim默认是utf-8（gedit默认也是utf-8），所以打开会成乱码。修改了一下配置文件，使vi、vim支持gb编码就好了。 $vi ~/.vimrc
let &amp;amp;termencoding=&amp;amp;encoding set fileencodings=utf-8,gbk
$:wq 再次打开vi、vim，中文显示就正常了。</description>
    </item>
    
    <item>
      <title>淡水的2009</title>
      <link>https://kissjava.cn/posts/%E6%B7%A1%E6%B0%B4%E7%9A%842009/</link>
      <pubDate>Wed, 06 Jan 2010 09:49:30 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E6%B7%A1%E6%B0%B4%E7%9A%842009/</guid>
      <description>终于肯花一点点时间，做个小小的回望了。 淡水2009年过得波澜不惊。年初结婚了，随后换了份工作，然后杭州出差3个月，然后买了房子成为房奴一族。再然后2009就过去了。想换个笔记本没有实现，只是在网上过过眼瘾；想把kohana梳理一遍没有实现，只是用它重写了一下以前用codeigniter做过的企业站；想好好折腾一下linux没能坚持，只是在虚拟机上装了几次又遗忘了；还想&amp;hellip;&amp;hellip; robin去做手机站了，所以dophp没了；pat失踪了，所以bsdcn也没了。还好hex的codeigniter.org.cn还在，还好icyleaf的kohana.cn还在&amp;hellip;&amp;hellip; 2010到了，淡水的2009过了，大家继续努力吧，淡水说完了。</description>
    </item>
    
    <item>
      <title>mysql的几个函数</title>
      <link>https://kissjava.cn/posts/mysql%E7%9A%84%E5%87%A0%E4%B8%AA%E5%87%BD%E6%95%B0/</link>
      <pubDate>Thu, 15 Oct 2009 10:45:42 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/mysql%E7%9A%84%E5%87%A0%E4%B8%AA%E5%87%BD%E6%95%B0/</guid>
      <description>缘由是数据库里的fax是由“区号+空格+号码”组成的，但是现在需要去掉空格。下图：先说简单点的方法：UPDATE customer_copy set fax=REPLACE(fax,&amp;rsquo; &amp;lsquo;,&#39;&#39;) where fax REGEXP &amp;lsquo;^[0-9]+[[:space:]][0-9]+&amp;rsquo;; 细说一下： REPLACE(fax,&amp;rsquo; &amp;lsquo;,&#39;&#39;)，是替换空格 REGEXP ，是mysql里的正则 &amp;lsquo;^[0-9]+[[:space:]][0-9]+&amp;rsquo;，是匹配 以至少有一个数字开头，后面有个空格，后面再跟着至少一个数字的记录。 再来一个另类的：UPDATE customer_copy set fax= concat(substring_index(fax,&amp;rsquo; &amp;lsquo;,1), substring_index(fax,&amp;rsquo; &amp;lsquo;,-1)) where fax REGEXP &amp;lsquo;^[0-9]+[[:space:]][0-9]+&amp;rsquo;; 这里用到了两个函数:concat(),substring_index() concat(p1,p2,p3) 是拼接函数。把他的所有参数连接起来,结果就是p1p2p3 substring_index(str,delim,count) 返回字符串str中,第count个分隔符delim之前的子串. SUBSTRING_INDEX(&amp;lsquo;www.mysql.com&amp;rsquo;, &amp;lsquo;.&amp;rsquo;, 2); 返回第2个.之前的字串，也就是www.mysql SUBSTRING_INDEX(&amp;lsquo;www.mysql.com&amp;rsquo;, &amp;lsquo;.&amp;rsquo;, -2); 返回mysql.com 解释一下，如果count是负数，就从右边开始计数和截取。 substring_index(fax,&amp;rsquo; &amp;lsquo;,1), 返回区号部分，substring_index(fax,&amp;rsquo; &amp;lsquo;,-1), 返回空格后的号码，再用concat一组合，也就是去掉空格后的号码了。</description>
    </item>
    
    <item>
      <title>PHP数据记录批量更新代码</title>
      <link>https://kissjava.cn/posts/php%E6%95%B0%E6%8D%AE%E8%AE%B0%E5%BD%95%E6%89%B9%E9%87%8F%E6%9B%B4%E6%96%B0%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Wed, 16 Sep 2009 18:00:07 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/php%E6%95%B0%E6%8D%AE%E8%AE%B0%E5%BD%95%E6%89%B9%E9%87%8F%E6%9B%B4%E6%96%B0%E4%BB%A3%E7%A0%81/</guid>
      <description>需要用到，简单是思路，记录一下。不过用到的应该不多。。。 一般会循环列出表记录到表单里 </description>
    </item>
    
    <item>
      <title>windows7下面搭建 Xampplite&#43;Eclipse PDT&#43;XDebug的PHP开发环境</title>
      <link>https://kissjava.cn/posts/windows7%E4%B8%8B%E9%9D%A2%E6%90%AD%E5%BB%BA-xampplite&#43;eclipse-pdt&#43;xdebug%E7%9A%84php%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Sat, 12 Sep 2009 16:36:55 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/windows7%E4%B8%8B%E9%9D%A2%E6%90%AD%E5%BB%BA-xampplite&#43;eclipse-pdt&#43;xdebug%E7%9A%84php%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</guid>
      <description>淡水是用xampplite1.7.1，它的php版本是5.2.9。最新版的xampp搭载的是php5.3，淡水的程序跑起来好像有些问题-_-!!
1，下载PDT(PHP Development Tools)，地址：http://www.eclipse.org/pdt/downloads/ 我下的版本是PDT 2.1 All In Ones，解压后如果不能运行，请安装JRE安装，因为Eclipse需要JRE才能运行。地址 ：http://www.java.com/zh_CN/download/manual.jsp
2，下载XAMPPlite1.7.1这个集成的PHP+MySql运行环境，如果是EXE安装包，就双击安装，如果是ZIP包，就解压运行。地址：http://www.apachefriends.org/en/xampp-windows.html
3，下载XDebug,我下载的是php_xdebug-2.0.4-5.2.8.dll，用这个替换xampplite1.7.1自带的php_xdebug.dll，自带的无法正常调试。地址：http://xdebug.org/download.php
4，编辑php.ini 添加如下到php.ini [XDebug] ;; Only Zend OR (!) XDebug zend_extension_ts=&amp;quot;xampplitephpextphp_xdebug.dll&amp;rdquo; xdebug.remote_enable=true xdebug.remote_host=127.0.0.1 xdebug.remote_port=9000 xdebug.remote_handler=dbgp xdebug.profiler_enable=on xdebug.profiler_output_dir=&amp;quot;xampplitetmp&amp;rdquo;
原来php.ini里有;extension=php_xdebug.dll，这里无需去掉注释。因为php5.2.9使用zend_extension_ts来挂载xdebug（php5.3开始用zend_extension挂载，又不一样了）
5，配置Eclipse PDT,进入window-&amp;gt;preferences 展开PHP，配置其中的PHP Executables,如图 配置Debug，如图 这样就搞定了,可以不用盗版的zend studio for Eclipse鸟。。。最后，说windows7下搭建。。其实只是个噱头;)</description>
    </item>
    
    <item>
      <title>兼容ie的鼠标经过表格变色</title>
      <link>https://kissjava.cn/posts/%E5%85%BC%E5%AE%B9ie%E7%9A%84%E9%BC%A0%E6%A0%87%E7%BB%8F%E8%BF%87%E8%A1%A8%E6%A0%BC%E5%8F%98%E8%89%B2/</link>
      <pubDate>Fri, 11 Sep 2009 13:37:53 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%85%BC%E5%AE%B9ie%E7%9A%84%E9%BC%A0%E6%A0%87%E7%BB%8F%E8%BF%87%E8%A1%A8%E6%A0%BC%E5%8F%98%E8%89%B2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>EditPlus配置phpCB,格式化php代码</title>
      <link>https://kissjava.cn/posts/editplus%E9%85%8D%E7%BD%AEphpcb%E6%A0%BC%E5%BC%8F%E5%8C%96php%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Fri, 07 Aug 2009 11:30:54 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/editplus%E9%85%8D%E7%BD%AEphpcb%E6%A0%BC%E5%BC%8F%E5%8C%96php%E4%BB%A3%E7%A0%81/</guid>
      <description>自从七月十五搞了个EditPlus4php，淡水就一直用它做一些简单的修改工作。如果不在自己的电脑上，也方便做一些演示，他集成了◦xampplite1.7.1 ◦Zend Code Analyzer 1.2.3 ◦LeapFTP2.7.6 今天发现居然还有phpCB,只是默认没有配置。。。 配置一下吧，这样拷贝过来的代码，格式一下会看着顺眼些。 工具》配置用户工具。。。》添加工具》程序（p） 菜单文本：格式化 命令：找到EditPlus4php的phpCB.exe 参数：&amp;ndash;space-after-if &amp;ndash;optimize-eol &amp;ndash;space-after-switch &amp;ndash;space-after-while &amp;ndash;space-before-start-angle-bracket &amp;ndash;space-after-end-angle-bracket &amp;ndash;extra-padding-for-case-statement &amp;ndash;glue-amperscore &amp;ndash;change-shell-comment-to-double-slashes-comment &amp;ndash;indent-with-tab &amp;ndash;force-large-php-code-tag &amp;ndash;force-true-false-null-contant-lowercase &amp;ndash;comment-rendering-style PEAR &amp;ndash;equal-align-position 50 &amp;ndash;padding-char-count 1 &amp;ldquo;$(FilePath)&amp;rdquo; 勾选“以文本筛选器运行”选择“替换” 搞定。。。</description>
    </item>
    
    <item>
      <title>PHP创建数据库并导入sql文件到MySQL</title>
      <link>https://kissjava.cn/posts/php%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B9%B6%E5%AF%BC%E5%85%A5sql%E6%96%87%E4%BB%B6%E5%88%B0mysql/</link>
      <pubDate>Fri, 07 Aug 2009 11:01:17 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/php%E5%88%9B%E5%BB%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B9%B6%E5%AF%BC%E5%85%A5sql%E6%96%87%E4%BB%B6%E5%88%B0mysql/</guid>
      <description>项目需要自动建库功能，于是就有了本文。搜索引擎好东西啊，就是从其中找到真正有用的太难了。贴代码： </description>
    </item>
    
    <item>
      <title>VMware 里的虚拟系统调整为宽屏分辨率</title>
      <link>https://kissjava.cn/posts/vmware-%E9%87%8C%E7%9A%84%E8%99%9A%E6%8B%9F%E7%B3%BB%E7%BB%9F%E8%B0%83%E6%95%B4%E4%B8%BA%E5%AE%BD%E5%B1%8F%E5%88%86%E8%BE%A8%E7%8E%87/</link>
      <pubDate>Thu, 06 Aug 2009 15:25:38 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/vmware-%E9%87%8C%E7%9A%84%E8%99%9A%E6%8B%9F%E7%B3%BB%E7%BB%9F%E8%B0%83%E6%95%B4%E4%B8%BA%E5%AE%BD%E5%B1%8F%E5%88%86%E8%BE%A8%E7%8E%87/</guid>
      <description>测试成功了，做个备忘。 在虚拟机的配置文件example.vmx 的末尾加上： svga.vramSize = 20971520（大于等于13667684就可以了） svga.maxWidth = 1366 svga.maxHeight = 768 要在虚拟机关闭时，修改这个文件才能生效。</description>
    </item>
    
    <item>
      <title>PHP中把Exception写入到日志</title>
      <link>https://kissjava.cn/posts/php%E4%B8%AD%E6%8A%8Aexception%E5%86%99%E5%85%A5%E5%88%B0%E6%97%A5%E5%BF%97/</link>
      <pubDate>Sun, 26 Jul 2009 10:12:49 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/php%E4%B8%AD%E6%8A%8Aexception%E5%86%99%E5%85%A5%E5%88%B0%E6%97%A5%E5%BF%97/</guid>
      <description>PHP5中把Exception写入到日志，是比较好的方法，开发时可以随时查看，部署后也不用担心在页面上打印出一对信息造成不友好的体验和安全隐患。代码： &amp;lt;?php
error_reporting(E_ALL);
function exceptionLogger($exception) { $file = &amp;lsquo;exceptionLog.log&amp;rsquo;; file_put_contents($file,$exception-&amp;gt;__toString(),FILE_APPEND); echo &amp;ldquo;Sorry!I&amp;rsquo;m Sick&amp;hellip;&amp;quot;; }
set_exception_handler(&amp;lsquo;exceptionLogger&amp;rsquo;);
function connectToDatabase() {
if(!$conn = @mysql_connect(&#39;localhost&#39;, &#39;root&#39;, &#39;&#39;)) { throw new Exception; }  }
connectToDatabase(); ?</description>
    </item>
    
    <item>
      <title>使用nusoap时需要注意的地方, 说不定你正被这些问题困扰着</title>
      <link>https://kissjava.cn/posts/%E4%BD%BF%E7%94%A8nusoap%E6%97%B6%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E5%9C%B0%E6%96%B9-%E8%AF%B4%E4%B8%8D%E5%AE%9A%E4%BD%A0%E6%AD%A3%E8%A2%AB%E8%BF%99%E4%BA%9B%E9%97%AE%E9%A2%98%E5%9B%B0%E6%89%B0%E7%9D%80/</link>
      <pubDate>Fri, 24 Jul 2009 21:55:45 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E4%BD%BF%E7%94%A8nusoap%E6%97%B6%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E5%9C%B0%E6%96%B9-%E8%AF%B4%E4%B8%8D%E5%AE%9A%E4%BD%A0%E6%AD%A3%E8%A2%AB%E8%BF%99%E4%BA%9B%E9%97%AE%E9%A2%98%E5%9B%B0%E6%89%B0%E7%9D%80/</guid>
      <description>公司的项目用到了nusoap。也确实碰到了timeout的问题。正好search到这篇文章，于是转了。。。
原来做web service用的是pear的soap包, 最近换了公司后改成用nusoap了, 所以对nusoap也算比较熟悉了. 在用的过程中发现有些地方需要注意一下, 所以本文不说nusoap的使用方法, 只说一些需要注意的地方.
nusoap这个类变态的长, 所以一般鲜有人会先把他看一遍再开始用, 大多直接参照例子就开始用了. 我也是这样的, 当然刚开始是没问题的, 程序运行的很好, 但是到从试验性的使用到真正的和别的公司web service传输数据的时候就有问题了, 然后传输大量数据的时候又出现了新的问题.
下面就来说说.
首先在传输少量数据的时候, 用如下语句生成对象 $client = new soapclient($service_address, true);然后用如下语句调用对方web service的方法就行了 $result = $client-&amp;gt;call(&amp;lsquo;methodName&amp;rsquo;, $par);当然这个在我本机测试时是好的, 也就是我自己写的client端调用自己写的service端是好的. 但是当我用这个调用对方.NET的service端时就出问题了. 数据传不过去. 后来发现原来要用proxy. 在生成$client对象后调用如下方法 $proxy = $client-&amp;gt;getProxy();然后调用对方web service的语句改成 $result = $proxy-&amp;gt;methodName($par);就可以了.
下面那个使用proxy的方法我后来自己请求自己也测试通过, 就是说用proxy比较好, 至少都能用.
这个问题解决后, 测试了几天, 然后需要做load testing了, 几千条的数据一起测, 结果数据传输就掉了很多, 一查, 原来web service中途停了. 所以把php.ini的max_execution_time调长, memory_limit调大, 为了保险, 把max_input_time也调长了. 结果执行结果还是老样子. 所以只好回头研究nusoap类里的东西, 然后发现了$response_timeout这个东西, 默认是30, 我把他改成了900, 估计是900秒, 然后再次执行, OK了. 当然为了保险, 我把nusoap里的所有$response_timeout的值都改为了900 ^^
然后和$response_timeout类似的, 还有一个问题, 就是中文字符的问题.</description>
    </item>
    
    <item>
      <title>PHP中使用位运算实现简单的权限管理</title>
      <link>https://kissjava.cn/posts/php%E4%B8%AD%E4%BD%BF%E7%94%A8%E4%BD%8D%E8%BF%90%E7%AE%97%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</link>
      <pubDate>Thu, 23 Jul 2009 12:02:24 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/php%E4%B8%AD%E4%BD%BF%E7%94%A8%E4%BD%8D%E8%BF%90%E7%AE%97%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</guid>
      <description>//所有的权限 $final_allow = PUBLIC_ARTICLE | CREATE_ARTICLE | MODIFY_ARTICLE | DELETE_ARTICLE | SHARCH_ARTICLE | CREATE_COMMENT | DELETE_COMMENT; //增加权限使用 | echo &amp;quot;管理者拥有的全部权限：&amp;quot; .decbin($final_allow). &amp;quot;&amp;lt;br&amp;gt;&amp;quot;; $no_shearch_allow = $final_allow ^ SHARCH_ARTICLE; //删除权限使用 ^ 或 &amp;amp; ~ echo &amp;quot;仅无法搜索文章的权限：&amp;quot; .decbin($no_shearch_allow). &amp;quot;&amp;lt;br&amp;gt;&amp;quot;; //编辑人员独有的权限 $editor_allow = PUBLIC_ARTICLE | MODIFY_ARTICLE | DELETE_ARTICLE; $no_editor_allow = $final_allow &amp;amp; ~$editor_allow; echo &amp;quot;非编辑人员所有的权限：&amp;quot; .decbin($no_editor_allow). &amp;quot;&amp;lt;br&amp;gt;&amp;quot;; //判断权限使用 &amp;amp; ( 是, 返回非0; 不是, 返回0)  ?&amp;gt; 输出为：
管理者拥有的全部权限：1111111 仅无法搜索文章的权限：1101111 非编辑人员所有的权限：1110010</description>
    </item>
    
    <item>
      <title>忘记了zend studio for eclipse 怎么调试了</title>
      <link>https://kissjava.cn/posts/%E5%BF%98%E8%AE%B0%E4%BA%86zend-studio-for-eclipse-%E6%80%8E%E4%B9%88%E8%B0%83%E8%AF%95%E4%BA%86/</link>
      <pubDate>Tue, 21 Jul 2009 10:21:01 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%BF%98%E8%AE%B0%E4%BA%86zend-studio-for-eclipse-%E6%80%8E%E4%B9%88%E8%B0%83%E8%AF%95%E4%BA%86/</guid>
      <description>老是在netbeans和zend studio for eclipse跳来跳去的。
今天突然有段代码需要调试一下。正好用的是zend studio for eclipse。可是折腾来折腾去，别说默认断点在第一行了，就是其他设置的断点也都被直接越过，直接到底跑完程序-_-!!
这下淡水愣了，就像陶喆的《小镇姑娘》一样了，“不明白，不明白。。。”。赶紧去翻翻Gently的Zend Studio For Eclipse 6.1 视频教程-调试php程序。可是没啥发现啊，操作差不多啊。又回到他的教程列表，想淘淘看。忽然眼前一道光芒闪过，嗯，是的当时感觉就是如此。“服务器调试——Zend Debugger 的安装教程”映入我的眼前。原来，原来淡水忘记安装Zend Debugger了。Gently在Zend Studio For Eclipse 6.1 视频教程-调试php程序中并没有特别把安装Zend Debugger，着重提一下。而淡水又没仔细看，就。。。
说说怎样安装Zend Debugger吧，比较简单的。Gently的教程里都有写了。这里淡水给自己加深一下印象。
第一步：官网下载Zend Debugger，下载URL： http://downloads.zend.com/pdt/server-debugger/ZendDebugger-5.2.14-cygwin_nt-i386.zip请查zip下面的readme文件，可以看到5_2_x_comp目录为PHP 5.2.x所用的版本，把下面的ZendDebugger.dll copy 到php的扩展库目录${php_home}ext，把dummy.php copy到phpBB的部署的根目录下，dummy.php主要用来与浏览器安装的Zend Studio Toolbar通信。
第二步：配置php.ini文件，加入： [zend] zend_extension_ts=D:PHPPHP5.2.6extZendDebugger.dll zend_debugger.allow_hosts=127.0.0.1/10 zend_debugger.expose_remotely=always ;以上配置中的127.0.0.1/10代表127.0.0.1到127.0.0.10的地址段允许调试 以上橙色部分，淡水没有去做，这也不影响zend studio for eclipse的正常调试。</description>
    </item>
    
    <item>
      <title>关于PHP的mod_rewrite重写模块技术个人觉得最好的一篇文章</title>
      <link>https://kissjava.cn/posts/%E5%85%B3%E4%BA%8Ephp%E7%9A%84mod_rewrite%E9%87%8D%E5%86%99%E6%A8%A1%E5%9D%97%E6%8A%80%E6%9C%AF%E4%B8%AA%E4%BA%BA%E8%A7%89%E5%BE%97%E6%9C%80%E5%A5%BD%E7%9A%84%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</link>
      <pubDate>Thu, 16 Jul 2009 13:22:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%85%B3%E4%BA%8Ephp%E7%9A%84mod_rewrite%E9%87%8D%E5%86%99%E6%A8%A1%E5%9D%97%E6%8A%80%E6%9C%AF%E4%B8%AA%E4%BA%BA%E8%A7%89%E5%BE%97%E6%9C%80%E5%A5%BD%E7%9A%84%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</guid>
      <description>最近手里一个PHP项目要用到mod_rewrite模块，很早就听mod_rewrite广泛应用于URL重写，防止盗链，伪静态等各方面，于是怀着激动的心情到网上一阵猛搜，果然很多资料，窃喜&amp;hellip;..遗憾的是很多文章看了以后仍旧一团雾水，还是不得要领，甚为苦恼。正当山穷水尽的时候，一篇《Learn Apache mod_rewrite: 13 Real-world Examples》柳暗花明般走进了我的视线，读罢此文，眼前豁然开朗，手里的项目也渐渐有了眉目。由于原文是英文版本，在参考过程中还是费了许多周折，所以本人操起了早已生锈的英语砍刀，斗胆将其翻译过来，英语过关的还是建议看原文。在译文中有很多不恰当的地方，希望大家将就看吧，话不多说，上文。
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝一道华丽的分割线＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
原文地址：http://www.sitepoint.com/article/apache-mod_rewrite-examples/原文作者：DK Lynn（DK Lynn is a former instructor pilot and &amp;ldquo;rocket scientist&amp;rdquo; now living in New Zealand where he operates a small business developing and hosting web sites. ）
＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝二道华丽的分割线（以下为本人译文）＝＝＝＝＝＝＝＝＝＝
一个最常用的正则就是（.）。它含有两个元素：一是“点”，表示任意字符；二是“星”，表示以前的全部字符。所以（.）会匹配{REQUEST_URI}的所有字符。{REQUEST_URI}是URL中出去域名以及“？”符号的所有查询字符，也是Apache 重写技术尝试匹配的字符。包裹在正则表达式中的元素存放在“原子”内，它是在规则范围内允许被匹配的变量，所以以上正则存储了USA/California/San_Diego在“原子”中，为了解决我们的问题，我们需要三个“原子”，他们可以用左斜杠“/”进行分隔，所以正则表达式成了： (.)/(.)/(.)以上正则，在{REQUEST_URI}中通过两个“/”的分割存储了三个值，为了解决我们具体问题，我们得加一点限制――毕竟，第一个和最后一个原子可以匹配任何字符。 开始，我们可以添加一些特殊的字符，比如表示正则“开始”或者“结束”，“^”字符表示正则的开始而“$”表示正则的结束。 ^(.)/(.)/(.)$这个正则表示整个字符串将全部匹配，除去之前后者之后，没有任何例外。 但是，这个方法仍然匹配的范围太广，我们将匹配的字符按照原子形式存放，然后通过他们形成查询字符串，所以我们必须信任我们所匹配的字符。用(.*)匹配字符串，由于允许了太多字符，所以会存在潜在的安全隐患，引用不当会使mod_rewrite运行出故障。 为了避免一些不必要的麻烦，让我们更改一下我们的原子正则，让其更加准确的匹配我们允许的字符。因为这些原子代表了地区地名，所以我们完全可以用A到Z的大小写来表示他们，另外因为地名之间有空格，所以下划线“”也是被允许的。我们用中括弧明确我们匹配的正则，然后用短横线“-”表示连接的范围，所以被我们允许的正则修改成了[a-zA-Z],因为我们还要避免匹配到空名字，所以用“+”来匹配在该字符之前的一个或者多个字符，所以我们的正则成了： ^([a-zA-Z_]+)/([a-zA-Z_]+)/([a-zA-Z_]+)$ {REQUEST_URI}是以“/”开头。Apache 在更改版本的时候会更改正则引擎，一代Apache要求有斜杠而二代Apache却不允许！但是我们可以用^/?（？表示匹配字符本身或者前一个字符）来兼容两个版本的Apache，所以我们的正则又成了: ^/?([a-zA-Z_]+)/([a-zA-Z_]+)/([a-zA-Z_]+)$ 正则在手，我们就可以将原子标识到URL上了： display.php?country=$1 &amp;amp;state=$2&amp;amp;city=$3 $1表示国家原子；$2表示省州原子；$3表示城市原子，这里可以加上9个原子，分别用$1到$9表示。 现在我们要做的就是在该目录下创建一个新的.htaccess文件，录入一下代码： RewriteRule ^/?([a-zA-Z_]+)/([a-zA-Z_]+)/([a-zA-Z_]+)$ display.php?country=$1 &amp;amp;state=$2&amp;amp;city=$3 [L] 然后保存，重写规则必须写在一行并且用一个空格分开每一个参数，我们用[L]或者’last’表示匹配结束。（一会有更多flags介绍） 我们的重写规则已经创建完成， URL请求字符上各原子的值将经过我们匹配的正则，加上查询变量到我们的重写URL上。display.php将从查询字符中解析这些值，然后将他们送入数据库查询或者进行其他数据库操作。 如果你的正则只允许有限的几个国家，为了避免数据库错误，你可以在正则中加入一下被允许条件，例子如下： ^/?(USA|Canada|Mexico)/([a-zA-Z_]+)/([a-zA-Z_]+)$ 如果你关心查询字符串的大小写问题，由于你数据库对大写有严格的限制，那么你可以在正则表达式后面加一个[NC]FLAG位来忽略大小写，但是不要忘记在你通过$_GET 获取传递值的时候，把他们转换成小写。 如果你想用数字（0，1…..9）来表示具体的地区，那么需要更改正则中的([a-zA-Z_]+)成([0-9])来匹配单个数字，([0-9]{1,2})匹配两位数字（0到99）,([0-9]+)匹配多位数字，这个对匹配数据库ID之类的非常有用。RewriteCond 指令现在你已经学会了mod_rewrite的一些基本用法，现在我们来学习下怎样用RewirteCond指令来处理其他各类型的情况。当RewirteCond指令明确声明以后，mod_rewrite将根据它们做出相应的处理。 RewirteCond 指令的形式和RewriteRule有点类似，形式为：RewirteCond 被匹配的字符 正则 FLAG标识。逻辑FLAG标识 [OR],是非常有用的，记住所有RewirteCond 以及RewriteRule指令在[LAST]指令之前，所有的逻辑与关系都会被包含。 你可以用RewirteCond指令测试服务器变量，在this is the best list of server variables一文可以找到相关说明。 举一个列子，假设我们想将“www”放入你的域名中，首先你得测试你的服务器{HTTP_HOST}变量，看www.</description>
    </item>
    
    <item>
      <title>天很热但是也很蓝</title>
      <link>https://kissjava.cn/posts/%E5%A4%A9%E5%BE%88%E7%83%AD%E4%BD%86%E6%98%AF%E4%B9%9F%E5%BE%88%E8%93%9D/</link>
      <pubDate>Wed, 15 Jul 2009 20:39:41 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%A4%A9%E5%BE%88%E7%83%AD%E4%BD%86%E6%98%AF%E4%B9%9F%E5%BE%88%E8%93%9D/</guid>
      <description>人穷，只好用Lg ks20 拍两张意思一下 -_-
地点：MP现代广场
时间：上午8时</description>
    </item>
    
    <item>
      <title>Kohana:敏捷的 PHP 框架</title>
      <link>https://kissjava.cn/posts/kohana-%E6%95%8F%E6%8D%B7%E7%9A%84-php-%E6%A1%86%E6%9E%B6/</link>
      <pubDate>Tue, 14 Jul 2009 09:45:34 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/kohana-%E6%95%8F%E6%8D%B7%E7%9A%84-php-%E6%A1%86%E6%9E%B6/</guid>
      <description>其实是Kohana v2.3.4入门教程。通过一个简单的项目说明了kohana的mvc架构和数据库类和kohana助手（helper）的用法。
原文：Kohana: The Swift PHP Framework作者：Cristian Gilè 中文翻译：淡水因为实在是太长了，所以做成PDF了。
Kohana the swift PHP framework</description>
    </item>
    
    <item>
      <title>input、select等表单元素与相邻文字对齐</title>
      <link>https://kissjava.cn/posts/inputselect%E7%AD%89%E8%A1%A8%E5%8D%95%E5%85%83%E7%B4%A0%E4%B8%8E%E7%9B%B8%E9%82%BB%E6%96%87%E5%AD%97%E5%AF%B9%E9%BD%90/</link>
      <pubDate>Sun, 21 Jun 2009 12:30:38 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/inputselect%E7%AD%89%E8%A1%A8%E5%8D%95%E5%85%83%E7%B4%A0%E4%B8%8E%E7%9B%B8%E9%82%BB%E6%96%87%E5%AD%97%E5%AF%B9%E9%BD%90/</guid>
      <description>以前都是把多选框放到一个单独的表格单元格。 现在才知道，用css更简单：</description>
    </item>
    
    <item>
      <title>系统时间不准确造成 IE 下 Kohana 的 Captcha 库验证失败</title>
      <link>https://kissjava.cn/posts/%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E4%B8%8D%E5%87%86%E7%A1%AE%E9%80%A0%E6%88%90-ie-%E4%B8%8B-kohana-%E7%9A%84-captcha-%E5%BA%93%E9%AA%8C%E8%AF%81%E5%A4%B1%E8%B4%A5/</link>
      <pubDate>Tue, 16 Jun 2009 10:08:25 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E4%B8%8D%E5%87%86%E7%A1%AE%E9%80%A0%E6%88%90-ie-%E4%B8%8B-kohana-%E7%9A%84-captcha-%E5%BA%93%E9%AA%8C%E8%AF%81%E5%A4%B1%E8%B4%A5/</guid>
      <description>淡水碰到了，记下来备忘。
作者：Hily 原始链接：http://hily.me/blog/2009/04/system-time-kohana-captcha-fail/ 版权声明：可以转载，转载时务必以超链接形式标明文章原始出处和作者信息及版权声明
好糗……
最近玩 Kohana 碰到太多诡异的问题，比如所有模板都要以 UTF8 无 BOM 的编码格式保存，否则 IE 下显示会有问题。自己写的 helper 类也要保存成 UTF8 无 BOM 的编码格式，否则也会出现类似的问题。
这一系列诡异的问题，把我原本清晰的思路也被搞乱了。
测试代码（使用 Kohana 文档上的）：
// Load Captcha library, you can supply the name of the config group you would like to use. $captcha = new Captcha; // Ban bots (that accept session cookies) after 50 invalid responses. // Be careful not to ban real people though! Set the threshold high enough.</description>
    </item>
    
    <item>
      <title>一点代码，体验严谨</title>
      <link>https://kissjava.cn/posts/%E4%B8%80%E7%82%B9%E4%BB%A3%E7%A0%81%E4%BD%93%E9%AA%8C%E4%B8%A5%E8%B0%A8/</link>
      <pubDate>Thu, 04 Jun 2009 15:59:46 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E4%B8%80%E7%82%B9%E4%BB%A3%E7%A0%81%E4%BD%93%E9%AA%8C%E4%B8%A5%E8%B0%A8/</guid>
      <description> $type = $this-&amp;gt;input-&amp;gt;post(&amp;quot;type&amp;quot;); $keyword = $this-&amp;gt;input-&amp;gt;post(&amp;quot;keyword&amp;quot;); if(empty($keyword)){ echo &#39;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;&#39;; echo &amp;quot;alert(&#39;搜索的关键词，不能为空！&#39;);&amp;quot;; echo &amp;quot;&amp;lt;/script&amp;gt;&amp;quot;; $this-&amp;gt;listnews(); }else{ if($type==&amp;quot;title&amp;quot;){ $newslist = ORM :: factory(&#39;news&#39;)-&amp;gt;like(&amp;quot;title&amp;quot;,$keyword)-&amp;gt;find_all(); }elseif($type==&amp;quot;content&amp;quot;){ $newslist = ORM :: factory(&#39;news&#39;)-&amp;gt;like(&amp;quot;content&amp;quot;,$keyword)-&amp;gt;find_all(); }else{ $newslist = ORM :: factory(&#39;news&#39;)-&amp;gt;orlike(array(&amp;quot;title&amp;quot;=&amp;gt;$keyword,&amp;quot;content&amp;quot;=&amp;gt;$keyword))-&amp;gt;find_all(); } $news = new View(&#39;admin/searchNews&#39;); $news-&amp;gt;newslist = $newslist; $this-&amp;gt;template-&amp;gt;content = $news; } }   $type = $this-&amp;gt;input-&amp;gt;post(&amp;quot;type&amp;quot;); $keyword = $this-&amp;gt;input-&amp;gt;post(&amp;quot;keyword&amp;quot;); if(empty($keyword)){ echo &#39;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;&#39;; echo &amp;quot;alert(&#39;搜索的关键词，不能为空！&#39;);&amp;quot;; echo &amp;quot;&amp;lt;/script&amp;gt;&amp;quot;; $this-&amp;gt;listnews(); } if($type==&amp;quot;title&amp;quot;){ $newslist = ORM :: factory(&#39;news&#39;)-&amp;gt;like(&amp;quot;title&amp;quot;,$keyword)-&amp;gt;find_all(); }elseif($type==&amp;quot;content&amp;quot;){ $newslist = ORM :: factory(&#39;news&#39;)-&amp;gt;like(&amp;quot;content&amp;quot;,$keyword)-&amp;gt;find_all(); }else{ $newslist = ORM :: factory(&#39;news&#39;)-&amp;gt;orlike(array(&amp;quot;title&amp;quot;=&amp;gt;$keyword,&amp;quot;content&amp;quot;=&amp;gt;$keyword))-&amp;gt;find_all(); } $news = new View(&#39;admin/searchNews&#39;); $news-&amp;gt;newslist = $newslist; $this-&amp;gt;template-&amp;gt;content = $news; }  </description>
    </item>
    
    <item>
      <title>Netbeans 的自选代码折叠（Code Folding）</title>
      <link>https://kissjava.cn/posts/netbeans-%E7%9A%84%E8%87%AA%E9%80%89%E4%BB%A3%E7%A0%81%E6%8A%98%E5%8F%A0code-folding/</link>
      <pubDate>Tue, 02 Jun 2009 17:13:56 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/netbeans-%E7%9A%84%E8%87%AA%E9%80%89%E4%BB%A3%E7%A0%81%E6%8A%98%E5%8F%A0code-folding/</guid>
      <description>-_-!!!这里长草了，来除草了。最近试用netbeans for php，感觉不错。里面的代码折叠比较好看，也好用。 不过自选代码的折叠，还是要深挖一下才出来的。eclipse 系列的 php IDE，的自选代码折叠怎么搞呢？不晓得。也许徐徐知道,自己问去吧XD
//嗯，netbeans4php越来越好用了。</description>
    </item>
    
    <item>
      <title>学习php中的soap</title>
      <link>https://kissjava.cn/posts/%E5%AD%A6%E4%B9%A0php%E4%B8%AD%E7%9A%84soap/</link>
      <pubDate>Mon, 18 May 2009 17:36:02 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%AD%A6%E4%B9%A0php%E4%B8%AD%E7%9A%84soap/</guid>
      <description>淡水摸索了一阵子。 说说吧，先说说wsdl文件的建立。 用zend studio for eclipse 或是 easyeclipse for php都可以建立。但是zse方便一些。例如提供一个简单的加法服务： sum.php</description>
    </item>
    
    <item>
      <title>windows下基于apache的subversion（svn）的安装</title>
      <link>https://kissjava.cn/posts/windows%E4%B8%8B%E5%9F%BA%E4%BA%8Eapache%E7%9A%84subversionsvn%E7%9A%84%E5%AE%89%E8%A3%85/</link>
      <pubDate>Wed, 13 May 2009 10:15:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/windows%E4%B8%8B%E5%9F%BA%E4%BA%8Eapache%E7%9A%84subversionsvn%E7%9A%84%E5%AE%89%E8%A3%85/</guid>
      <description>上午折腾了一下，可以写个详细步骤出来了。 预期目标：搭建一个apache下的svn服务，服务地址 http://localhost/svn
本地环境：已经装有xampplite集成环境。 svn的服务目录为D:svnroot 已经安装好了小乌龟（TortoiseSVN）
安装步骤：1，下载的适用于windows的Subversion，我下载的是Setup-Subversion-1.5.3.msi 这里注意要和apache的版本对应，我是apache2.2的。 双击安装它，这个没说头。 2，从subversion的安装目录Subversionbin下复制相应的文件到apache的modules目录中 有三个，libdb44.dll mod_authz_svn.so mod_dav_svn.so （淡水还把Subversionbin下所有的dll文件都复制到了apache的bin下） 3，配置apache的httpd.conf文件 这个是个容易出差错的地方 把下两行的注释去掉：
所有人可以读，管理员可以写 [svn:/] @g_admin = rw
 = r  [svn:/机密文件] @g_admin = rw
 =  [svn:/公告文件] @g_admin = rw
 = r  [svn:/测试组] @g_admin = rw @g_test = rw
 =  如果是多个库，则权限文件类似以下
所有人可以读，管理员可以写 [/] @g_admin = rw
 = r  [khn:/] @g_admin = rw
 =  [ci170:/] @g_admin = rw @g_test = rw</description>
    </item>
    
    <item>
      <title>PHP5的SOAP扩展</title>
      <link>https://kissjava.cn/posts/php5%E7%9A%84soap%E6%89%A9%E5%B1%95/</link>
      <pubDate>Mon, 11 May 2009 17:09:07 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/php5%E7%9A%84soap%E6%89%A9%E5%B1%95/</guid>
      <description>简介PHP的SOAP扩展可以用来提供和使用Web services。换句话说，PHP开发者可以利用这个PHP扩展来写他们自己的Web services，也可以写一些客户端来使用已有的Web services。
PHP5中的这个SOAP扩展目的是为了实现PHP对Web services的支持。与其它实现PHP对Web services的支持的方法不同，SOAP扩展是用C写的，因此它比其它方法（比较出名的Nusoap类）具有速度优势。
SOAP扩展支持以下规范。
 SOAP 1.1 SOAP 1.2 WSDL 1.1  SOAP扩展主要用来处理RPC形式的Web services。不过，你也可以使用文本形式的WSDL文件配合WSDL模式的服务端和客户端。
这个扩展使用 GNOME XML库来处理XML。
扩展中的类 这个扩展实现了6个类。 其中有三个高级的类，它们的方法很有用，它们是 SoapClient，SoapServer和SoapFault。 另外三个类除了构造器外没有其它别的方法，这三个是低级的类，它们是SoapHeader，SoapParam和SoapVar。 SoapClient类这个类用来使用Web services。SoapClient类可以作为给定Web services的客户端。 它有两种操作形式：
 WSDL 模式 Non-WSDL 模式  在WSDL模式中，构造器可以使用WSDL文件名作为参数，并从WSDL中提取服务所使用的信息。
non-WSDL模式中使用参数来传递要使用的信息。这个类有许多可以用来使用服务的有用的方法。其中SoapClient::__soapCall()是最重要的。这个方法可以用来调用服务中的某个操作。
SoapServer类这个类可以用来提供Web services。与SoapClient类似，SoapServer也有两种操作模式：WSDL模式和non-WSDL模式。这两种模式的意义跟 SoapClient的两种模式一样。在WSDL模式中，服务实现了WSDL提供的接口；在non-WSDL模式中，参数被用来管理服务的行为。
在SoapServer类的众多方法中，有三个方法比较重要。它们是SoapServer::setClass()，SoapServer::addFunction()和SoapServer::handle()。
SoapServer::setClass()方法设定用来实现Web Service的类。SoapServer::setClass所设定的类中的所有公共方法将成为Web Services的操作(operation)。
SoapServer::addFunction()方法用来添加一个或多个作为Web Services操作(operation)的函数。
SoapServer:: handle()方法指示Web Service脚本开始处理进入的请求。Web Service脚本是用PHP脚本写的一个或多个SoapServer对象的实例。尽管你可以有不止一个的SoapServer对象，但通常的习惯是一个脚本只拥有一个SoapServer实例。在调用SoapServer::handle()方法之前，Web Service脚本会使用设置在SoapServer对象实例上的任何信息来处理进入的请求和输出的相应。
SoapFault类这个类从Exception类继承而来，可以用来处理错误。SoapFault实例可以抛出或获取Soap错误的相关信息并按程序员的请求处理。
SoapHeader类这个类可以用来描述SOAP headers。它只是一个只包含构造器方法的数据容器。
SoapParam类SoapParam也是一个只包含构造器方法的数据容器。这个方法可以用来描述传递给Web services操作的参数。在non-WSDL模式中这是一个很有用的类，可以用来传递所期望格式的参数信息。
SoapVar类SoapVar也是一个只包含构造器的低级类，与SoapHeader和SoapParam类相似。这个类可以用来给一个Web services操作传递编码参数。这个类对non-WSDL中传递类型信息是非常有用的。
WSDL VS. non-WSDL模式Web Services有两种实现模式：契约先行(Contract first)模式和代码先行(Code first)模式。
契约先行模式使用了一个用XML定义的服务接口的WSDL文件。WSDL文件定义了服务必须实现或客户端必须使用的接口。SoapServer和SoapClient的WSDL模式就基于这个概念。
在代码先行模式中，首先要先写出实现服务的代码。然后在大多数情况下，代码会产生一个契约，换种说法，一个WSDL。接着客户端在使用服务的时候就可以使用那个WSDL来获得服务的接口。尽管如此，PHP5的扩展并没有从代码输出一个WSDL的规定，考虑到这种情况，可以在non-WSDL模式下使用 SoapServer和SoapClient。
SOAP扩展与Hello World这一节介绍如何使用WSDL模式和non-WSDL模式来实现服务和客户端。相对而言，使用WSDL模式来实现服务和客户端会比较容易，假定已经有一个定义了接口的WSDL文件。（淡水对WSDL还比较陌生，就只关注non-wsdl模式了。）</description>
    </item>
    
    <item>
      <title>php5下web service的大致浏览(注意php调用.net的web services的方式)</title>
      <link>https://kissjava.cn/posts/php5%E4%B8%8Bweb-service%E7%9A%84%E5%A4%A7%E8%87%B4%E6%B5%8F%E8%A7%88%E6%B3%A8%E6%84%8Fphp%E8%B0%83%E7%94%A8.net%E7%9A%84web-services%E7%9A%84%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Mon, 11 May 2009 16:48:42 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/php5%E4%B8%8Bweb-service%E7%9A%84%E5%A4%A7%E8%87%B4%E6%B5%8F%E8%A7%88%E6%B3%A8%E6%84%8Fphp%E8%B0%83%E7%94%A8.net%E7%9A%84web-services%E7%9A%84%E6%96%B9%E5%BC%8F/</guid>
      <description>嗯，又找到一些好玩的东西，web service。 有个叫Nusoap类，在php4下比较流行。但是淡水这次玩的是php5，所以他就没戏了。 先恶补一下相关知识。 先要打开php5的web service扩展。linux下，嗯，好像不会-_-!。windows下，把php.ini文件中 extension=php_soap.dll 去掉注释即可。 方法： SoapClient-&amp;gt;__soapCall() 说明： class SoapClient { mixed __soapCall ( string function_name, array arguments [, array options [, mixed input_headers [, array &amp;amp;output_headers]]]) } In WSDL mode, you can simply call SOAP functions as SoapClient methods. This method useful in non-WSDL mode when soapaction is unknown, uri differs from the default or when sending and/or receiving SOAP Headers 返回值： 一个简单类型的返回值，或是一个关联数组 例子： SOAP发送的协议：
POST /servicepath/service.</description>
    </item>
    
    <item>
      <title>kohana版企业站范例进行中</title>
      <link>https://kissjava.cn/posts/kohana%E7%89%88%E4%BC%81%E4%B8%9A%E7%AB%99%E8%8C%83%E4%BE%8B%E8%BF%9B%E8%A1%8C%E4%B8%AD/</link>
      <pubDate>Sat, 02 May 2009 06:51:31 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/kohana%E7%89%88%E4%BC%81%E4%B8%9A%E7%AB%99%E8%8C%83%E4%BE%8B%E8%BF%9B%E8%A1%8C%E4%B8%AD/</guid>
      <description>以前是用codeigniter做的，但是为了更敏捷的开发，提高生产效率（其实是要偷懒），所以开始摸索kohana，并为之着迷（主要是ORM）。
为了尽快上手kohana，所以把以前公布的企业站又用kohana改写一番。 现在前端已经完成。
kohana版，为了简化代码，使用了ORM Codeigniter版，采用了他提供的AR
可以自己感觉一下执行效率如内存占用
kohana版http://tsingfeng.sinaapp.com/khn一般结果：Page rendered in 0.0301 seconds.UseMem 1.62MB.
Codeigniter版http://tsingfeng.sinaapp.com/ci一般结果：Page rendered in 0.0248 seconds.UseMem 1.78MB.
淡水没有专业的测试经验，只是凭框架本身提供的简陋数据和直觉判断。差不多了，如果空间支持php5最好还是用kohana，可以比较快些完成工作^_^
2009.5.3 update: 给kohana版的加上了含分页的新闻列表页面 http://tsingfeng.</description>
    </item>
    
    <item>
      <title>Kohana 与JQUERY实现连动</title>
      <link>https://kissjava.cn/posts/kohana-%E4%B8%8Ejquery%E5%AE%9E%E7%8E%B0%E8%BF%9E%E5%8A%A8/</link>
      <pubDate>Thu, 23 Apr 2009 16:10:25 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/kohana-%E4%B8%8Ejquery%E5%AE%9E%E7%8E%B0%E8%BF%9E%E5%8A%A8/</guid>
      <description>控制器 /**
 ajax加载城市分类   */ public function load_cities($id) { $id = (int) $id; if (!$id) { exit(&amp;quot;{result:0,msg:&amp;lsquo;错误的城市编号&amp;rsquo;}&amp;quot;); } $cities = ORM::factory(&amp;lsquo;city&amp;rsquo;); $cats = $cities-&amp;gt;where(&amp;lsquo;province_id&amp;rsquo;,$id)-&amp;gt;select_list(&amp;lsquo;id&amp;rsquo;,&amp;lsquo;name&amp;rsquo;); if (!count($cats)) { $cats = array(); } ksort($cats); exit(&amp;quot;{result:1,msg:&amp;quot;.json_encode($cats).&amp;quot;}&amp;quot;); }
public function index() { //生成省市下拉列表 $provinces = ORM::factory(&amp;lsquo;province&amp;rsquo;)-&amp;gt;select_list(&amp;lsquo;id&amp;rsquo;,&amp;lsquo;name&amp;rsquo;); $provinces[&#39;&#39;] = &amp;lsquo;未选择&amp;rsquo;; ksort($provinces); $this-&amp;gt;template-&amp;gt;provinces = $provinces; if ($data[&amp;lsquo;province_id&amp;rsquo;]) { $cities = ORM::factory(’city’)-&amp;gt;where(’province_id’,$data[&amp;lsquo;province_id&amp;rsquo;])-&amp;gt;select_list(’id’,&amp;lsquo;name&amp;rsquo;); } $cities[&#39;&#39;] = &amp;lsquo;未选择&amp;rsquo;; ksort($cities); $this-&amp;gt;template-&amp;gt;cities = $cities; $this-&amp;gt;add_script(&amp;lsquo;home/js/company/add.js?3&amp;rsquo;); } view }); </description>
    </item>
    
    <item>
      <title>kohana一个工程下面建立多个项目app</title>
      <link>https://kissjava.cn/posts/kohana%E4%B8%80%E4%B8%AA%E5%B7%A5%E7%A8%8B%E4%B8%8B%E9%9D%A2%E5%BB%BA%E7%AB%8B%E5%A4%9A%E4%B8%AA%E9%A1%B9%E7%9B%AEapp/</link>
      <pubDate>Thu, 23 Apr 2009 16:00:35 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/kohana%E4%B8%80%E4%B8%AA%E5%B7%A5%E7%A8%8B%E4%B8%8B%E9%9D%A2%E5%BB%BA%E7%AB%8B%E5%A4%9A%E4%B8%AA%E9%A1%B9%E7%9B%AEapp/</guid>
      <description>其实核心的意思就是使用多个application文件夹，而共享一个system和module
请参考文章：http://learn.kohanaphp.com/2008/08/15/initial-setup-of-a-kohana-project-revisited/ 具体办法就是建立类似的文件夹结构：
app_admin // administration application app_sales // sales application app_public // public website modules system webroot 然后注意写配置文件就OK了
app_admin/config/config.php: $config[&amp;lsquo;site_domain&amp;rsquo;] = ‘localhost/admin/’;
app_sales/config/config.php: $config[&amp;lsquo;site_domain&amp;rsquo;] = ‘localhost/sales/’;
app_public/config/config.php: $config[&amp;lsquo;site_domain&amp;rsquo;] = ‘localhost/’;</description>
    </item>
    
    <item>
      <title>Kohana的Events和Hooks研究</title>
      <link>https://kissjava.cn/posts/kohana%E7%9A%84events%E5%92%8Chooks%E7%A0%94%E7%A9%B6/</link>
      <pubDate>Thu, 23 Apr 2009 15:59:38 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/kohana%E7%9A%84events%E5%92%8Chooks%E7%A0%94%E7%A9%B6/</guid>
      <description>Kohana是一个使用PHP5的面向对象的MVC框架，是从CodeIgniter衍生出来，研究了几天，感觉还不错，就是它的文档实在太简陋了，在看到它的Events机制和Hooks机制时，确实有点不明白，文档上说的实在太简单了，后来我在Google上搜索了一下，找到两篇文章《Events and hooks in Kohana》和《Practical Kohana Hooks example: PHPIDS》，上面讲了一下Kohana的Events和Hooks，并举了例子，我也开始慢慢理解了它的含义。
在Kohana的Events中，默认定义了很多的Events（例如system.ready、system.pre_controller等等），中文理解就是事件，也就是触发点，在程序在运行到某个位置时，会被触发，具体就是调用Event::run方法，我们在Kohana.php里可以看到在不同的位置执行了不同的Event::run方法，那么Hooks的意义在于当一个事件被触发之前，可以通过已加载的Hooks来修改事件的回调，有点绕口，说白了就是在事件发生之前，做点事情，举个例子，你安排了今天的日程，下午3点要开会，那么在3点开会就是一个Event（事件），那么到3点的时刻，你希望提醒你一下，你在你的手机里定了一个闹钟，在3点的时候会响，这就是一个Hook，可以看出Hook是基于Event的。
我们可以创建自己的Hook程序，并加载如默认的Events里，但是默认的Events不一定能满足我们的需要，比如我们在Web应用中经常使用的权限校验，判断这个用户是否登陆过，我们虽然可以使用默认Events里的system.pre_controller，但是这个Event是针对所有的Controller的，有些Controller是不需要校验用户的，还好Kohana允许自己定义Event，下面我们还是举例说明吧。
要使用Hooks，首先要在application/config/config.php里将$config[&amp;lsquo;enable_hooks&amp;rsquo;]置为TRUE。
之后我们定义自己的Event，我们在application/controllers目录下建立base.php，代码如下： class Base_Controller extends Controller {
public function __construct() { parent::__construct(); Event::run(&amp;quot;base.construct&amp;quot;); }	 } 我们继承了Kohana的Controller，在构造函数里定义了Event，名字叫“base.construct”，以后我们的Controller都继承自Base_Controller，那么在对象创建的时候都会触发base.construct事件。
Hook的文件放在application/hooks下，我们就创建一个hook文件sessioncheck.php，代码如下： class SessionCheck {
public function check() { echo &amp;quot;check session ...&amp;quot;; }  }
Event::add(&amp;lsquo;base.construct&amp;rsquo;, array(&amp;lsquo;SessionCheck&amp;rsquo;,&amp;lsquo;check&amp;rsquo;)); 我们将SessionCheck的check方法加载到了base.construct事件上，也就是在触发base.construct事件之前，会执行SessionCheck的check方法。
接下来我们写一个Controller，在application/controllers目录下建立first.php，代码如下： class First_Controller extends Base_Controller {
public function index() { echo &amp;quot;First - index&amp;quot;; exit(); }  } 我们执行一下看看会有什么提示，http://localhost/kohana/first，显示
check session …First - index</description>
    </item>
    
    <item>
      <title>Kohana的Cache</title>
      <link>https://kissjava.cn/posts/kohana%E7%9A%84cache/</link>
      <pubDate>Thu, 23 Apr 2009 15:59:13 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/kohana%E7%9A%84cache/</guid>
      <description>Kohana里有个Cache Library，我今天就测试了一下。
首先要配置，将system/config下的cache.php复制到application/config下，打开cache.php文件，我们看一下内容
在应用中，可能需要不止一个缓存，所以可以配置多个缓存，增加$config数组即可，还有在file方式下可以为每个缓存设置单独文件路径，但前提是文件路径要存在，例如我们增加一个
public function index() { $mychache = Cache::instance(&amp;quot;my&amp;quot;); $mychache-&amp;gt;set(&amp;quot;name&amp;quot;,&amp;quot;laoer&amp;quot;); echo &amp;quot;OK&amp;quot;; } public function name() { $mychache= Cache::instance(&amp;quot;my&amp;quot;); $name = $mychache-&amp;gt;get(&amp;quot;name&amp;quot;); echo $name; }  } Cache::instance(”my”)实例化配置里$config[&amp;lsquo;my&amp;rsquo;]的cache，如果用Cache::instance()就是实例化配置里$config[&amp;lsquo;default&amp;rsquo;]的cache，在浏览器里执行，已经可以存取了，在application/cache/my/文件下可以看到一个名为”name~~0″的文件，里面就是序列化的数据。
文件cache还是有一定的局限性，现在越来越的网站开始使用Memcached所谓缓存的解决方案，Kohana的缓存驱动里，有Memcached的支持，但它的文档却没有给出Memcached的配置例子，看来要自己摸索一下。
将system/config下的cache_memcache.php复制到application/config下，cache_memcache.php的内容如下
/**
 Enable cache data compression. */ $config[&amp;lsquo;compression&amp;rsquo;] = FALSE; 根据你自己的情况修改Memcached的服务地址和端口，在application/config/cache.php里再加一段 $config[&amp;lsquo;mem&amp;rsquo;] = array ( &amp;lsquo;driver&amp;rsquo; =&amp;gt; &amp;lsquo;memcache&amp;rsquo;, &amp;lsquo;params&amp;rsquo; =&amp;gt; &amp;lsquo;&amp;rsquo;, &amp;lsquo;lifetime&amp;rsquo; =&amp;gt; 1800, &amp;lsquo;requests&amp;rsquo; =&amp;gt; 1000 ); 在Controller里把Cache::instance(”my”)改为Cache::instance(”mem”)，运行看看结果，已经可以从Memcahced里存取了。  Kohana的Memcached驱动还是有些缺陷，现在只能使用一组Memcached，即$config[&amp;lsquo;servers&amp;rsquo;]这个参数，我觉得Memcacahed组也应该是多个，因为从业务角度会根据功能对cache做划分，我大概看了一下system/libraries/drivers/Cache/Memcache.php文件，应该是可以改造的，还有一点，编译PHP的时候要安装Memcached的支持。
from：http://i.laoer.com/</description>
    </item>
    
    <item>
      <title>牛刀：“小阳春”突破的是法律的底线</title>
      <link>https://kissjava.cn/posts/%E7%89%9B%E5%88%80%E5%B0%8F%E9%98%B3%E6%98%A5%E7%AA%81%E7%A0%B4%E7%9A%84%E6%98%AF%E6%B3%95%E5%BE%8B%E7%9A%84%E5%BA%95%E7%BA%BF/</link>
      <pubDate>Sun, 12 Apr 2009 11:44:35 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E7%89%9B%E5%88%80%E5%B0%8F%E9%98%B3%E6%98%A5%E7%AA%81%E7%A0%B4%E7%9A%84%E6%98%AF%E6%B3%95%E5%BE%8B%E7%9A%84%E5%BA%95%E7%BA%BF/</guid>
      <description>打算买房，收些资料。 http://qzone.qq.com/blog/348973589-1239434360</description>
    </item>
    
    <item>
      <title>ci中文转拼音的library</title>
      <link>https://kissjava.cn/posts/ci%E4%B8%AD%E6%96%87%E8%BD%AC%E6%8B%BC%E9%9F%B3%E7%9A%84library/</link>
      <pubDate>Tue, 31 Mar 2009 12:28:15 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/ci%E4%B8%AD%E6%96%87%E8%BD%AC%E6%8B%BC%E9%9F%B3%E7%9A%84library/</guid>
      <description>拼装了一个codeigniter的中文转拼音的library。 使用方法： $this-&amp;gt;load-&amp;gt;library(&amp;lsquo;utf8pinyin&amp;rsquo;,&#39;&amp;rsquo;,&amp;lsquo;py&amp;rsquo;); $data[&amp;ldquo;page_title&amp;rdquo;] = $this-&amp;gt;py-&amp;gt;str2py(&amp;lsquo;昆山风神贸易有限公司成立于2007年&amp;rsquo;); //KunShanFengShenMaoYiYouXianGongSiChengLiYu2007Nian str2py($str,$boolquanpin=true,$booldaxie=true)$str是要转的中文；$boolquanpin是否全拼，默认全拼；$booldaxie首字母是否大写，默认大写。 utf8pinyin</description>
    </item>
    
    <item>
      <title>Simple flexible Caching of parts of code - MP_Cache</title>
      <link>https://kissjava.cn/posts/simple-flexible-caching-of-parts-of-code-mp_cache/</link>
      <pubDate>Sat, 28 Mar 2009 23:30:48 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/simple-flexible-caching-of-parts-of-code-mp_cache/</guid>
      <description>如标题所言，确实是简单灵活。看来想要摆脱Codeigniter越来越难了。 看看怎样使用吧 首先，在config.php中设置一下缓存目录，这个目录要存在且可写入 $config[&amp;lsquo;mp_cache_dir&amp;rsquo;] = &amp;lsquo;application/mp_cache/&#39;; 好了，现在看看代码 /加载library，可以放在构造函数中/ $this-&amp;gt;load-&amp;gt;library(&amp;lsquo;MP_Cache&amp;rsquo;); /抓取名为listNews的缓存/ $listNews = $this-&amp;gt;mp_cache-&amp;gt;get(&amp;lsquo;listNews&amp;rsquo;); if($listNews===false){ //没有缓存数据，则查询数据库 $listNews = $this-&amp;gt;News_model-&amp;gt;getNewslist(&amp;lsquo;guest&amp;rsquo;)-&amp;gt;result(); //创建缓存，命名为listNews。在mp_cache目录下就生成了listNews.cache文件，内容是序列化的数据 $this-&amp;gt;mp_cache-&amp;gt;write($listNews, &amp;lsquo;listNews&amp;rsquo;); } $data[&amp;lsquo;listNews&amp;rsquo;]= $listNews; $this-&amp;gt;layout-&amp;gt;view(&amp;lsquo;news&amp;rsquo;, $data); 两个注意点：1，缓存数据，必须是data，而不是resource id。如，在使用AR后用result(),result_array()等返回的数据 2，缓存名不要重复。可以使用子文件夹分隔。如，$listNews = $this-&amp;gt;mp_cache-&amp;gt;get(&amp;lsquo;news/listNews&amp;rsquo;);同样创建缓存数据片段用$this-&amp;gt;mp_cache-&amp;gt;write($listNews, &amp;lsquo;news/listNews&amp;rsquo;);（php5下news文件夹会自动创建） 其他方法： $this-&amp;gt;mp_cache-&amp;gt;delete($filename) 删除名为$filename的cache.</description>
    </item>
    
    <item>
      <title>徐徐的Zend studio For Eclipse 教程</title>
      <link>https://kissjava.cn/posts/%E5%BE%90%E5%BE%90%E7%9A%84zend-studio-for-eclipse-%E6%95%99%E7%A8%8B/</link>
      <pubDate>Mon, 23 Mar 2009 10:01:58 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%BE%90%E5%BE%90%E7%9A%84zend-studio-for-eclipse-%E6%95%99%E7%A8%8B/</guid>
      <description>如题，好东西啊 不说废话，给出地址 zend studio 6.1中文视频教程-快速入门http://www.zendstudio.net/zend_studio-6_1-getting-start/ 感谢徐徐的工作，好淫啊 :)</description>
    </item>
    
    <item>
      <title>改进layout library，方便自定义layout</title>
      <link>https://kissjava.cn/posts/%E6%94%B9%E8%BF%9Blayout-library%E6%96%B9%E4%BE%BF%E8%87%AA%E5%AE%9A%E4%B9%89layout/</link>
      <pubDate>Wed, 18 Mar 2009 22:58:44 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E6%94%B9%E8%BF%9Blayout-library%E6%96%B9%E4%BE%BF%E8%87%AA%E5%AE%9A%E4%B9%89layout/</guid>
      <description>CodeIgniter使用 layout library 简化视图布局中，有些小的缺陷，不能在controller中加载类的同时设定自己的layout。貌似在CI1.6.1时可以的，方式：$this-&amp;gt;load-&amp;gt;library(&amp;lsquo;layout&amp;rsquo;,&amp;lsquo;template&amp;rsquo;);自定义的layout就是template。但是现在CI1.7.0+,loader不一样了。 library($library,$paramsAarry,$objName),有三个参数了。第一个必须的是要加载的library，后面的分别是配置数组和自定义对象名称。 所以，$this-&amp;gt;load-&amp;gt;library(&amp;lsquo;layout&amp;rsquo;,&amp;lsquo;template&amp;rsquo;)就不适用了。于是淡水就把layout library改写了一下。 function index() { $data[&amp;quot;page_title&amp;quot;] = &amp;quot;联系我们&amp;quot;; $this-&amp;gt;layout-&amp;gt;view(&#39;contact&#39;, $data); }  function index() { $data[&amp;quot;page_title&amp;quot;] = &amp;quot;联系我们&amp;quot;; # 下面就是使用自定义的对象名 mytemp $this-&amp;gt;mytemp-&amp;gt;view(&#39;contact&#39;, $data); }  </description>
    </item>
    
    <item>
      <title>ADODB的简单使用</title>
      <link>https://kissjava.cn/posts/adodb%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 18 Mar 2009 12:48:44 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/adodb%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;p&gt;最近要用到它吧，于是淡水就整理了一下&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    
    <item>
      <title>PHP5的重载</title>
      <link>https://kissjava.cn/posts/php5%E7%9A%84%E9%87%8D%E8%BD%BD/</link>
      <pubDate>Sun, 08 Mar 2009 17:54:12 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/php5%E7%9A%84%E9%87%8D%E8%BD%BD/</guid>
      <description>老样子,看代码. </description>
    </item>
    
    <item>
      <title>PHP5的克隆方法</title>
      <link>https://kissjava.cn/posts/php5%E7%9A%84%E5%85%8B%E9%9A%86%E6%96%B9%E6%B3%95/</link>
      <pubDate>Sun, 08 Mar 2009 17:52:18 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/php5%E7%9A%84%E5%85%8B%E9%9A%86%E6%96%B9%E6%B3%95/</guid>
      <description>不多说了，代码注释里都有。 </description>
    </item>
    
    <item>
      <title>ADOdb的错误处理和异常处理</title>
      <link>https://kissjava.cn/posts/adodb%E7%9A%84%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E5%92%8C%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</link>
      <pubDate>Thu, 05 Mar 2009 15:14:48 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/adodb%E7%9A%84%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E5%92%8C%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</guid>
      <description>迷上那些mvc的框架后，就很少去关注到ADOdb了。
回头看看，ADOdb真的改进不少。淡水关心的是only php5的版本。
不仅支持了AR(ADOdb-Active-Record),也支持Exceptions了。淡水测试了一下它。 淡水也顺便试了一下它的错误处理，如下： </description>
    </item>
    
    <item>
      <title>ADOdb有更新了</title>
      <link>https://kissjava.cn/posts/adodb%E6%9C%89%E6%9B%B4%E6%96%B0%E4%BA%86/</link>
      <pubDate>Thu, 05 Mar 2009 09:28:06 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/adodb%E6%9C%89%E6%9B%B4%E6%96%B0%E4%BA%86/</guid>
      <description>支持AR了,想偷懒的同学有福了.
相对于Zend Framework,Adodb在实现上有以下几点不同： 对PHP4和PHP5，Adodb提供一致的方法。 ADOdb_Active_Record可以同时连接到多个数据库。而Zend只能连接到默认的一个数据库。 支持ADODB_ASSOC_CASE。字段名大小写由ADODB_ASSOC_CASE项设置。
adodb_active_record是以“ActiveRecord模型”为原理为设计的，adodb_active_record尝试提出PHP中的最合适的ActiveRecord。 ADOdb_Active_Record把一个数据库表映射为一个PHP类，每个实例都代表表的一行数据。也可以定义表之间的关系，ADOdb_Active_Record对象支持嵌套。
给个详细介绍：http://phplens.com/lens/adodb/docs-active-record.htm</description>
    </item>
    
    <item>
      <title>Kohana 起步了</title>
      <link>https://kissjava.cn/posts/kohana-%E8%B5%B7%E6%AD%A5%E4%BA%86/</link>
      <pubDate>Tue, 03 Mar 2009 22:06:05 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/kohana-%E8%B5%B7%E6%AD%A5%E4%BA%86/</guid>
      <description>开始琢磨Kohana。先看了一下Kohana 101，出现了一些问题。
当做到 http://localhost/kohana/index.php/test/bye 时，出现了问题。并没有期望的视图出现，而是
但是文档并没有提到是何原因。还好有Codeigniter打底。原来是淡水在class中写了一个空的__contruct()，而101并没有用它。 把它去掉，或是在里面调用一下父类的构造函数就ok了。
使用Query Builder查询id=3的产品信息。用php5的method chaining方式： $query = $this-&amp;gt;db-&amp;gt;select() -&amp;gt;where(&amp;lsquo;id&amp;rsquo;,3) -&amp;gt;form(&amp;lsquo;products&amp;rsquo;) -&amp;gt;get(); 嗯，这个Codeigniter也有。
淡水还发现了101的两个笔误：
1）20页，Products表插入数据的sql语句里，第三条少个结尾逗号。
2）在26页里，
貌似发送mail时需要PEAR，否则出错:(,怀念Codeigniter的email类了。</description>
    </item>
    
    <item>
      <title>jQuery AJAX方法提交数据</title>
      <link>https://kissjava.cn/posts/jquery-ajax%E6%96%B9%E6%B3%95%E6%8F%90%E4%BA%A4%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Sat, 28 Feb 2009 20:23:04 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/jquery-ajax%E6%96%B9%E6%B3%95%E6%8F%90%E4%BA%A4%E6%95%B0%E6%8D%AE/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Extended Model for CodeIgniter 1.7.x</title>
      <link>https://kissjava.cn/posts/extended-model-for-codeigniter-1.7.x/</link>
      <pubDate>Wed, 25 Feb 2009 14:11:01 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/extended-model-for-codeigniter-1.7.x/</guid>
      <description>不需要hacking CI的核心代码
 下载文件 2. 放入 application/libraries 文件夹 在model 里,使用: class Product extends MY_Model 其他的使用和旧版一样  my_model</description>
    </item>
    
    <item>
      <title>codeigniter的数据库操作</title>
      <link>https://kissjava.cn/posts/codeigniter%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Thu, 19 Feb 2009 15:08:40 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/codeigniter%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/</guid>
      <description>用codeigniter也有一段时间了，一直没有做什么总结。 昨日乱逛，看到有同学总结了一下ci的数据库操作，虽说不全，但是也确实可以帮助那些刚刚上手CI的同学。  链接数据库 $this-&amp;gt;load-&amp;gt;database();//手动连接数据库 //连接多数据库 $DB1 = $this-&amp;gt;load-&amp;gt;database(&amp;lsquo;group_one&amp;rsquo;, TRUE); $DB2 = $this-&amp;gt;load-&amp;gt;database(&amp;lsquo;group_two&amp;rsquo;, TRUE); 查询 //参数绑定形式 $sql = &amp;ldquo;SELECT * FROM some_table WHERE id = ? AND status = ? AND author = ?&amp;quot;; $this-&amp;gt;db-&amp;gt;query($sql, array(3, &amp;lsquo;live&amp;rsquo;, &amp;lsquo;Rick&amp;rsquo;));
//多结果标准查询 $query = $this-&amp;gt;db-&amp;gt;query($sql); //自定义 $query = $this-&amp;gt;db-&amp;gt;get(&amp;lsquo;tablename&amp;rsquo;); //便捷形式，相当于:SELECT * FROM tablename $query = $this-&amp;gt;db-&amp;gt;get(&amp;lsquo;tablename&amp;rsquo;, 10, 20); // 相当于: SELECT * FROM tablename LIMIT 20, 10
$query-&amp;gt;result() //对象形式 $query-&amp;gt;result_array() //数组形式 /* foreach ($query-&amp;gt;result() as $row) { echo $row-&amp;gt;title; echo $row-&amp;gt;name; echo $row-&amp;gt;email; } */ $query-&amp;gt;num_rows() //总条数 $query-&amp;gt;num_fields() //字段数</description>
    </item>
    
    <item>
      <title>家</title>
      <link>https://kissjava.cn/posts/%E5%AE%B6/</link>
      <pubDate>Sun, 25 Jan 2009 10:57:38 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%AE%B6/</guid>
      <description>嗯,163拨号上来,不是一般的慢阿.2楼东北房间
2楼东北房间壁柜
2楼过道
2楼客厅
2楼客厅
2楼主卫
2楼主卧
小餐厅
仓库(1楼东北房间)
厨房
灯笼
楼梯
书房
一楼过道
一楼客厅</description>
    </item>
    
    <item>
      <title>折子戏</title>
      <link>https://kissjava.cn/posts/%E6%8A%98%E5%AD%90%E6%88%8F/</link>
      <pubDate>Tue, 30 Dec 2008 16:38:56 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E6%8A%98%E5%AD%90%E6%88%8F/</guid>
      <description></description>
    </item>
    
    <item>
      <title>适合Codeingiter1.7.0的authentication library</title>
      <link>https://kissjava.cn/posts/%E9%80%82%E5%90%88codeingiter1.7.0%E7%9A%84authentication-library/</link>
      <pubDate>Wed, 24 Dec 2008 21:09:59 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E9%80%82%E5%90%88codeingiter1.7.0%E7%9A%84authentication-library/</guid>
      <description>适合Codeingiter1.7.0的authentication library地址：
http://dexcell.shinsengumiteam.com/dx_auth/index.html只是一直没空研究看看。时间都被我荒废到哪里去了呢？
今天对于很多人来说，是个特殊的日子，虽然对我来说只是再平常不过的一天了。嗯，Merry Christmas！</description>
    </item>
    
    <item>
      <title>告别“黑户”生活</title>
      <link>https://kissjava.cn/posts/%E5%91%8A%E5%88%AB%E9%BB%91%E6%88%B7%E7%94%9F%E6%B4%BB/</link>
      <pubDate>Wed, 24 Dec 2008 21:08:43 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%91%8A%E5%88%AB%E9%BB%91%E6%88%B7%E7%94%9F%E6%B4%BB/</guid>
      <description>淡水是2004年毕业的。
毕业后一直没有从学校把户口迁移。不想竟然成了“黑户”，就连张银行卡都办不了。
今天老爸辛苦了一天，刚从单位到家，就又跑到学校去……再到老家派出所……劳累一天了，终于帮我把户口办好了。
小时候总是调皮捣蛋，经常被老爸狠揍。如今自己长大了，老爸也真的老了。时间是如此坚定的流淌着，父爱如山，我却一直无法给他多少欣慰。希望天下的父母都平安、健康、长寿、幸福</description>
    </item>
    
    <item>
      <title>en、eng辨音字表</title>
      <link>https://kissjava.cn/posts/eneng%E8%BE%A8%E9%9F%B3%E5%AD%97%E8%A1%A8/</link>
      <pubDate>Mon, 15 Dec 2008 12:38:01 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/eneng%E8%BE%A8%E9%9F%B3%E5%AD%97%E8%A1%A8/</guid>
      <description>学会普通话，也挺难的。淡水对en，eng的发音有些模糊，对in和ing更是完全区分不了。难啊 :(</description>
    </item>
    
    <item>
      <title>PHP利用iframe上传文件并返回值到父框架</title>
      <link>https://kissjava.cn/posts/php%E5%88%A9%E7%94%A8iframe%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%B9%B6%E8%BF%94%E5%9B%9E%E5%80%BC%E5%88%B0%E7%88%B6%E6%A1%86%E6%9E%B6/</link>
      <pubDate>Fri, 28 Nov 2008 16:14:07 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/php%E5%88%A9%E7%94%A8iframe%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E5%B9%B6%E8%BF%94%E5%9B%9E%E5%80%BC%E5%88%B0%E7%88%B6%E6%A1%86%E6%9E%B6/</guid>
      <description>哈哈，淡水其实也是采用这样的做发法的。正好看到有童鞋博客上有这样写。就顺手贴过来了。 if($result) { echo &amp;ldquo;上传成功!文件路径为：&amp;rdquo;.$file2; echo &amp;lsquo;&amp;rsquo;; echo&#39;parent.document.form1.img.value=document.getElementById(&amp;ldquo;img&amp;rdquo;).value;&amp;rsquo;; } 文件上传成功后，把文件路径写入一个隐藏的域中（img），然后用DOM原理把隐藏域中的VALUE发送到父框架的表单form1的img文本框中：ok，再来看看淡水的。 淡水编辑器用了tinyMCE，所以有一点点不一样。 我的form页： </description>
    </item>
    
    <item>
      <title>还是phpDocumentor的安装和使用</title>
      <link>https://kissjava.cn/posts/%E8%BF%98%E6%98%AFphpdocumentor%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sun, 23 Nov 2008 12:51:18 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E8%BF%98%E6%98%AFphpdocumentor%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;p&gt;写文件是一个程序设计师最最痛苦的事情之一，尤其是写了一堆程序后有人要你把 Function ，Class 等等等等，写成一份文件。&lt;/p&gt;
&lt;p&gt;这事情不管你是写 c/c++ , perl , ruby , php 都不例外。&lt;/p&gt;
&lt;p&gt;phpDocumentor 是我们的救星! 只要在写程序的时候，乖乖的写一点注解，写一点范例，多一点说明，注意一下格式，等到程序完工后，只要一个指令，就可以立刻把全部程序的说明文件产生出来，而且还有多种样式可以选择，甚至可以作成  PDF , CHM 喔&amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(转载)phpDocumentor筆記</title>
      <link>https://kissjava.cn/posts/%E8%BD%AC%E8%BD%BDphpdocumentor%E7%AD%86%E8%A8%98/</link>
      <pubDate>Thu, 20 Nov 2008 12:25:04 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E8%BD%AC%E8%BD%BDphpdocumentor%E7%AD%86%E8%A8%98/</guid>
      <description>&lt;p&gt;phpDocumentor很好的php工具。&lt;!-- raw HTML omitted --&gt;淡水&lt;!-- raw HTML omitted --&gt;这里转载的台湾同胞的学习笔记，方便查询。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>(震撼)作个真正的男人</title>
      <link>https://kissjava.cn/posts/%E9%9C%87%E6%92%BC%E4%BD%9C%E4%B8%AA%E7%9C%9F%E6%AD%A3%E7%9A%84%E7%94%B7%E4%BA%BA/</link>
      <pubDate>Mon, 17 Nov 2008 13:52:58 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E9%9C%87%E6%92%BC%E4%BD%9C%E4%B8%AA%E7%9C%9F%E6%AD%A3%E7%9A%84%E7%94%B7%E4%BA%BA/</guid>
      <description>&lt;p&gt;很震撼。我怎么就没碰到这样的先生呢~&lt;/p&gt;
&lt;p&gt;心理学课上，周正教授正在授课：“上次下课时，一个男孩子递了张纸条：’我是个比较内向的人，又没什么特长，不会踢足球，不会打篮球……唯一的爱好是写作。进入大学后，看到周围的同学在交往、工作中左右逢源、如鱼得水、洒脱干练，很是羡慕。就要步入社会了，我该如何规划自己的前途呢？……周教授，我想我还是当一名作家比较好，一个人，也不错，您说呢？’这个问题要不要回答？”周教授扬了扬手中的纸条。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>解决phpDesigner 2008 6.1.1中文语言包假死问题</title>
      <link>https://kissjava.cn/posts/%E8%A7%A3%E5%86%B3phpdesigner-2008-6.1.1%E4%B8%AD%E6%96%87%E8%AF%AD%E8%A8%80%E5%8C%85%E5%81%87%E6%AD%BB%E9%97%AE%E9%A2%98/</link>
      <pubDate>Thu, 13 Nov 2008 12:39:09 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E8%A7%A3%E5%86%B3phpdesigner-2008-6.1.1%E4%B8%AD%E6%96%87%E8%AF%AD%E8%A8%80%E5%8C%85%E5%81%87%E6%AD%BB%E9%97%AE%E9%A2%98/</guid>
      <description>其实要从php视频教程说起。 淡水以前也出过php的视频教学误人前程，前些日子看到php100有出php视频教学。去逛了好几圈，嗯，人气不错。站长很用心。还搞了一些工具方便php新人，比如easyclipse中文化，还有phpDesigner的中语言包。淡水试了phpDesigner2008的中文语言包，有些问题，一旦切换到中文就会假死。本来淡水并不用它，但是并不否认她是个杰出的编辑器。 淡水在试了N多种方法后，终于有了办法。 新建一个project，再切换语言。不行就打开新建的project，再切换到中文。搞定。 哈哈，可以换着用用看了。 没有project用其他语言就会假死，这个可能是程序的bug。 语言包：chinese-zh</description>
    </item>
    
    <item>
      <title>适合Programmer的字体Monaco</title>
      <link>https://kissjava.cn/posts/%E9%80%82%E5%90%88programmer%E7%9A%84%E5%AD%97%E4%BD%93monaco/</link>
      <pubDate>Thu, 13 Nov 2008 09:33:41 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E9%80%82%E5%90%88programmer%E7%9A%84%E5%AD%97%E4%BD%93monaco/</guid>
      <description>以前都是用ms自带的Consolas。 看到CodeIgniter视频上Textmate里的字体蛮好看的，于是就开始了寻宝之旅。现在终于找到了，她就是Monaco。 贴两个效果图看看 字体下载：monaco</description>
    </item>
    
    <item>
      <title>给gpsnet.cc加上了上传附件功能，应用了AJAX管理等</title>
      <link>https://kissjava.cn/posts/%E7%BB%99gpsnet.cc%E5%8A%A0%E4%B8%8A%E4%BA%86%E4%B8%8A%E4%BC%A0%E9%99%84%E4%BB%B6%E5%8A%9F%E8%83%BD%E5%BA%94%E7%94%A8%E4%BA%86ajax%E7%AE%A1%E7%90%86%E7%AD%89/</link>
      <pubDate>Fri, 07 Nov 2008 17:09:57 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E7%BB%99gpsnet.cc%E5%8A%A0%E4%B8%8A%E4%BA%86%E4%B8%8A%E4%BC%A0%E9%99%84%E4%BB%B6%E5%8A%9F%E8%83%BD%E5%BA%94%E7%94%A8%E4%BA%86ajax%E7%AE%A1%E7%90%86%E7%AD%89/</guid>
      <description>大多都涉及到JS，但是淡水这块儿比较薄弱。于是用jQuery，搞定。 帖一张图，对jQuery的说明很不错 [caption id=&amp;quot;attachment_139&amp;rdquo; align=&amp;quot;alignnone&amp;rdquo; width=&amp;quot;300&amp;rdquo; caption=&amp;quot;jQuery&amp;rdquo;][/caption] 站还没更新，嗯，下周更新吧</description>
    </item>
    
    <item>
      <title>tinyMCE和CodeIgniter1.7.0</title>
      <link>https://kissjava.cn/posts/tinymce%E5%92%8Ccodeigniter1.7.0/</link>
      <pubDate>Thu, 06 Nov 2008 16:16:36 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/tinymce%E5%92%8Ccodeigniter1.7.0/</guid>
      <description>tinyMCE是个比较优秀的web编辑器。和CodeIgniter集成是非常方便的。 下载tinyMCE并解压到网站目录，淡水是放到根目录的。 在CodeIgniter的View里调用： </description>
    </item>
    
    <item>
      <title>CodeIgniter 1.6.3 to 1.7.0</title>
      <link>https://kissjava.cn/posts/codeigniter-1.6.3-to-1.7.0/</link>
      <pubDate>Thu, 06 Nov 2008 14:20:43 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/codeigniter-1.6.3-to-1.7.0/</guid>
      <description>今日升级后，发行有些读取数据库的页面有错误。提示：“SQL logic error or missing database”。咋回事呢？淡水不废话了,看代码,原来1.6.3是这样写的 $this-&amp;gt;db-&amp;gt;select(&amp;lsquo;id,title,time&amp;rsquo;); $this-&amp;gt;db-&amp;gt;from(&amp;lsquo;news&amp;rsquo;); $this-&amp;gt;db-&amp;gt;order_by(&amp;lsquo;id&amp;rsquo;,&amp;lsquo;desc&amp;rsquo;); $query=$this-&amp;gt;db-&amp;gt;get(&amp;lsquo;news&amp;rsquo;,$config[&amp;lsquo;per_page&amp;rsquo;],$this-&amp;gt;uri-&amp;gt;segment(3)); 现在1.7.0要这样 $this-&amp;gt;db-&amp;gt;select(&amp;lsquo;id,title,time&amp;rsquo;); $this-&amp;gt;db-&amp;gt;order_by(&amp;lsquo;id&amp;rsquo;,&amp;lsquo;desc&amp;rsquo;); $query=$this-&amp;gt;db-&amp;gt;get(&amp;lsquo;news&amp;rsquo;,$config[&amp;lsquo;per_page&amp;rsquo;],$this-&amp;gt;uri-&amp;gt;segment(3)); 说白了，就是1.7.0比较严格一些，from后不能再get里还有table name否则会出错，其实还是我在1.6.3里写的不够严谨XD</description>
    </item>
    
    <item>
      <title>基础还是牢靠一些比较好</title>
      <link>https://kissjava.cn/posts/%E5%9F%BA%E7%A1%80%E8%BF%98%E6%98%AF%E7%89%A2%E9%9D%A0%E4%B8%80%E4%BA%9B%E6%AF%94%E8%BE%83%E5%A5%BD/</link>
      <pubDate>Mon, 03 Nov 2008 17:17:28 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%9F%BA%E7%A1%80%E8%BF%98%E6%98%AF%E7%89%A2%E9%9D%A0%E4%B8%80%E4%BA%9B%E6%AF%94%E8%BE%83%E5%A5%BD/</guid>
      <description>gpsnet.cc开始做些变动了。以前偷懒没有附件上传功能，现在要加上了。
扩展了CI的URI.php和Upload.php以支持中文url和保证上传的中文命名的文件可以正常上传并以中文命名（方便识别）。好多的基础都模糊了，警惕啊。
主要用的了iconv函数。 //中文命名的文件上传到服务器，保证它是以GB2312的编码保存，否则服务器上文件名是乱码 $filename = iconv(&amp;ldquo;UTF-8&amp;rdquo;,&amp;ldquo;GB2312//IGNORE&amp;rdquo;,$filename); #some code //把中文命名的文件名从GB2312编码转到UTF8编码，方便在UTF8编码的页面中显示，或插入DB $file_name = iconv(&amp;ldquo;GB2312&amp;rdquo;,&amp;ldquo;UTF-8&amp;rdquo;,$file_name); substr函数。插入的附件以“；”分割路径存入数据库。显示的时候要转换为数组循环输出比较方便。所以要去除最后的“；”，否则会多一个数组项。 #笨的方法 $upload = $news[&amp;lsquo;upload&amp;rsquo;]; $upload = substr($upload,0,strlen($upload)-1); $upload = split(&amp;quot;;&amp;rdquo;,$upload); #比较好的方法 $upload = $news[&amp;lsquo;upload&amp;rsquo;]; $upload = substr($upload,0,-1); $upload = split(&amp;quot;;&amp;rdquo;,$upload); 还有tinyMCE的有些小方法，淡水稍后再更新。</description>
    </item>
    
    <item>
      <title>CodeIgniter 1.7.0 版发布了，有料</title>
      <link>https://kissjava.cn/posts/codeigniter-1.7.0-%E7%89%88%E5%8F%91%E5%B8%83%E4%BA%86%E6%9C%89%E6%96%99/</link>
      <pubDate>Sat, 25 Oct 2008 19:12:44 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/codeigniter-1.7.0-%E7%89%88%E5%8F%91%E5%B8%83%E4%BA%86%E6%9C%89%E6%96%99/</guid>
      <description>修正了一堆bug。
更新了session table，嗯session保存的database的才有关系，多了一个user_data字段。
新增了form_validation.旧的validation还是可以用的，不过推荐使用新的form_validation。语法比较简洁明了。
旧式调用： $this-&amp;gt;load-&amp;gt;library(&amp;lsquo;validation&amp;rsquo;);新验证类调用： $this-&amp;gt;load-&amp;gt;library(&amp;lsquo;form_validation&amp;rsquo;);新式验证有较大的改善，设置规则时，可以同时设置form控件的显示label。 $this-&amp;gt;form_validation-&amp;gt;set_rules(&amp;lsquo;password&amp;rsquo;, &amp;lsquo;密码&amp;rsquo;, &amp;lsquo;required&amp;rsquo;); //一下子把以前的set_fields的工作也做了 旧式的比较麻烦，要多次设置： $rules[&amp;lsquo;password&amp;rsquo;]	= &amp;ldquo;required&amp;rdquo;; $this-&amp;gt;validation-&amp;gt;set_rules($rules); $fields[&amp;lsquo;password&amp;rsquo;]	= &amp;lsquo;密码&amp;rsquo;; $this-&amp;gt;validation-&amp;gt;set_fields($fields); //more&amp;hellip; 先 set_rules 再 set_fields ,哪像1.70一步搞定爽啊。 Library 加载时指定 object name，通过第三个参数。 手册的例子： $this-&amp;gt;load-&amp;gt;library(&amp;lsquo;session&amp;rsquo;, &amp;lsquo;&amp;rsquo;, &amp;lsquo;my_session&amp;rsquo;); // Session class is now accessed using: $this-&amp;gt;my_session 第二个参数是设置（配置）选项，还是手册（1.70版，1.6.3没有）的例子： $config = array ( &amp;lsquo;mailtype&amp;rsquo; =&amp;gt; &amp;lsquo;html&amp;rsquo;, &amp;lsquo;charset&amp;rsquo; =&amp;gt; &amp;lsquo;utf-8, &amp;lsquo;priority&amp;rsquo; =&amp;gt; &amp;lsquo;1&amp;rsquo; ); $this-&amp;gt;load-&amp;gt;library(&amp;lsquo;email&amp;rsquo;, $config); 嗯，CI越来越称手了。</description>
    </item>
    
    <item>
      <title>CodeIgniter使用 layout library 简化视图布局</title>
      <link>https://kissjava.cn/posts/codeigniter%E4%BD%BF%E7%94%A8-layout-library-%E7%AE%80%E5%8C%96%E8%A7%86%E5%9B%BE%E5%B8%83%E5%B1%80/</link>
      <pubDate>Wed, 22 Oct 2008 21:17:50 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/codeigniter%E4%BD%BF%E7%94%A8-layout-library-%E7%AE%80%E5%8C%96%E8%A7%86%E5%9B%BE%E5%B8%83%E5%B1%80/</guid>
      <description>一般在网站的开发过程中，都会有个 template 或是叫 layout 的，它包含了整个网站的外观和布局，一般分为header，content，footer 有的甚至还包括 menu。其中的 content 部分则会随着不同的页面和功能而变化。这样就可以保证网站风格的一致性，也可以减少不少工作量。虽然便捷的 Codeigniter没有提供内置的处理方式，但是我们还是自己扩展的。
首先，把下面的代码保存到 application/libraries/Layout.php 在相关的控制器里载入它
往下就可以输出页面
我们的template或是称之为layout的文件（layout_main.php）大致如下(简化了，实际应用中会有很多网站固定元素的):
而控制器中载入的视图，例中是“support”。我们只要专注support的内容就可以了。它会填充到template或是叫layout文件中的$content_for_layout部分，并整个一并输出。
如果，我们的template或是叫layout不想叫layout_main.php比如想叫template.php；那么我们载入layout library时就要指定template的名称，在第二个参数指定（无需php后缀）：
$this-&amp;gt;load-&amp;gt;library(&amp;lsquo;layout&amp;rsquo;,&amp;lsquo;template&amp;rsquo;);update 2009年3月18日 ：最新版本请看：http://tsingfeng.</description>
    </item>
    
    <item>
      <title>Simple FlashNotice helper for CodeIgniter</title>
      <link>https://kissjava.cn/posts/simple-flashnotice-helper-for-codeigniter/</link>
      <pubDate>Wed, 22 Oct 2008 10:07:52 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/simple-flashnotice-helper-for-codeigniter/</guid>
      <description>这是一个容易使用的简单的FlashNotice helper。 它会在你进行一些操作之后帮助你显示错误或提示信息。 信息显示一次后就会被自动删除。 1，保持以下代码到“flash_helper.php” application/helpers 目录 2，加载它 $this-&amp;gt;load-&amp;gt;helper(&amp;ldquo;flash&amp;rdquo;);
你可以在第二个参数上设置其他的通知类型，它会反映在你的提示div块的class名称上。 #flash 样式你可以自己定义。 </description>
    </item>
    
    <item>
      <title>扩展 CodeIgniter 1.6.3 的 Model </title>
      <link>https://kissjava.cn/posts/%E6%89%A9%E5%B1%95-codeigniter-1.6.3-%E7%9A%84-model-/</link>
      <pubDate>Tue, 21 Oct 2008 15:16:09 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E6%89%A9%E5%B1%95-codeigniter-1.6.3-%E7%9A%84-model-/</guid>
      <description>第一步，用下载的文件替换system/libraries/Model.php 第二步，对于你的每个数据表，都要在system/application/models 下建立一个模型 第三步，建立一个“products”表，如下所示： CREATE TABLE products ( id int(11) NOT NULL auto_increment, title varchar(50) NOT NULL, description text NOT NULL, color varchar(20) NOT NULL, price float NOT NULL, category_id int(11) NOT NULL, featured char(1) NOT NULL, enabled char(1) NOT NULL, visits int(1) NOT NULL, created int(11) NOT NULL, modified int(11) NOT NULL, PRIMARY KEY (id) ) ENGINE=MyISAM; 第四步，建立一个模型 system/application/models/product.php </description>
    </item>
    
    <item>
      <title>郁闷的木乃伊3龙帝之墓</title>
      <link>https://kissjava.cn/posts/%E9%83%81%E9%97%B7%E7%9A%84%E6%9C%A8%E4%B9%83%E4%BC%8A3%E9%BE%99%E5%B8%9D%E4%B9%8B%E5%A2%93/</link>
      <pubDate>Sun, 19 Oct 2008 13:24:07 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E9%83%81%E9%97%B7%E7%9A%84%E6%9C%A8%E4%B9%83%E4%BC%8A3%E9%BE%99%E5%B8%9D%E4%B9%8B%E5%A2%93/</guid>
      <description>木乃伊3龙帝之墓，看了。不爽，很愤怒。
始皇帝变成了出尔反尔的小人，中国龙变成了邪恶的三头恐龙。
荷里活的垃圾编剧绝对有反华心理。
李连杰，杨紫琼接拍或许可以理解（理由为了吃饭？……）。但是这样内容的片子居然可以在内地上映。
虽说商业片可以胡编乱造，但是辱华的坚决抵制。
算了，也只是唠叨一下，也无力去改变什么。日子还是一样的过，只能自己牢记自己炎黄根吧。
有个网友说得好，一群盗墓贼，可笑。</description>
    </item>
    
    <item>
      <title>优化CodeIgniter性能</title>
      <link>https://kissjava.cn/posts/%E4%BC%98%E5%8C%96codeigniter%E6%80%A7%E8%83%BD/</link>
      <pubDate>Sun, 19 Oct 2008 10:15:20 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E4%BC%98%E5%8C%96codeigniter%E6%80%A7%E8%83%BD/</guid>
      <description>原文《Optimizing and Scaling your CodeIgniter Application - with Benchmarks!》淡水这里只是用中文整理一下。 首先，是个控制器，一般的标准的写法如下： function index() { $query = $this-&amp;gt;db-&amp;gt;get(&amp;lsquo;module_pages&amp;rsquo;);
$links = &#39;&#39;; if ( $query-&amp;gt;num_rows &amp;gt; 0) { foreach ($query-&amp;gt;result_array() as $page): $links .= &#39;&amp;lt;a href=&amp;quot;&#39;.site_url($page[&#39;uri&#39;]).&#39;&amp;quot;&amp;gt;&#39;; $links .= ucwords($page[&#39;title&#39;]).&#39;&amp;lt;/a&amp;gt;&amp;lt;br /&amp;gt;&#39;; endforeach; $data[&#39;links&#39;] = $links; } for ($i=0; $i &amp;lt; 10; $i++) { $this-&amp;gt;db-&amp;gt;like(&#39;title&#39;, &#39;London&#39;); $query = $this-&amp;gt;db-&amp;gt;get(&#39;module_pages&#39;, 1); if ( $query-&amp;gt;num_rows == 1 ) { $row = $query-&amp;gt;row_array(); $row[&#39;body&#39;] = str_replace(&#39;Getting&#39;, &#39;booya&#39;, $row[&#39;body&#39;]); $data[&#39;body&#39;] = $row[&#39;body&#39;]; } } $this-&amp;gt;load-&amp;gt;view(&#39;welcome2&#39;, $data);  } 视图文件类似以下： 把循环结果赋给变量foreach ($query-&amp;gt;result_array() as $page): 修改为: $pages = $query-&amp;gt;result_array(); foreach ($pages as $page): Requests per second: 46.</description>
    </item>
    
    <item>
      <title>如何区别前鼻音和后鼻音？</title>
      <link>https://kissjava.cn/posts/%E5%A6%82%E4%BD%95%E5%8C%BA%E5%88%AB%E5%89%8D%E9%BC%BB%E9%9F%B3%E5%92%8C%E5%90%8E%E9%BC%BB%E9%9F%B3/</link>
      <pubDate>Fri, 17 Oct 2008 10:59:09 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%A6%82%E4%BD%95%E5%8C%BA%E5%88%AB%E5%89%8D%E9%BC%BB%E9%9F%B3%E5%92%8C%E5%90%8E%E9%BC%BB%E9%9F%B3/</guid>
      <description>&lt;p&gt;这个一直是淡水普通话最大的敌人。据说南方人一般都是这个前后鼻音分辨不清。这么说淡水算是南方人了，但是为什么听到淡水是泰州人后，为什么又说淡水是苏北人呢？不扯了，看看人家的正文。&lt;/p&gt;
&lt;p&gt;有许多人在发前鼻音-n 和后鼻音-ng的时候往往前鼻音不 &amp;ldquo;前&amp;rdquo;，后鼻音不&amp;quot;后&amp;rdquo;，发前鼻音的时候口腔开得太大，气流往上颚上顶，使得气流过早地进入鼻腔，把-n前面的元音发成了带鼻音的元音；而发后鼻音的时候又往往打不开口腔，舌头不往后拉，还是在口腔前部发音，没有鼻腔共鸣，使得后鼻音发音不到位。如何发好前、后鼻音呢？关键就是要掌握好发音的要领，前鼻音和后鼻音的发音区分主要在两点：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>10月9日，又吵了，记下我的台词</title>
      <link>https://kissjava.cn/posts/10%E6%9C%889%E6%97%A5%E5%8F%88%E5%90%B5%E4%BA%86%E8%AE%B0%E4%B8%8B%E6%88%91%E7%9A%84%E5%8F%B0%E8%AF%8D/</link>
      <pubDate>Thu, 09 Oct 2008 16:23:59 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/10%E6%9C%889%E6%97%A5%E5%8F%88%E5%90%B5%E4%BA%86%E8%AE%B0%E4%B8%8B%E6%88%91%E7%9A%84%E5%8F%B0%E8%AF%8D/</guid>
      <description>该到决定的时候了。
就算我们现在可以勉强凑合，但是我肯定无法一直容忍你的强势。
你怎么说都有理？但是有些东西不是一蹴而就的。
我收入低，但是我在慢慢提高。
你想要过得好一些，就要我按你的想法去做么，没有自主做事的权力，那我还是一个真正的我么？你需要一个傀儡！
所有的说法，都是基于我是一个男人，就应该怎样？但是，在你指手画脚的时候，你有想过我是一个男人么？
不指望可以相敬如宾，但是至少要彼此尊重，动不动就问候别人的父母，不觉得这样很过分么？
你要面子不是错，但是请不要用打击我来成全你在你亲朋面前的了不起。成熟一点，别人看不起你的男人就会看得起你？
总爱拿我对你和我对父母的付出比较，怎么不想想你在我身上花了多少，在你父母身上花了多少？难道在你眼里我的智商已经低到接近白痴的程度？
互相数落，没有意义。争执到如此地步，剩下的路还能走么？</description>
    </item>
    
    <item>
      <title>基于Codeigniter1.6.3的华领GPS车管系统网站</title>
      <link>https://kissjava.cn/posts/%E5%9F%BA%E4%BA%8Ecodeigniter1.6.3%E7%9A%84%E5%8D%8E%E9%A2%86gps%E8%BD%A6%E7%AE%A1%E7%B3%BB%E7%BB%9F%E7%BD%91%E7%AB%99/</link>
      <pubDate>Wed, 08 Oct 2008 20:09:32 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%9F%BA%E4%BA%8Ecodeigniter1.6.3%E7%9A%84%E5%8D%8E%E9%A2%86gps%E8%BD%A6%E7%AE%A1%E7%B3%BB%E7%BB%9F%E7%BD%91%E7%AB%99/</guid>
      <description>&lt;p&gt;华领GPS车管系统网站(&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;http://www.gpsnet.cc&#34;&gt;www.gpsnet.cc&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;)
名称：华领GPS车辆管理系统
地址：&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;http://www.gpsnet.cc&#34;&gt;http://www.gpsnet.cc&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;
CodeIgniter版本：1.6.3
工具dw，UltraEdit（资源管理器比editplus好用）&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AIA友邦在MSN上的广告</title>
      <link>https://kissjava.cn/posts/aia%E5%8F%8B%E9%82%A6%E5%9C%A8msn%E4%B8%8A%E7%9A%84%E5%B9%BF%E5%91%8A/</link>
      <pubDate>Wed, 08 Oct 2008 13:57:09 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/aia%E5%8F%8B%E9%82%A6%E5%9C%A8msn%E4%B8%8A%E7%9A%84%E5%B9%BF%E5%91%8A/</guid>
      <description>aia300250以前用msn都会去除主窗体上的广告区域。由于重装系统比较频繁，去广告的步骤就懒得做了。 碰巧，让淡水看到了AIA在msn打的广告。
如果你在昆山周边地区，如果你想给自己或是家人买份保险，有或者你想加盟友邦，甚至是你有一些保险问题想要咨询，可以和她联系：孙小姐（Jayce sun) Tel：13915743204</description>
    </item>
    
    <item>
      <title>怎样透过Codeigniter的SMTP类发mail</title>
      <link>https://kissjava.cn/posts/%E6%80%8E%E6%A0%B7%E9%80%8F%E8%BF%87codeigniter%E7%9A%84smtp%E7%B1%BB%E5%8F%91mail/</link>
      <pubDate>Wed, 08 Oct 2008 10:08:42 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E6%80%8E%E6%A0%B7%E9%80%8F%E8%BF%87codeigniter%E7%9A%84smtp%E7%B1%BB%E5%8F%91mail/</guid>
      <description>其实手册上已经讲得比较好了。但是有些不太对味，排版不太符合国人的习惯。闲话不说了，淡水喜欢直奔主题。 以Gmail为例，其他的更加简单（smtp_host和port改一下就行了，而且一般的smtp都无需ssl的）。要发信，先要配置。 配置有两种方式，方式一直接写在发送mail代码的前面，如下： $config[&amp;lsquo;protocol&amp;rsquo;] = &amp;lsquo;smtp&amp;rsquo;; $config[&amp;lsquo;smtp_host&amp;rsquo;] = &amp;lsquo;ssl://smtp.gmail.com&amp;rsquo;; $config[&amp;lsquo;smtp_user&amp;rsquo;] = &amp;lsquo;username@gmail.com&amp;rsquo;; $config[&amp;lsquo;smtp_pass&amp;rsquo;] = &amp;lsquo;password&amp;rsquo;; $config[&amp;lsquo;smtp_port&amp;rsquo;] = &amp;lsquo;465&amp;rsquo;; $config[&amp;lsquo;smtp_timeout&amp;rsquo;] = &amp;lsquo;5&amp;rsquo;; $config[&amp;lsquo;newline&amp;rsquo;] = &amp;ldquo;rn&amp;rdquo;; $config[&amp;lsquo;crlf&amp;rsquo;] = &amp;ldquo;rn&amp;rdquo;;
$this-&amp;gt;email-&amp;gt;initialize($config); 方式二,创建一个配置文件config/email.php，内容如下： $config[&amp;lsquo;protocol&amp;rsquo;] = &amp;lsquo;smtp&amp;rsquo;; $config[&amp;lsquo;smtp_host&amp;rsquo;] = &amp;lsquo;ssl://smtp.gmail.com&amp;rsquo;; $config[&amp;lsquo;smtp_user&amp;rsquo;] = &amp;lsquo;username@gmail.com&amp;rsquo;; $config[&amp;lsquo;smtp_pass&amp;rsquo;] = &amp;lsquo;password&amp;rsquo;; $config[&amp;lsquo;smtp_port&amp;rsquo;] = &amp;lsquo;465&amp;rsquo;; $config[&amp;lsquo;smtp_timeout&amp;rsquo;] = &amp;lsquo;5&amp;rsquo;; $config[&amp;lsquo;newline&amp;rsquo;] = &amp;ldquo;rn&amp;rdquo;; $config[&amp;lsquo;crlf&amp;rsquo;] = &amp;ldquo;rn&amp;rdquo;; ok,现在可以发信了。 $this-&amp;gt;load-&amp;gt;library(&amp;lsquo;email&amp;rsquo;); $this-&amp;gt;email-&amp;gt;from(&amp;lsquo;username@gmail.com&amp;rsquo;, &amp;lsquo;your_name&amp;rsquo;); $this-&amp;gt;email-&amp;gt;to(&amp;lsquo;your_friend@xxx.com&amp;rsquo;); $this-&amp;gt;email-&amp;gt;subject(&amp;lsquo;subject&amp;rsquo;); $this-&amp;gt;email-&amp;gt;message(&amp;lsquo;this is the mail content&amp;rsquo;); $this-&amp;gt;email-&amp;gt;send(); 啰嗦一下，用Gmail发信，不太容易被当作垃圾邮件，但是主机要支持ssl才可以，否则是发不出的。其他免费的stmp也有不错的，而且不用ssl支持。比如tom和qq了。</description>
    </item>
    
    <item>
      <title>有必要记录一下，立志</title>
      <link>https://kissjava.cn/posts/%E6%9C%89%E5%BF%85%E8%A6%81%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8B%E7%AB%8B%E5%BF%97/</link>
      <pubDate>Sat, 04 Oct 2008 16:59:19 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E6%9C%89%E5%BF%85%E8%A6%81%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8B%E7%AB%8B%E5%BF%97/</guid>
      <description>10月4日16时30分。一阵嘈杂声惊倒屋里人，我在卫生间摔倒在地，洗漱盘被无意打翻，卫生间里一篇狼藉。
我这里惊魂未定，却突然被她一通臭骂。我顿时火冒三丈，大声呵斥“xxx，你有没有良心！”
接下来就是一段你来我往的交锋。记下一些，免得忘性太大。
“你神经病啊！你有病！什么玩意儿！你什么东西！”
好的！我记下了。
总是发生这样的事情，所谓的情感还有必要继续么？
或许在从常熟回来就应该结束吧。
也许是现在觉着自己能耐了，赚钱多了，就可以对我呼来喝去了，就觉得高我一等了
好的，我伺候不了，我不是东西，我决定消失在你眼前。</description>
    </item>
    
    <item>
      <title>CodeIgniter 入门-快速简单地创建 MVC 应用程序</title>
      <link>https://kissjava.cn/posts/codeigniter-%E5%85%A5%E9%97%A8-%E5%BF%AB%E9%80%9F%E7%AE%80%E5%8D%95%E5%9C%B0%E5%88%9B%E5%BB%BA-mvc-%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Sat, 04 Oct 2008 12:06:05 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/codeigniter-%E5%85%A5%E9%97%A8-%E5%BF%AB%E9%80%9F%E7%AE%80%E5%8D%95%E5%9C%B0%E5%88%9B%E5%BB%BA-mvc-%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/</guid>
      <description>&lt;p&gt;淡水现在用的框架就是Codeigniter。嗯，学习曲线较低，上手很快。本来想写些东西和大家分享的，只是时间不允，而且人懒。现在放上IBM developerWorks中国上的文章。淡水再啰嗦一下，官方的视频很直白也建议看看&lt;/p&gt;
&lt;p&gt;级别： 中级Thomas Myer, 作者、顾问和 Web 开发人员, Triple Dog Dare Media
2008 年 9 月 16 日&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>国庆，唠叨几句吧</title>
      <link>https://kissjava.cn/posts/%E5%9B%BD%E5%BA%86%E5%94%A0%E5%8F%A8%E5%87%A0%E5%8F%A5%E5%90%A7/</link>
      <pubDate>Fri, 03 Oct 2008 15:40:12 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%9B%BD%E5%BA%86%E5%94%A0%E5%8F%A8%E5%87%A0%E5%8F%A5%E5%90%A7/</guid>
      <description>国庆有七天长假，不写些什么好像有些愧对这一亩三分地了。
刚刚听到的一个故事，真实的。
一个南京小伙和一个湖北姑娘本来计划是今天结婚的。请柬上写的就是今天。请柬也发了，酒店也定了，押金也交了，不过这婚礼却没能办成。为啥？新娘跑了。
新娘虽然有些胡闹，但是小伙还是比较实在的。飞到湖北找到新娘老家。但是新娘老家人先是说新娘没回来，后来新娘也出现了说给多少多少钱才行……。不用淡水多嘴，这是当下比较典型的例子了。结果，嗯，小伙说了，这人我不要了。
淡水不想鄙视哪一个人，只是有些感慨。这是结婚呐，还是做买卖呐？淡水还是很佩服那个小伙子的，佩服他能坚守心底那把尺子。再鄙视一把那些垃圾得不能再垃圾的所谓的青春偶像剧，哪里有那么多的王子和灰姑娘的童话在现实生活里发生！</description>
    </item>
    
    <item>
      <title>E-TextEditor试用手记</title>
      <link>https://kissjava.cn/posts/e-texteditor%E8%AF%95%E7%94%A8%E6%89%8B%E8%AE%B0/</link>
      <pubDate>Tue, 30 Sep 2008 14:14:53 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/e-texteditor%E8%AF%95%E7%94%A8%E6%89%8B%E8%AE%B0/</guid>
      <description>嗯，这里快长草了。
淡水以前看ci的视频，看到mac下的textmate，哈喇子飞流直下-_-。以后的一段日子总是在寻求在windows下类似的编辑器。向google大神请教，给了我两个答案一个是intype，另一个还是intype，玩笑了（想起鲁迅了）。还有一个就是本文的猪脚“E-TextEditor”。但是当时淡水试用以后很是失望，intype没有project manage功能，E-texteditor安装时候就一堆的错误。无法只能用editplus凑合，没几日就无法忍受editplus简陋的目录管理了，换成了Ultraedit。只是他们都没有bundles，用来小修小改还好，用它们做项目，太累了。总会有些笔误产生。
故事到了这里，貌似该猪脚出场了。等等，还没到，实际情况是这样的。intype的最新Unstable版,支持project manage了。用了两天，发现BUG太多了。无奈放弃。这个时候猪脚上场了。但是这次淡水不是用的官方的版本，而是所谓的绿色特别版。下载地址：http://www.xdowns.com/soft/38/39/2008/Soft_40447.html试用一下不错。没有问题，又下了一份E-TextEditor Codeigniter 1.6.3 Bundle。嗯，测试一下，很好。淡水的系统是vista，没有任何问题，在虚拟机的xp上跑也正常。晒个图Codeigniter bundles 下载地址：http://www.</description>
    </item>
    
    <item>
      <title>淡水，生日快乐</title>
      <link>https://kissjava.cn/posts/%E6%B7%A1%E6%B0%B4%E7%94%9F%E6%97%A5%E5%BF%AB%E4%B9%90/</link>
      <pubDate>Sun, 28 Sep 2008 14:14:24 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E6%B7%A1%E6%B0%B4%E7%94%9F%E6%97%A5%E5%BF%AB%E4%B9%90/</guid>
      <description>如果这个世界上，有个女人对你付出了全部的心血，给你全部的爱，她肯定不是你的情人或妻子，而是你的母亲。
上午接到妈妈的电话，以为是要问我十一回不回家。原来不是，她固然希望我能回家看看，但这次电话的主题却是要我别忘记今天是我的生日。忙碌的生活已经让淡水忘记了今天是自己的生日了，但是妈妈不会忘记……
大声的对自己说：生日快乐！Happy birthday！还有最重要的，妈妈，我爱你！</description>
    </item>
    
    <item>
      <title>一些曾经用过的文字</title>
      <link>https://kissjava.cn/posts/%E4%B8%80%E4%BA%9B%E6%9B%BE%E7%BB%8F%E7%94%A8%E8%BF%87%E7%9A%84%E6%96%87%E5%AD%97/</link>
      <pubDate>Wed, 10 Sep 2008 16:10:07 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E4%B8%80%E4%BA%9B%E6%9B%BE%E7%BB%8F%E7%94%A8%E8%BF%87%E7%9A%84%E6%96%87%E5%AD%97/</guid>
      <description>这个春天就要结束了,我们一点也不自知,没有任何痕迹。觉得自己就要消失了,模糊得像今天的雾,脆弱而凌乱。
手指寂寞，需要你的抚摩
一切都在，除了爱情。
不想日子过得太有规律，不想热情走得太快。就让时光的棱角磨平那些不尽人意，就让暴雨洗净那瞬逃亡的勇气。莫非，生活的状态只有两种？或者简单，或者华美
在下着小雨的路上，我学会了哭泣。因为，在这里分不清，谁是眼泪，谁是雨滴 突然间我的嘴巴哽塞住，原来我并不知道自己想说的到底是什么，也许那一切吞在肚子里太多太久。
它们变得粉碎…… 那么自由那么放纵…… 撕碎了夜，撕碎了空气，撕碎了……
有时候我们会假装成熟地去判断一段感情有没有结果，但什么又是感情的结果呢？是步入婚姻的殿堂。然后像每对夫妻那样平平安安走到头？还是彼此尽管失散但仍会每天想着对方的好，在心灵深处始终给他留有不可动摇的地位？我们都太年轻，永恒对于我们来说还太远，我们能做到的“结果”，也就是能在用现在时思念对方。当你推开窗子享受凉风遥望明月时，你会想在同一个星空之下的他在干嘛吗? 我蓦地一阵心酸，一股莫名的悲哀奔袭而来，那是种与生俱来的敏感而带来的悲哀，我分不清那悲哀是为了小不点还是为了我自己，那是一种我永远不明所以却又挥之不去的悲哀。
孤独的人永远孤独，存在的只是那气若游丝，显现孤寂、沉沦、彷徨而忧郁的微弱气息。我习惯孤独，可并不代表我喜欢它。它或许已成为我生命中的一部份，生命有不可承受之重，孤独有不可缺少之嫌。
生活中有一种自由叫无聊 生活中有一种美丽叫哀伤 生活中有一种痛苦叫错过
后来，乱乱的采石场，找到了可以相依偎的石头，却再也找不到依偎在身边的她。那晚，她的眼泪砸在我的肩膀，很痛。那时，夜色正浓，她的泪水让我的心痛无法散发。渐渐的爆发了，我狠狠地用小石子砸向石堆。擦出火花，想在每一束火花中遥望到我们曾相爱的影子。现在的我只能用这样落的火花遥望，瞬间即逝。</description>
    </item>
    
    <item>
      <title>jQuery获取表单项目以及AJAX应用</title>
      <link>https://kissjava.cn/posts/jquery%E8%8E%B7%E5%8F%96%E8%A1%A8%E5%8D%95%E9%A1%B9%E7%9B%AE%E4%BB%A5%E5%8F%8Aajax%E5%BA%94%E7%94%A8/</link>
      <pubDate>Wed, 10 Sep 2008 16:06:55 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/jquery%E8%8E%B7%E5%8F%96%E8%A1%A8%E5%8D%95%E9%A1%B9%E7%9B%AE%E4%BB%A5%E5%8F%8Aajax%E5%BA%94%E7%94%A8/</guid>
      <description>1.假如我们有如下页面 Xhtml文件如下： </description>
    </item>
    
    <item>
      <title>CodeIgniter中框架的使用</title>
      <link>https://kissjava.cn/posts/codeigniter%E4%B8%AD%E6%A1%86%E6%9E%B6%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 10 Sep 2008 15:56:22 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/codeigniter%E4%B8%AD%E6%A1%86%E6%9E%B6%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>控制器代码： class Admin extents Control { function index() { $this-&amp;gt;load-&amp;gt;view(&amp;lsquo;admin/index&amp;rsquo;); } function top() { $this-&amp;gt;load-&amp;gt;view(&amp;lsquo;admin/top&amp;rsquo;); } function menu() { $this-&amp;gt;load-&amp;gt;view(&amp;lsquo;admin/menu&amp;rsquo;); } function main() { $this-&amp;gt;load-&amp;gt;view(&amp;lsquo;admin/main&amp;rsquo;); } function bottom() { $this-&amp;gt;load-&amp;gt;view(&amp;lsquo;admin/bottom&amp;rsquo;); } } views文件夹下有个专门的admin文件夹，里面都是管理页面（index.php , top.php , menu.php , main.php , bottom.php）
index.php内容如下： </description>
    </item>
    
    <item>
      <title>对初学者很友好的PHP上传实例</title>
      <link>https://kissjava.cn/posts/%E5%AF%B9%E5%88%9D%E5%AD%A6%E8%80%85%E5%BE%88%E5%8F%8B%E5%A5%BD%E7%9A%84php%E4%B8%8A%E4%BC%A0%E5%AE%9E%E4%BE%8B/</link>
      <pubDate>Wed, 10 Sep 2008 15:45:57 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%AF%B9%E5%88%9D%E5%AD%A6%E8%80%85%E5%BE%88%E5%8F%8B%E5%A5%BD%E7%9A%84php%E4%B8%8A%E4%BC%A0%E5%AE%9E%E4%BE%8B/</guid>
      <description></description>
    </item>
    
    <item>
      <title>最后的祭奠</title>
      <link>https://kissjava.cn/posts/%E6%9C%80%E5%90%8E%E7%9A%84%E7%A5%AD%E5%A5%A0/</link>
      <pubDate>Wed, 10 Sep 2008 15:33:56 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E6%9C%80%E5%90%8E%E7%9A%84%E7%A5%AD%E5%A5%A0/</guid>
      <description>&lt;p&gt;重装系统已经很久,到现在才想到要装一个office,什么时候开始慢慢不写字了的呢?怎么也想不起来,看见曾经为着彼此的文字而惺惺相惜的朋友们.那些认识或者不认识的人们,都还在自己的那一小块地方勤奋地书写着,文思泉涌地。&lt;/p&gt;
&lt;p&gt;看见这些辛勤写字的孩子的时候，（姑且还是称我们为孩子吧，虽然这个词已经被我们用得恶俗，但是我暂时找不到别的词汇来描述我们这样尴尬的一群）我心里会有一种罪恶感，一种堕落了的罪恶感。曾经我也是和他们一样的孩子，善良而倔强，会为着自己所喜爱的文字，音乐，电影，人，事等等等等那些可以触动到心里某块柔软地方的事物所执着，所感动。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PHP演示最简单的MVC模式</title>
      <link>https://kissjava.cn/posts/php%E6%BC%94%E7%A4%BA%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84mvc%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Wed, 10 Sep 2008 14:31:36 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/php%E6%BC%94%E7%A4%BA%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84mvc%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;为了更好的演示MVC的工作方式,我们使用了一个简单的新闻文章发布系统作为例子.分为使用MVC和不使用MVC两种方式.
我们只作一个基本的演示,从数据库里读出一些文章列表,并在页面上显示。一般的流程就是,连接数据库,查询数据库,循环输出html结果。下面的代码就是如此做的。（淡水感觉怪怪的，语言组织得不好。好在代码比较容易理解）&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>数据丢失，从零开始</title>
      <link>https://kissjava.cn/posts/%E6%95%B0%E6%8D%AE%E4%B8%A2%E5%A4%B1%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/</link>
      <pubDate>Wed, 10 Sep 2008 10:48:37 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E6%95%B0%E6%8D%AE%E4%B8%A2%E5%A4%B1%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B/</guid>
      <description>最近QQ上线时间比较少，今天上线后，艾玛童鞋问我博客怎么了，我打开一看，原来空间过期了，忘记续费鸟。
本来数据可以找回的，但是比较麻烦，所以干脆重新搞个独立IP的空间好了，不贵才100块RMB.200M的web空间+50M的mysql。软件环境： Apache 2.2.3 ＋ PHP 5.2.4 + MySQL 5.0.22 架构 ，支持 PHP 5.2.4 / PHP4(文件名须为*.php4或开通共享IP主机) / SHTML / HTML。试试看PHP5到底爽不爽XD.
链接丢失了，希望看到的童鞋联系一下淡水&amp;gt;_&amp;lt;</description>
    </item>
    
    <item>
      <title>CodeIgniter MongoDB Library</title>
      <link>https://kissjava.cn/posts/codeigniter-mongodb-library/</link>
      <pubDate>Thu, 01 Jan 1970 08:00:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/codeigniter-mongodb-library/</guid>
      <description>它能使你的应用在操作MongoDB时保证和active record一致的风格。
1，添加Mongo_db.php 到你的 /application/libraries 文件夹 2，添加mongodb.php 到你的 /application/config 文件夹 3，更你的配置文件
你可以把它设置为autoload，也可以在你的控制器里加载它。
你可以使用codeigniter的active record的方式来操作数据库。
结果会返回相匹配的文档。
select 方法&amp;lt;li&amp;gt;where_lt Where something is less than something&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;where_lte Where something is less than or equal to something&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;where_not_equal Where something is not equal to something&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;where_near` Where something is near to something (2d geospatial search)  order_by Order the resultslimit Limit the number of returned results</description>
    </item>
    
    <item>
      <title>CodeIgniter 带简单权限控制的登录实例</title>
      <link>https://kissjava.cn/posts/codeigniter-%E5%B8%A6%E7%AE%80%E5%8D%95%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6%E7%9A%84%E7%99%BB%E5%BD%95%E5%AE%9E%E4%BE%8B/</link>
      <pubDate>Thu, 01 Jan 1970 08:00:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/codeigniter-%E5%B8%A6%E7%AE%80%E5%8D%95%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6%E7%9A%84%E7%99%BB%E5%BD%95%E5%AE%9E%E4%BE%8B/</guid>
      <description>function __construct() { parent::__construct(); @session_start(); } function login() { unset($_SESSION[&#39;user&#39;]); $email = $this-&amp;gt;input-&amp;gt;post(&#39;email&#39;); $password = md5($this-&amp;gt;input-&amp;gt;post(&#39;password&#39;)); $this-&amp;gt;db-&amp;gt;where(&#39;email&#39;,$email); $this-&amp;gt;db-&amp;gt;where(&#39;password&#39;,$password); $this-&amp;gt;db-&amp;gt;where(&#39;status &amp;lt;&amp;gt;&#39;,0); $query = $this-&amp;gt;db-&amp;gt;get(&#39;users&#39;); if(!$query-&amp;gt;num_rows()!=0) return false; $row = $query-&amp;gt;row_array(); $_SESSION[&#39;user&#39;][&#39;id&#39;] = $row[&#39;id&#39;]; $_SESSION[&#39;user&#39;][&#39;name&#39;] = $row[&#39;name&#39;]; $_SESSION[&#39;user&#39;][&#39;type&#39;] = $row[&#39;type&#39;]; return true; } function logout() { unset($_SESSION[&#39;user&#39;]); } function isPermitted() { $_SESSION[&#39;return&#39;] = $this-&amp;gt;uri-&amp;gt;uri_string(); if(isset($_SESSION[&#39;user&#39;][&#39;type&#39;])) { $uri = substr($this-&amp;gt;uri-&amp;gt;uri_string(), 1); $permitted = $this-&amp;gt;permitted; $indice = $permitted[$_SESSION[&#39;user&#39;][&#39;type&#39;]][&#39;url&#39;]; foreach($indice as $i){ if(eregi(&#39;(&#39;. $i .&#39;)&#39;, $uri)){ unset($_SESSION[&#39;voltar&#39;]); return true; } } return false; } else { redirect(&#39;access/login&#39;,&#39;refresh&#39;); } }  } ?</description>
    </item>
    
  </channel>
</rss>