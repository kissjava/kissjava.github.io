<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>读写文件 on 清风徐来</title>
    <link>https://kissjava.cn/tags/%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6/</link>
    <description>Recent content in 读写文件 on 清风徐来</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>kissjava.cn</copyright>
    <lastBuildDate>Mon, 29 Jul 2019 21:56:00 +0000</lastBuildDate>
    
	<atom:link href="https://kissjava.cn/tags/%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>在Go中读取和写入文件</title>
      <link>https://kissjava.cn/posts/%E5%9C%A8go%E4%B8%AD%E8%AF%BB%E5%8F%96%E5%92%8C%E5%86%99%E5%85%A5%E6%96%87%E4%BB%B6/</link>
      <pubDate>Mon, 29 Jul 2019 21:56:00 +0000</pubDate>
      
      <guid>https://kissjava.cn/posts/%E5%9C%A8go%E4%B8%AD%E8%AF%BB%E5%8F%96%E5%92%8C%E5%86%99%E5%85%A5%E6%96%87%E4%BB%B6/</guid>
      <description>在本教程中，我们将介绍如何使用go语言有效地读取和写入文件系统中的文件。
我们将用于读取和写入这些文件的方法将与文件格式无关。这意味着你将能够使用我们将要覆盖的技术来读写，.txt，.csv，.xls等，这些文件唯一不同的是您写入每种文件类型的数据结构。
##读取文件
main.go
package main// 导入我们需要的2个模块import (&amp;quot;fmt&amp;quot;&amp;quot;io/ioutil&amp;quot;)func main() {// 读取文件 localfile.data 的内容data, err := ioutil.ReadFile(&amp;quot;localfile.data&amp;quot;)// 如果我们的程序无法读取该文件// 打印出它不能读取的原因if err != nil {fmt.Println(err)}// 如果读取成功，将内容打印为字符串fmt.Print(string(data))}##将文件写入新文件 我们已经介绍了Go中的文件读取，现在是时候看看创建和写入我们自己的文件了！ 代码说话：
package mainimport (&amp;quot;fmt&amp;quot;&amp;quot;io/ioutil&amp;quot;)func main() {mydata := []byte(&amp;quot;All the data I wish to write to a file&amp;quot;)// 如果不成功，WriteFile方法返回错误err := ioutil.WriteFile(&amp;quot;myfile.data&amp;quot;, mydata, 0777)// 处理错误，打印出来if err !</description>
    </item>
    
  </channel>
</rss>